[{"/Users/amador/UWEAST-Community-Kitchen/frontend/src/App.js":"1","/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Contact.js":"2","/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Admin.js":"3","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/NavBar.js":"4","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/SearchSection.js":"5","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/OrdersTable.js":"6","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/SearchBar.js":"7","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItem.js":"8","/Users/amador/UWEAST-Community-Kitchen/frontend/src/reportWebVitals.js":"9","/Users/amador/UWEAST-Community-Kitchen/frontend/src/config.js":"10","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/CartPreview.js":"11","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/Banner.js":"12","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItems.js":"13","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuFilterButton.js":"14","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItemPopup.js":"15"},{"size":1133,"mtime":1611646058299,"results":"16","hashOfConfig":"17"},{"size":482,"mtime":1611204935534,"results":"18","hashOfConfig":"17"},{"size":33912,"mtime":1612836300986,"results":"19","hashOfConfig":"17"},{"size":3480,"mtime":1611646058304,"results":"20","hashOfConfig":"17"},{"size":322,"mtime":1612836300982,"results":"21","hashOfConfig":"17"},{"size":11619,"mtime":1612836300982,"results":"22","hashOfConfig":"17"},{"size":300,"mtime":1611646058305,"results":"23","hashOfConfig":"17"},{"size":757,"mtime":1612836300982,"results":"24","hashOfConfig":"17"},{"size":362,"mtime":1610411291970,"results":"25","hashOfConfig":"17"},{"size":191,"mtime":1610411291969,"results":"26","hashOfConfig":"17"},{"size":2748,"mtime":1612836285838,"results":"27","hashOfConfig":"17"},{"size":360,"mtime":1612836300982,"results":"28","hashOfConfig":"17"},{"size":689,"mtime":1612836285840,"results":"29","hashOfConfig":"17"},{"size":451,"mtime":1611646058300,"results":"30","hashOfConfig":"17"},{"size":9811,"mtime":1612845803540,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wx0vlp",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/amador/UWEAST-Community-Kitchen/frontend/src/App.js",[],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Contact.js",["65"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Admin.js",["66","67","68","69","70","71","72","73","74","75","76","77"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/NavBar.js",["78","79","80","81","82"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/SearchSection.js",["83","84","85"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/OrdersTable.js",["86","87"],"import React from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport '../css/Orders.css';\n\nimport {\n  createMuiTheme,\n  MuiThemeProvider,\n} from \"@material-ui/core/styles\";\n\n//Converts the data to an object list\nfunction createData(name, description, size, quantity) {\n  return { name, description, size, quantity };\n}\n\n/**\n * This function is used to render the row when the table row is clicked. Toggles view onClick\n * Of the original table row. Renders the order details of the selected order.\n * \n * @param {Object} rowData - info of the row clicked \n * @param {Object} rowMeta - index of the data\n */\nconst renderRow = (rowData, rowMeta) => {\n    const rows = []\n    const length = rowData[5].length;\n\n    //Format the row information\n    for(let i = 0; i < length; i++) {\n      rows.push(createData(rowData[5][i].item, rowData[5][i].extra, rowData[5][i].size, rowData[5][i].quantity));\n    }\n\n    return (\n        <React.Fragment>\n          <TableRow>\n            <TableCell style={{ padding: 0 }} colSpan={8}>\n              <TableContainer>\n                <Table aria-label=\"simple table\">\n                {/* The dropdown header */}\n                  <TableHead>\n                    <TableRow style={{border: 'none'}}>\n                      <TableCell></TableCell>\n                      <TableCell style={{width: 'calc(23.5%)'}}>Items</TableCell>\n                      <TableCell style={{width: 'calc(31%)'}}>Special Instructions</TableCell>\n                      <TableCell style={{width: 'calc(28.6%)'}}>Size</TableCell>\n                      <TableCell>Quantity</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                  {/* The dropdown row data */}\n                    {rows.map(row => (\n                      <TableRow key={row.name}>\n                        <TableCell style={{width: 'calc(48px)'}}></TableCell>\n                        <TableCell>{row.name}</TableCell>\n                        <TableCell>{row.description}</TableCell>\n                        <TableCell>{row.size}</TableCell>\n                        <TableCell>{row.quantity}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </TableCell>\n          </TableRow>\n        </React.Fragment>   \n    )\n}\n\n//This displays the filters in the top left\nconst renderDateFilters = (options) => {\n  if (options[0] && options[1]) {\n    return `Start Date: ${options[0]}, End Date: ${options[1]}`;\n  }\n\n  return [];\n}\n\n/**\n * This updates the filterList when it is closed\n * \n * @param {List} filterList \n * @param {int} filterPos \n * @param {int} index \n */\nconst updateDateFilters = (filterList, filterPos, index) => {\n  if (filterPos === 0) {\n    filterList[index].splice(filterPos, 2, '');\n  } else if (filterPos === 1) {\n    filterList[index].splice(filterPos, 1);\n  } else if (filterPos === -1) {\n    filterList[index] = [];\n  }\n\n  return filterList;  \n}\n\n/**\n * This renders the select dropdown in the filter dropdown\n * \n * @param {Object} filterList \n * @param {Function} onChange \n * @param {Index} index \n * @param {Array} column \n */\nconst DisplayStatusFilters = (filterList, onChange, index, column) => {\n  \n  const filterStatus = (event, picker) => {\n    filterList[index][0] = event.target.value;\n    //Update the filter \n    onChange(filterList[index], index, column);\n  } \n  \n  return (\n    <FormControl >\n      <InputLabel id=\"demo-simple-select-label\">Order Status</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={filterList[index][0] ? filterList[index][0] : \"All Orders\"}\n        onChange={filterStatus}\n      >\n        {/* All possible options */}\n        <MenuItem value={\"All Orders\"}>All Orders</MenuItem>\n        <MenuItem value={\"Pending Orders\"}>Pending Orders</MenuItem>\n        <MenuItem value={\"Completed Orders\"}>Completed Orders</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\n/**\n * This function displays the date range picker when clicking on the\n * textfield inside the filters modal\n * @param {List} filterList \n * @param {Function} onChange \n * @param {int} index \n * @param {int} column \n */\nconst DisplayDateFilters = (filterList, onChange, index, column) => {  \n  //Get the initial start date and end date for the date filter\n  const initialStartDate = new Date();\n  const initialEndDate = new Date();\n  initialEndDate.setDate(initialStartDate.getDate()+7);\n\n  const startDate = initialStartDate.getMonth()+1 + \"/\" + initialStartDate.getDate() + \"/\" + initialStartDate.getFullYear();\n  const endDate = initialEndDate.getMonth()+1 + \"/\" + initialEndDate.getDate() + \"/\" + initialEndDate.getFullYear();\n\n  //Called when the \"apply\" button is clicked\n  const saveDate = (event, picker) => {\n    const split = event.target.value.split(\" - \");\n    filterList[index] = [split[0], split[1]];\n    onChange(filterList[index], index, column);\n  }\n\n  return (\n    <div style={{width: '20vw'}}>\n      <label>{index === 0 ? 'Pick Up Details' : 'Submission Details'}</label>\n      <DateRangePicker\n        initialSettings={{ startDate: filterList[index][0] || startDate, endDate: filterList[index][1] || endDate}}\n        onApply={saveDate}\n      >\n        <input type=\"text\" className=\"form-control\" />\n      </DateRangePicker>\n    </div>\n  );\n}\n\n/**\n * This is called when the user changes the status of the \n * order \n * \n * @param {String} value \n * @param {Object} tableMeta \n * @param {Function} updateValue \n * @param {Object} e \n */\nconst updateStatus = (value, tableMeta, updateValue, e) => {\n  const config = require('../config');\n  const BACKEND_URL = config.backend.uri;\n  \n  const setValue = (value === \"Completed Orders\") ? \"Pending Orders\" : \"Completed Orders\";\n  const getRowId = tableMeta.rowData[8];\n  \n  const requestBody = {\n    _id: getRowId,\n    isCompleted: (value === \"Completed Orders\") ? false : true\n  }\n\n  fetch(`${BACKEND_URL}order/updatestatus`, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n  }).then(async result => {\n      if (result.ok) console.log(result.statusText);\n      updateValue(setValue, tableMeta.rowIndex);\n    })\n    .catch(e => {\n        console.log(e);\n    });\n}\n\n/**\n * This renders the Order status dropdown\n * \n * @param {boolean} value - The value to pass in\n * @param {object} tableMeta - Information about the row\n */\nconst renderStatus = (value, tableMeta, updateValue) => {\n  return (\n    <div className=\"orders-status\">\n        <select className={(value === \"Completed Orders\") ? \"dropdown-menu-completed\" : \"dropdown-menu-pending\"} value={value} \n        onChange={(e) => updateStatus(value, tableMeta, updateValue, e)}\n            onClick={(e) => {\n                //This prevents the current row from expanding\n                e.stopPropagation();\n            }}>\n            <option value={\"Pending Orders\"}>Pending</option>\n            <option value={\"Completed Orders\"}>Completed</option>\n        </select> \n    </div>  \n  )\n}\n\nexport default function OrdersTable(props) {\n  \n  const options = {\n    filter: true,\n    expandableRowsOnClick: true,\n    expandableRows: true,\n    selectableRows: 'none',\n    rowsPerPageOptions: [10, 25, 50],\n    renderExpandableRow: renderRow,\n    searchOpen: true,\n  };\n\n  //The column headers for the table\nconst columns = [\n  {\n    name: \"Pick up Details\",\n    options: {\n      filter: true,\n      filterType: 'custom',\n      customFilterListOptions: {\n        render: renderDateFilters,\n        update: updateDateFilters\n      },\n      filterOptions: {\n        names: [],\n        logic(date, filters) {\n          const getDate = date.split(\"\\n\")[0];\n          if (filters[0] && filters[1]) {\n            return getDate < filters[0] || getDate > filters[1];\n          } else if (filters[0]) {\n            return getDate < filters[0];\n          } else if (filters[1]) {\n            return getDate > filters[1];\n          }\n          return false;\n        },\n        display: DisplayDateFilters\n      }\n    }  \n  },\n  {\n    name: \"Name\",\n    options: {\n      filter: true,\n      filterType: 'textField'\n    }  \n  },\n  {\n    name: \"Email\",\n    options: {\n      filter: true,\n      filterType: 'textField'\n    }    \n  },\n  {\n    name: \"Phone Number\",\n    options: {\n      filter: true,\n      filterType: 'textField'\n    }  \n  },\n  {\n    name: \"Amount Paid\",\n    options: {\n      filter: false\n    }  \n  },\n  {\n    name: \"Order Description\",\n    options: {\n      display: false, \n      viewColumns: false, \n      filter: false\n    }\n  },\n  {\n    name: \"Submission Details\",\n    options: {\n      filter: true,\n      filterType: 'custom',\n      customFilterListOptions: {\n        render: renderDateFilters,\n        update: updateDateFilters\n      },\n      filterOptions: {\n        names: [],\n        logic(date, filters) {\n          const getDate = date.split(\"\\n\")[0];\n          if (filters[0] && filters[1]) {\n            return getDate < filters[0] || getDate > filters[1];\n          } else if (filters[0]) {\n            return getDate < filters[0];\n          } else if (filters[1]) {\n            return getDate > filters[1];\n          }\n          return false;\n        },\n        display: DisplayDateFilters\n      }\n    }  \n  },\n  {\n    name: \"Order Status\",\n    options: {\n      filter: true,\n      filterType: 'custom',\n      customBodyRender: renderStatus,\n      customFilterListOptions: {\n        render: (options) => {\n          if(options[0] === \"All Orders\") return [];\n          return options;\n        },\n      },\n      filterOptions: {\n        names: [\"Pending Orders\", \"Completed Orders\"],\n        logic(order, filters) {\n          if (filters[0] == \"Completed Orders\") {\n            return order === \"Pending Orders\";\n          } else if (filters[0] == \"Pending Orders\") {\n            return order === \"Completed Orders\";\n          }\n\n          return false;\n        },\n        display: DisplayStatusFilters\n      }\n    }\n  },\n  {\n    name: \"Row ID\",\n    options: {\n      display: false, \n      viewColumns: false, \n      filter: false\n    }\n  }\n  ];\n\n  const getMuiTheme = () =>\n  createMuiTheme({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none',\n        },\n      },\n      MuiTableRow: {\n        root: {\n          borderLeft: '2px solid #CCCCCC',\n          borderRight: '2px solid #CCCCCC',\n        }\n      },\n      MuiTableCell: {\n        root: {\n          fontFamily: 'Roboto, sans-serif',\n          fontSize: 'calc(16px)',\n          borderBottom: '2px solid #CCCCCC',\n        }\n      }\n    },\n  });\n\n  return (\n      <MuiThemeProvider theme={getMuiTheme()}>\n        <MUIDataTable\n          title={\"Order History\"}\n          data={props.orders}\n          columns={columns}\n          options={options}\n      />\n      </MuiThemeProvider>\n  )\n}",["88","89"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/SearchBar.js",["90","91"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItem.js",["92","93"],"import React from 'react';\nimport \"../css/MenuItem.css\";\nconst config = require('../config');\n\nconst MenuItem = ( {description, image, price, title, togglePopup, dietaryInfo, priceOptions, accommodations} ) => {\n    return (\n      <div className=\"menu-item\" onClick={() => togglePopup(title, description, priceOptions, image, dietaryInfo, accommodations)}>\n        <div className=\"menu-image\">\n          <img src={image}></img>\n        </div>\n        <div className=\"menu-text\">\n          <h3 className=\"menu-name\">{title}</h3>\n          <p className=\"menu-description\">{description}</p>\n        </div>\n        <div className=\"menu-absolutes\">\n          <p className=\"menu-price\">${price}</p>\n        </div>\n      </div>\n    );\n}\n  \nexport default MenuItem;","/Users/amador/UWEAST-Community-Kitchen/frontend/src/reportWebVitals.js",[],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/config.js",[],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/CartPreview.js",["94","95","96","97","98"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/Banner.js",["99","100"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItems.js",["101","102"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuFilterButton.js",["103","104"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItemPopup.js",["105","106","107","108","109","110"],{"ruleId":"111","severity":1,"message":"112","line":6,"column":7,"nodeType":"113","messageId":"114","endLine":6,"endColumn":18},{"ruleId":"115","severity":1,"message":"116","line":200,"column":79,"nodeType":"117","messageId":"118","endLine":200,"endColumn":81},{"ruleId":"115","severity":1,"message":"116","line":254,"column":79,"nodeType":"117","messageId":"118","endLine":254,"endColumn":81},{"ruleId":"119","severity":1,"message":"120","line":287,"column":27,"nodeType":"121","messageId":"122","endLine":287,"endColumn":29},{"ruleId":"123","severity":1,"message":"124","line":332,"column":90,"nodeType":"125","endLine":332,"endColumn":105},{"ruleId":"123","severity":1,"message":"124","line":341,"column":90,"nodeType":"125","endLine":341,"endColumn":105},{"ruleId":"123","severity":1,"message":"124","line":350,"column":90,"nodeType":"125","endLine":350,"endColumn":105},{"ruleId":"123","severity":1,"message":"124","line":359,"column":90,"nodeType":"125","endLine":359,"endColumn":105},{"ruleId":"123","severity":1,"message":"124","line":495,"column":90,"nodeType":"125","endLine":495,"endColumn":105},{"ruleId":"123","severity":1,"message":"124","line":504,"column":90,"nodeType":"125","endLine":504,"endColumn":105},{"ruleId":"123","severity":1,"message":"124","line":513,"column":90,"nodeType":"125","endLine":513,"endColumn":105},{"ruleId":"123","severity":1,"message":"124","line":522,"column":90,"nodeType":"125","endLine":522,"endColumn":105},{"ruleId":"115","severity":1,"message":"116","line":622,"column":79,"nodeType":"117","messageId":"118","endLine":622,"endColumn":81},{"ruleId":"126","severity":1,"message":"127","line":10,"column":5,"nodeType":"128","messageId":"129","endLine":10,"endColumn":47},{"ruleId":"126","severity":1,"message":"127","line":13,"column":5,"nodeType":"128","messageId":"129","endLine":13,"endColumn":66},{"ruleId":"126","severity":1,"message":"127","line":17,"column":5,"nodeType":"128","messageId":"129","endLine":17,"endColumn":59},{"ruleId":"126","severity":1,"message":"127","line":24,"column":5,"nodeType":"128","messageId":"129","endLine":24,"endColumn":109},{"ruleId":"126","severity":1,"message":"127","line":33,"column":5,"nodeType":"128","messageId":"129","endLine":33,"endColumn":74},{"ruleId":"111","severity":1,"message":"130","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"131","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":6,"column":7,"nodeType":"113","messageId":"114","endLine":6,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":355,"column":26,"nodeType":"121","messageId":"122","endLine":355,"endColumn":28},{"ruleId":"119","severity":1,"message":"120","line":357,"column":33,"nodeType":"121","messageId":"122","endLine":357,"endColumn":35},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"111","severity":1,"message":"130","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":4,"column":7,"nodeType":"113","messageId":"114","endLine":4,"endColumn":18},{"ruleId":"111","severity":1,"message":"136","line":3,"column":7,"nodeType":"113","messageId":"114","endLine":3,"endColumn":13},{"ruleId":"137","severity":1,"message":"138","line":9,"column":11,"nodeType":"139","endLine":9,"endColumn":28},{"ruleId":"111","severity":1,"message":"140","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":37},{"ruleId":"141","severity":1,"message":"142","line":24,"column":21,"nodeType":"143","endLine":24,"endColumn":31},{"ruleId":"141","severity":1,"message":"142","line":25,"column":21,"nodeType":"143","endLine":25,"endColumn":31},{"ruleId":"141","severity":1,"message":"142","line":26,"column":21,"nodeType":"143","endLine":26,"endColumn":31},{"ruleId":"141","severity":1,"message":"142","line":27,"column":21,"nodeType":"143","endLine":27,"endColumn":31},{"ruleId":"111","severity":1,"message":"144","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":24},{"ruleId":"111","severity":1,"message":"136","line":4,"column":7,"nodeType":"113","messageId":"114","endLine":4,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":6,"column":7,"nodeType":"113","messageId":"114","endLine":6,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":15,"column":74,"nodeType":"125","endLine":15,"endColumn":83},{"ruleId":"111","severity":1,"message":"130","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":5,"column":7,"nodeType":"113","messageId":"114","endLine":5,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":16,"column":17,"nodeType":"121","messageId":"122","endLine":16,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":21,"column":22,"nodeType":"121","messageId":"122","endLine":21,"endColumn":24},{"ruleId":"119","severity":1,"message":"120","line":48,"column":118,"nodeType":"121","messageId":"122","endLine":48,"endColumn":120},{"ruleId":"119","severity":1,"message":"120","line":63,"column":48,"nodeType":"121","messageId":"122","endLine":63,"endColumn":50},{"ruleId":"111","severity":1,"message":"145","line":89,"column":21,"nodeType":"113","messageId":"114","endLine":89,"endColumn":24},{"ruleId":"119","severity":1,"message":"120","line":96,"column":30,"nodeType":"121","messageId":"122","endLine":96,"endColumn":32},"no-unused-vars","'BACKEND_URL' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Component' is defined but never used.","'SearchBar' is defined but never used.","no-native-reassign",["146"],"no-negated-in-lhs",["147"],"'config' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'MenuFilterButton' is defined but never used.","'key' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]