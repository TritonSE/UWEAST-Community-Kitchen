[{"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\index.js":"1","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\App.js":"3","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Admin.js":"4","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Contact.js":"5","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\About.js":"6","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Login.js":"7","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Register.js":"8","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Menu.js":"9","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\ResetPassword.js":"10","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Orders.js":"11","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\config.js":"12","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\NavBar.js":"13","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\ContactMap.js":"14","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\SearchSection.js":"15","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\ContactForm.js":"16","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuSection.js":"17","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\Banner.js":"18","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\OrdersTable.js":"19","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\util\\Auth.js":"20","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\CartPreview.js":"21","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\ChangeEmailScreen.js":"22","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\PayPal.js":"23","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\AdminMenuItems.js":"24","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\ForgotPasswordDialogue.js":"25","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\EditMenuItemModal.js":"26","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\AddMenuItemModal.js":"27","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuItems.js":"28","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuFilter.js":"29","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\OrdersTableColumns.js":"30","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\util\\OrdersTableFunctions.js":"31","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuFilterButton.js":"32","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuItemCategory.js":"33","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuItemPopup.js":"34","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuItem.js":"35","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\ChangeHeaderModal.js":"36","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Emails.js":"37","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\ChangeSecondaryEmailScreen.js":"38"},{"size":517,"mtime":1610307420384,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1610307420390,"results":"41","hashOfConfig":"40"},{"size":1410,"mtime":1613079871705,"results":"42","hashOfConfig":"40"},{"size":4762,"mtime":1614232810810,"results":"43","hashOfConfig":"40"},{"size":777,"mtime":1614230870692,"results":"44","hashOfConfig":"40"},{"size":1541,"mtime":1613890037106,"results":"45","hashOfConfig":"40"},{"size":6328,"mtime":1613890037112,"results":"46","hashOfConfig":"40"},{"size":8059,"mtime":1613890037122,"results":"47","hashOfConfig":"40"},{"size":1794,"mtime":1614230870695,"results":"48","hashOfConfig":"40"},{"size":7788,"mtime":1613890037124,"results":"49","hashOfConfig":"40"},{"size":5097,"mtime":1614230870697,"results":"50","hashOfConfig":"40"},{"size":309,"mtime":1613542707375,"results":"51","hashOfConfig":"40"},{"size":6219,"mtime":1614234669477,"results":"52","hashOfConfig":"40"},{"size":2762,"mtime":1614230870671,"results":"53","hashOfConfig":"40"},{"size":1224,"mtime":1614230870678,"results":"54","hashOfConfig":"40"},{"size":3089,"mtime":1613890037041,"results":"55","hashOfConfig":"40"},{"size":4499,"mtime":1613890037056,"results":"56","hashOfConfig":"40"},{"size":451,"mtime":1614230870664,"results":"57","hashOfConfig":"40"},{"size":5150,"mtime":1614230870674,"results":"58","hashOfConfig":"40"},{"size":1418,"mtime":1613890037127,"results":"59","hashOfConfig":"40"},{"size":3199,"mtime":1613079871711,"results":"60","hashOfConfig":"40"},{"size":5178,"mtime":1614230870666,"results":"61","hashOfConfig":"40"},{"size":7944,"mtime":1614232810798,"results":"62","hashOfConfig":"40"},{"size":21452,"mtime":1614232810792,"results":"63","hashOfConfig":"40"},{"size":3821,"mtime":1613079871715,"results":"64","hashOfConfig":"40"},{"size":26075,"mtime":1614232810796,"results":"65","hashOfConfig":"40"},{"size":25548,"mtime":1614232810790,"results":"66","hashOfConfig":"40"},{"size":946,"mtime":1613890037054,"results":"67","hashOfConfig":"40"},{"size":925,"mtime":1613890037044,"results":"68","hashOfConfig":"40"},{"size":3836,"mtime":1614230870676,"results":"69","hashOfConfig":"40"},{"size":6280,"mtime":1613890037131,"results":"70","hashOfConfig":"40"},{"size":1061,"mtime":1613890037046,"results":"71","hashOfConfig":"40"},{"size":3262,"mtime":1613890037050,"results":"72","hashOfConfig":"40"},{"size":11976,"mtime":1613890037052,"results":"73","hashOfConfig":"40"},{"size":1035,"mtime":1614230870673,"results":"74","hashOfConfig":"40"},{"size":5808,"mtime":1614230870668,"results":"75","hashOfConfig":"40"},{"size":3784,"mtime":1614230870693,"results":"76","hashOfConfig":"40"},{"size":7065,"mtime":1614230870669,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1wzwk4m",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"80"},"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\index.js",[],["173","174"],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\App.js",["175"],"import './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport Menu from './pages/Menu';\r\nimport About from './pages/About';\r\nimport Admin from './pages/Admin';\r\nimport Contact from './pages/Contact';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport ResetPassword from './pages/ResetPassword';\r\nimport Orders from './pages/Orders';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      {/* Switch gurantees that a URL can match to only one route*/}\r\n      <Switch>\r\n        {/* Login Page */}\r\n        <Route exact path=\"/login\">\r\n          <Login/>\r\n        </Route>\r\n        {/* Register Page */}\r\n        <Route exact path=\"/register\">\r\n          <Register/>\r\n        </Route>\r\n        {/* Reset Password Page */}\r\n        <Route exact path=\"/reset-password\">\r\n          <ResetPassword/>\r\n        </Route>\r\n        {/* About Page */}\r\n        <Route exact path=\"/about\">\r\n          <About/>\r\n        </Route>\r\n        {/* Contact Page */}\r\n        <Route exact path=\"/contact\">\r\n          <Contact/>\r\n        </Route>\r\n        {/* Admin Page */}\r\n        <Route exact path=\"/admin\">\r\n          <Admin/>\r\n        </Route>\r\n        {/* Any other URL is automatically matched to Menu Page */}\r\n        <Route path=\"/\">\r\n          <Menu/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Admin.js",["176"],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Contact.js",["177","178"],"/**\r\n * This page renders the contact page which has the contact form and map.\r\n * \r\n * @summary   Renders the contact page.\r\n */\r\n\r\nimport React from 'react';\r\nimport Navbar from '../components/NavBar';\r\nimport ContactMap from '../components/ContactMap';\r\nimport ContactForm from '../components/ContactForm';\r\nimport \"../css/Contact.css\";\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"contact-wrapper\">\r\n                <div className=\"contact-map-section\">\r\n                    <ContactMap />\r\n                </div>\r\n                <div className=\"contact-form-section\">\r\n                    <ContactForm />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default Contact;","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\About.js",["179"],"import React, { Component} from 'react';\r\nimport Navbar from '../components/NavBar';\r\nimport PayPal from '../components/PayPal';\r\n\r\nconst config = require('../config');\r\n\r\nconst BACKEND_URL = config.backend.uri;\r\n\r\nclass About extends Component {\r\n\r\n    // For paypal payment handling, we assume the cart passed into the PayPal object looks like...\r\n    // {\r\n    //     item_total: \"\",\r\n    //     tax_total: \"\",\r\n    //     items: [\r\n    //         {\r\n    //             name: \"\",\r\n    //             quantity: \"\", \r\n    //             size: \"\", (Individual or Family)\r\n    //             addons: [\"\", \"\"], (Sides, gluten free)\r\n    //             individual_price: \"\", (price per item)\r\n    //             individual_tax: \"\", (tax per item)\r\n    //         },\r\n\r\n    //     ]\r\n    // }\r\n    \r\n    render (){\r\n    const cart = {\r\n        cart_total: \"15.00\",\r\n        item_total: \"12.00\",\r\n        tax_total: \"3.00\",\r\n        items: [\r\n            {\r\n                name: \"Food 1\",\r\n                quantity: \"2\",\r\n                size: \"Individual\",\r\n                addons: [\"Gluten Free\"],\r\n                individual_price: \"6.00\",\r\n                individual_tax: \"1.50\",\r\n            },\r\n        ],\r\n        pickup_date: \"2021-02-04\"\r\n    }\r\n      return (\r\n\r\n          <div>\r\n              <Navbar/>\r\n              <div style={{marginTop: \"30px\"}}>\r\n                  This is the About Page.\r\n              </div>\r\n              <PayPal cart={cart}/>           \r\n          </div>\r\n\r\n      )\r\n    }\r\n  }\r\n  \r\n  export default About;","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Login.js",["180"],"import React from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { \r\n  TextField, Button,  \r\n  Snackbar, Typography \r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../css/Login.css';\r\nimport { isAuthenticated, setJWT} from '../util/Auth';\r\nimport Navbar from '../components/NavBar';\r\nimport { useEffect } from 'react';\r\nconst config = require('../config');\r\n\r\n\r\nconst BACKEND_URL = config.backend.uri;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  centered: {\r\n    textAlign: 'center'\r\n  },\r\n  form: {\r\n    //Input Field - General Layout\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '95%'\r\n    },\r\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: \"black\"\r\n    },\r\n    \"& .MuiInputLabel-outlined.Mui-focused\": {\r\n      color: \"black\"\r\n    },\r\n    '& .MuiTypography-root': {\r\n      margin: theme.spacing(1),\r\n      width: '100%'\r\n    },\r\n\r\n    '& .MuiButton-root': {\r\n      margin: theme.spacing(3),\r\n      color: 'black',\r\n      background: '#F9CE1D',\r\n      width:'30%'\r\n    }\r\n  },\r\n  title: {\r\n    margin: theme.spacing(2),\r\n    textAlign: 'center',\r\n    fontWeight: 'bolder',\r\n    textTransform: 'uppercase'\r\n  }\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [state, setState] = React.useState({\r\n    isAuthenticatingUser: true,\r\n    isUserAuthenticated: false,\r\n    email: '',\r\n    password: '',\r\n    snack: {\r\n      message: '',\r\n      open: false\r\n    },\r\n    errors: {\r\n      email: false,\r\n      password: false\r\n    },\r\n    form_disabled: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    isAuthenticated().then(async result => {\r\n      setState({...state, isAuthenticatingUser: false, isUserAuthenticated: result});\r\n    })\r\n  }, []);\r\n\r\n  // Updates given state with given value \r\n  const handleChange = (prop) => (event) => {\r\n    setState({ ...state, [prop]: event.target.value });\r\n  };\r\n\r\n  \r\n  // Handles submission of the form (button click)\r\n  // Validates form data for completion/length, making a backend request to Users DB for user authetnication. If\r\n  // user is authenticated, user is redirected to admin page. Otherwise, an error message appears. \r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setState({ ...state, form_disabled: true });\r\n    const submission = {\r\n      email: state.email,\r\n      password: state.password\r\n    };\r\n\r\n    //Check if either field is empty\r\n    let email = false;\r\n    let password = false; \r\n\r\n    if(state.email === ''){\r\n        email = true;\r\n    }\r\n    if(state.password === ''){\r\n        password = true;\r\n    }\r\n    if(email + password > 0){\r\n        setState({...state, errors: {email: email, password: password}, form_disabled: false, snack: {message: 'Please fill out all required fields.', open: true}});\r\n        return;\r\n    }\r\n   \r\n    //Check Password Length\r\n    if (submission.password.length < 6) {\r\n      setState({...state, errors: {email: false, password: true}, form_disabled: false, snack: {message: 'Password must be at least 6 characters long.', open: true}});\r\n      return;\r\n    }\r\n    try {\r\n        //Attempt to login with given credentials \r\n      const response = await fetch(`${BACKEND_URL}user/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(submission)\r\n      });\r\n\r\n      //Successful Login\r\n      if (response.ok) {\r\n        const json = await response.json();\r\n        setJWT(json.token);\r\n        history.push(\"/admin\");\r\n      }\r\n      //Invalid Credentials\r\n      else if (response.status === 401) {\r\n        setState({...state, errors: {email: true, password: true}, form_disabled: false, snack: {message: 'Invalid Login: Email or password not recognized.', open: true}});\r\n      }\r\n      //Any other server response\r\n      else {\r\n        const text = await response.text();\r\n        setState({...state, form_disabled: false, errors: {email: false, password: false}, snack: {message: `Could not log in: ${text}`, open: true}});\r\n      }\r\n    } \r\n    //General Error\r\n    catch (error) {\r\n      setState({...state, form_disabled: false, errors: {email: false, password: false}, snack: {message: `An error occurred: ${error.message}`, open: true}});\r\n    }\r\n  };\r\n\r\n  //Error Message Display: Auto close itself by updating its states\r\n  const handleSnackClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setState({...state, snack: {...state.snack, open: false}});\r\n  };\r\n\r\n  if(state.isAuthenticatingUser){\r\n    return(\r\n      <div>\r\n        <Navbar/>\r\n        <p> Loading... </p>\r\n      </div>\r\n    )\r\n  } else if(state.isUserAuthenticated){\r\n    return(\r\n      <Redirect to=\"/admin\"/>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Navbar/>\r\n        <div className=\"Main\">\r\n          <div className=\"Border\">\r\n            <Typography variant=\"h4\" className={classes.title} style={{fontSize: \"2.5rem\"}} > Login </Typography>\r\n            <p className={classes.centered} style={{color: \"#8d8d8d\"}}> Sign-in into an existing account below </p>\r\n            <form className={classes.form} onSubmit={handleSubmit}>\r\n                  <TextField label='Email' variant='outlined' type='email' onChange={handleChange('email')} error={state.errors.email}/>\r\n                  <TextField label='Password' variant='outlined' type='password' onChange={handleChange('password')} error={state.errors.password}/>\r\n                  <Link to=\"register\" className=\"Child\"><Typography>Register Account</Typography></Link>\r\n                  <Link to=\"reset-password\"><Typography>Reset Password</Typography></Link>\r\n                  <div className={classes.centered}>\r\n                      <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={state.form_disabled}\r\n                      // style={{fontWeight: \"bolder\", borderRadius: \"3px\", fontSize: \"16px\"}}\r\n                      >Login</Button>\r\n                  </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <Snackbar open={state.snack.open} autoHideDuration={6000} onClose={handleSnackClose} message={state.snack.message}/>\r\n      </div>\r\n    );\r\n  }\r\n}","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Register.js",["181"],"import React, { useEffect } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { \r\n  TextField, Button, Grid, \r\n  Snackbar, Typography \r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { isAuthenticated, setJWT } from '../util/Auth';\r\nimport Navbar from '../components/NavBar';\r\nimport \"../css/Register.css\";\r\nconst config = require('../config');\r\n\r\nconst BACKEND_URL = config.backend.uri;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  centered: {\r\n    textAlign: 'center'\r\n  },\r\n  form: {\r\n    //Input Field - General Layout\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '95%'\r\n    },\r\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: \"black\"\r\n    },\r\n    \"& .MuiInputLabel-outlined.Mui-focused\": {\r\n      color: \"black\"\r\n    },\r\n    '& .MuiTypography-root': {\r\n      margin: theme.spacing(1),\r\n      width: '100%'\r\n    },\r\n\r\n    '& .MuiButton-root': {\r\n      margin: theme.spacing(3),\r\n      color: 'black',\r\n      background: '#F9CE1D',\r\n      width:'30%'\r\n    }\r\n  },\r\n  title: {\r\n    margin: theme.spacing(2),\r\n    textAlign: 'center',\r\n    fontWeight: 'bolder',\r\n    textTransform: 'uppercase'\r\n  }\r\n}));\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [state, setState] = React.useState({\r\n    isAuthenticatingUser: true,\r\n    isUserAuthenticated: false,\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    secret: '',\r\n    snack: {\r\n      message: '',\r\n      open: false\r\n    },\r\n    errors: {\r\n      email: false,\r\n      password: false,\r\n      passwordConfirmation: false,\r\n      secret: false\r\n    },\r\n    form_disabled: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    isAuthenticated().then(async result => {\r\n      setState({...state, isAuthenticatingUser: false, isUserAuthenticated: result});\r\n    })\r\n  }, []);\r\n\r\n  // Updates given state with given value \r\n  const handleChange = (prop) => (event) => {\r\n    setState({ ...state, [prop]: event.target.value });\r\n  };\r\n\r\n  // Handles submission of the form (button click)\r\n  // Validates form data for completion/length, making a backend request to Users DB for secret key autentication + \r\n  // email uniqueness. If register succeeds, user is redirected to admin page and added to user DB. Otherwise, an error message appears. \r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setState({ ...state, form_disabled: true });\r\n\r\n    const submission = {\r\n      email: state.email,\r\n      password: state.password,\r\n      secret: state.secret\r\n    };\r\n\r\n    let email = false;\r\n    let password = false; \r\n    let passwordConfirmation = false;\r\n    let secret = false; \r\n\r\n    //Check if any field is empty\r\n    if (state.email === ''){\r\n        email = true;\r\n    }\r\n    if (state.password === ''){\r\n        password = true;\r\n    }\r\n    if (state.passwordConfirmation === ''){\r\n      passwordConfirmation = true;\r\n    }\r\n    if (state.secret === ''){\r\n      secret = true;\r\n    }\r\n    if(email + password + passwordConfirmation + secret > 0){\r\n        setState({...state, errors: {email: email, password: password, passwordConfirmation: passwordConfirmation, secret: secret}, form_disabled: false, snack: {message: 'Please fill out all required fields.', open: true}});\r\n        return;\r\n    }\r\n    //Check Password Length\r\n    if (submission.password.length < 6) {\r\n      setState({...state, errors: {email: false, password: true, passwordConfirmation: false, secret: false}, form_disabled: false,  snack: {message: 'Password must be at least 6 characters long.', open: true}});\r\n      return;\r\n    }\r\n\r\n    //Check Passwords Match\r\n    if (state.password !== state.passwordConfirmation) {\r\n      setState({...state,errors: {email: false, password: true, passwordConfirmation: true, secret: false}, form_disabled: false, snack: {message: 'Passwords Do Not Match.', open: true}});\r\n      return;\r\n    }\r\n\r\n    try {\r\n        //Attempt to register with given credentials \r\n      const response = await fetch(`${BACKEND_URL}user/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(submission)\r\n      });\r\n\r\n      //Successful Registration\r\n      if (response.ok) {\r\n        const json = await response.json();\r\n        setJWT(json.token);\r\n        history.push(\"/admin\");\r\n      }\r\n      //Invalid Credentials \r\n      else if (response.status === 401) {\r\n        setState({...state, errors: {email: false, password: false, passwordConfirmation: false, secret: true}, form_disabled: false, snack: {message: 'Could not register account: Invalid Secret Key!', open: true}});\r\n      }\r\n       //Duplicate User \r\n      else if (response.status === 409) {\r\n        setState({...state, form_disabled: false, errors: {email: true, password: false, passwordConfirmation: false, secret: false}, snack: {message: 'Could not register account: Email already in use!', open: true}});\r\n      }\r\n      //Any other server response\r\n      else {\r\n        const text = await response.text();\r\n        setState({...state, errors: {email: false, password: false, passwordConfirmation: false, secret: false}, form_disabled: false, snack: {message: `Could not register account: ${text}`, open: true}});\r\n      }\r\n    } \r\n    //General Error\r\n    catch (error) {\r\n      setState({...state, errors: {email: false, password: false, passwordConfirmation: false, secret: false}, form_disabled: false, snack: {message: `An error occurred: ${error.message}`, open: true}});\r\n    }\r\n  };\r\n\r\n  //Error Message Display: Auto close itself by updating its states\r\n  const handleSnackClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setState({...state, snack: {...state.snack, open: false}});\r\n  };\r\n\r\n  if(state.isAuthenticatingUser){\r\n    return(\r\n      <div>\r\n        <Navbar/>\r\n        <p> Loading... </p>\r\n    </div>\r\n    )\r\n  } else if(state.isUserAuthenticated){\r\n    return (<Redirect to=\"/admin\"/>)\r\n  } else {\r\n    return (\r\n      <div>\r\n          <Navbar/>\r\n           <Grid\r\n                container\r\n                spacing={0}\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{marginTop: \"2rem\"}}\r\n                >\r\n                <Grid item md={6} xs={12}>\r\n                <div className=\"Border\">\r\n                    <Typography variant=\"h4\" className={classes.title}>\r\n                    Register New Account\r\n                    </Typography>\r\n                    <p className={classes.centered} style={{color: \"#8d8d8d\"}}> Fill out the fields below to create a new account </p>\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <TextField label='Email' variant='outlined' type='email' onChange={handleChange('email')} error={state.errors.email}/>\r\n                    <TextField label='Password' variant='outlined' type='password' onChange={handleChange('password')} error={state.errors.password}/>\r\n                    <TextField label='Confirm Password' variant='outlined' type='password' onChange={handleChange('passwordConfirmation')} error={state.errors.passwordConfirmation}/>\r\n                    <TextField label='Secret Key' variant='outlined' type='password' onChange={handleChange('secret')} error={state.errors.secret}/>\r\n                    <Link to=\"login\"><Typography>Already have an account? Sign-In</Typography></Link>\r\n                    <div className={classes.centered}>\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={state.form_disabled}>Register</Button>\r\n                    </div>\r\n                    </form>\r\n                  </div>         \r\n                </Grid>   \r\n                <Snackbar open={state.snack.open} autoHideDuration={6000} onClose={handleSnackClose} message={state.snack.message}/>\r\n            </Grid> \r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Menu.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\ResetPassword.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Orders.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\config.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\NavBar.js",["182","183","184","185","186","187"],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\ContactMap.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\SearchSection.js",["188","189"],"/**\r\n * Upper portion of menu page. Has formatting for \"jumbotron\" background image.\r\n * \r\n * @summary   Upper portion of menu page with main background image.\r\n * @author    Navid Boloorian\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport \"../css/SearchSection.css\";\r\nconst config = require('../config');\r\n\r\nconst SearchSection = () => {\r\n    return (\r\n      <div className=\"search-section\"></div>\r\n    );\r\n}\r\n  \r\nexport default SearchSection;","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\ContactForm.js",["190","191"],"/**\r\n * Component creating the form on the contact page. Form takes user's \r\n * information and sends an email to UWEAST on their behalf. Error handling \r\n * makes sure that backend response is 200, otherwise notify user.\r\n * \r\n * @summary   Form to contact UWEAST found on contact page.\r\n * @author    Navid Boloorian, Amrit Kaur Singh\r\n */\r\nimport React from 'react';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { Snackbar } from '@material-ui/core';\r\n\r\nconst config = require('../config');\r\nconst BACKEND_URL = config.backend.uri;\r\n\r\nconst ContactForm = () => {\r\n\r\n  const [state, setState] = React.useState({\r\n    snack: {\r\n      message: '',\r\n      open: false\r\n    },\r\n  });\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    const formData = new FormData(e.target);\r\n    let data = {};\r\n    \r\n    // make FormData into a js object to pass to route\r\n    for(var [key, value] of formData.entries()) {\r\n      data[key] = value;\r\n    }\r\n  \r\n    try{\r\n  \r\n      const response = await fetch(`${BACKEND_URL}autoEmails/contact`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(data)\r\n      });\r\n      \r\n      // successful response\r\n      if (response.status == 200){\r\n        alert(\"Message sent!\");\r\n        // reload window to clear input boxes \r\n        window.location.reload();\r\n        \r\n        // malformed email\r\n      } else if(response.status == 400) {\r\n        setState({...state, snack: {message: 'Invalid Email Address!', open: true}});\r\n\r\n        // system error\r\n      } else {\r\n        setState({...state, snack: {message: 'System Error: Cannot send email!', open: true}});\r\n      }\r\n      \r\n      // general error\r\n    } catch(error){\r\n      setState({...state, snack: {message: 'System Error: Cannot send email!', open: true}});\r\n    }\r\n  };\r\n  \r\n  // error message display: auto close itself by updating its states\r\n  const handleSnackClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setState({...state, snack: {open: false}});\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-form\">\r\n      <div className=\"contact-form-text\">\r\n      <h1>CONTACT US</h1>\r\n      <p>Please email us using the form below</p>\r\n      <form onSubmit={sendMessage}>\r\n        <input type=\"text\" name=\"name\" className=\"first-input contact-form-input\" placeholder=\"Your Name\" required/>\r\n        <br />\r\n        <input type=\"text\" name=\"email\" className=\"contact-form-input\" placeholder=\"Your Email\" required />\r\n        <br />\r\n        {/** automatically-resizing textarea component */}\r\n        <TextareaAutosize className=\"contact-form-input\" name=\"message\" placeholder=\"Your message\" maxRows={3} required />\r\n        <br />\r\n        <input type=\"submit\" className=\"contact-form-submit\" value=\"Submit\"  />\r\n      </form>\r\n      </div>\r\n      <Snackbar open={state.snack.open} autoHideDuration={6000} onClose={handleSnackClose} message={state.snack.message}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactForm;","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuSection.js",["192","193","194"],"/**\r\n * Hub of menu portion of page. Almost all  states are elevated to this level. \r\n * Defines most of the form processing and renders MenuFilter, MenuItems, and \r\n * MenuCart.\r\n * \r\n * @summary   Hub of menu items, most states are elevated to this level.\r\n * @author    Navid Boloorian\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport MenuFilter from './MenuFilter';\r\nimport MenuItems from './MenuItems';\r\nimport '../css/MenuSection.css';\r\n\r\n/**\r\n * Handle the display of menu categories and sections. Stores states of what is \r\n * currently visible.\r\n * \r\n * @param {function} onItemAdd - Function returning boolean\r\n */\r\nconst MenuSection = ({onItemAdd}) => {\r\n  // filterCategories populates the filter buttons\r\n  const filterCategories = [\"Whole Menu\", \"Featured\", \"Appetizers\", \"Main Dishes\", \"Sides\", \"Drinks\"];\r\n\r\n  // populates the menu item categories\r\n  const defaultCategories = [\"Featured\", \"Appetizers\", \"Main Dishes\", \"Sides\", \"Drinks\"];\r\n\r\n  // stores all the categories currently visible\r\n  let displayedCategories = [];\r\n\r\n  // states that are managed and passed down to components\r\n  const [visibleCategories, setVisibleCategories] = useState(defaultCategories);\r\n\r\n  const [toggledFilter, setToggledFilter] = useState(\"none\");\r\n\r\n  // stores whether or not the popup is currently visible\r\n  const [popupVisible, setPopupVisible] = useState(false);\r\n\r\n  // map with all of the data that will be displayed in the popup\r\n  const [popupValues, setPopupValues] = useState(new Map());\r\n\r\n  // changes visible categories when filter button is clicked\r\n  const changeVisibleCategories = categoryName => {\r\n    if(categoryName == \"Whole Menu\") {\r\n      displayedCategories = defaultCategories;\r\n    }\r\n    else {\r\n      // if the option is not \"whole menu\", a new item is added to the \r\n      // displayedCategories array that is then passed to be rendered\r\n      displayedCategories.push(categoryName);\r\n    }\r\n\r\n    if(displayedCategories.length == 0) {\r\n      displayedCategories = defaultCategories;\r\n    }\r\n    \r\n    // responsible for actually rendering/setting what will be visible\r\n    setVisibleCategories(displayedCategories);\r\n  }\r\n\r\n  // processes the form submitted from the popup\r\n  const processForm = e => {\r\n    // prevents page reload\r\n    e.preventDefault();\r\n\r\n    // gets the form data\r\n    var data = new FormData(e.target);\r\n    var object = {};\r\n\r\n    // goes through and makes an object from the FormData\r\n    data.forEach((value, key) => {\r\n        if(!Reflect.has(object, key)){\r\n            object[key] = value;\r\n            return;\r\n        }\r\n\r\n        if(!Array.isArray(object[key])){\r\n            object[key] = [object[key]];    \r\n        }\r\n        object[key].push(value);\r\n    });\r\n\r\n    // converts the FormData to a JSON string, optional\r\n    var json = JSON.stringify(object);\r\n\r\n    // calls parent function to add item from popup to cart\r\n    onItemAdd(object);\r\n    \r\n    // when submit button is clicked, the popup is closed\r\n    togglePopup();\r\n  }\r\n  \r\n  // closes popup when open and opens popup when closed\r\n  const togglePopup = (title, description, price, image, dietaryInfo, accommodations, fillIns) => {\r\n    setPopupVisible(!popupVisible);\r\n    \r\n    // sets the values of the map based on passed-in information\r\n    popupValues.set(\"title\", title);\r\n    popupValues.set(\"description\", description);\r\n    popupValues.set(\"price\", price);\r\n    popupValues.set(\"image\", image);\r\n    popupValues.set(\"dietary-info\", dietaryInfo);\r\n    popupValues.set(\"accommodations\", accommodations);\r\n    popupValues.set(\"fillIns\", fillIns);\r\n\r\n    setPopupValues(popupValues);\r\n  }\r\n\r\n  /**\r\n   * MenuSection is split into three columns:\r\n   * 1. filter column\r\n   * 2. menu column\r\n   * 3. cart column\r\n   */\r\n  return (\r\n    <div className=\"menu-section-wrapper\">\r\n      <div className=\"menu-section\">\r\n        <div className=\"menu-filter-wrapper\">\r\n          <MenuFilter toggledFilter={toggledFilter} setToggledFilter={setToggledFilter} foodCategories={filterCategories} changeVisibleCategories={() => changeVisibleCategories} />\r\n        </div>\r\n        <div className=\"menu-items\">\r\n          {/** parameters are states being passed down */}\r\n          <MenuItems foodCategories={visibleCategories} processForm={processForm} popupVisible={popupVisible} popupValues={popupValues} togglePopup={togglePopup}/>\r\n        </div>\r\n        <div className=\"menu-cart\">\r\n      </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MenuSection;","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\Banner.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\OrdersTable.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\util\\Auth.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\CartPreview.js",["195","196","197","198","199","200"],"import React, { Component, useEffect } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport '../css/CartPreview.css';\r\n\r\nclass CartPreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: this.props.items,\r\n            subTotal: \"00.00\",\r\n            tax: \"00.00\",\r\n            totalPrice: \"00.00\"\r\n        }\r\n\r\n        this.loadItems = this.loadItems.bind(this);\r\n    }\r\n    \r\n    //displays items currently in the cart and updates subtotal and total\r\n    loadItems() {\r\n        return(\r\n            <div>\r\n                {this.state.items.map((item, ind) => {\r\n\r\n                    this.state.subTotal = parseFloat(this.state.subTotal) + parseFloat(item.price);\r\n                    this.state.subTotal = parseFloat(this.state.subTotal).toFixed(2);\r\n                    this.state.tax = (parseFloat(this.state.subTotal)*0.0775).toFixed(2);\r\n                    this.state.totalPrice = parseFloat(this.state.subTotal) + parseFloat(this.state.tax);\r\n                    this.state.totalPrice = parseFloat(this.state.totalPrice).toFixed(2);\r\n\r\n                    let specialInstructions = (item.instructions === \"\") ? \"\" : \", \" + item.instructions;\r\n                    let accommodation = (item.accommodations) ? \", \" + item.accommodations : \"\";\r\n\r\n                    let extraInfo = item.size + specialInstructions  + accommodation;\r\n\r\n                        return (\r\n                            <div key={ind} className=\"summary-item row\">\r\n                                <span className=\"thumbnail thumb-img\">{ind+1}</span>\r\n                                <span className=\"item-info\">{item.quantity} X {item.name}<br/>\r\n                                <span className=\"item-description\">{extraInfo}</span></span>\r\n                                <span className=\"thumbnail summary-price\">${item.price}</span>\r\n                                <span className=\"item-divider\"></span>\r\n                            </div>\r\n                        )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cart-container\">\r\n                <div id=\"order-summary-div\">\r\n                    <div className=\"order-summary\">\r\n                        Order Summary\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"fixed-scroll\">\r\n                            {/* loads and displays all items currently in the cart */}\r\n                            {this.loadItems()}\r\n                        </div>\r\n                        <div className=\"order-totals\">\r\n                            <br/>\r\n                            Subtotal: ${this.state.subTotal}<br/>\r\n                            Tax: ${this.state.tax}\r\n                        </div>\r\n                        <Button>Review Order</Button>\r\n                    </div>\r\n                    <div className=\"order-summary\">\r\n                        <span>Total Price</span><span className=\"add-price\">${this.state.totalPrice}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CartPreview;","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\ChangeEmailScreen.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\PayPal.js",["201"],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\AdminMenuItems.js",["202","203"],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\ForgotPasswordDialogue.js",["204"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Link } from 'react-router-dom';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst config = require('../config');\r\nconst BACKEND_URL = config.backend.uri;\r\n\r\nexport default function FormDialog() {\r\n  \r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    email: '',\r\n    error:{\r\n      display: false,\r\n      message: ''\r\n    }\r\n  });\r\n\r\n  // Handles submission of the form (button click)\r\n  // Validates form data for valid email address (must be a user's email address). If valid, \r\n  // it autogenerates a random password and sends it as an email to the user. If invalid, an error is displayed. \r\n  const handleSend = async() => {\r\n      const submission = {\r\n          email: state.email\r\n      };\r\n\r\n      //Check if email field is empty\r\n    if (state.email === ''){\r\n        setState({...state, error:{display: true, message: \"Field cannot be empty!\"}})\r\n        return;\r\n    }\r\n    //Backend call\r\n    try{\r\n      const response = await fetch(`${BACKEND_URL}user/forgotPassword`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(submission)\r\n      });\r\n\r\n      //Everything went great\r\n      if (response.ok) {\r\n        alert(\"Email Successfully Sent!\");\r\n        handleClose();\r\n      } \r\n      //Invalid Email\r\n      else if(response.status == 401){\r\n        setState({...state, error:{display: true, message: \"Invalid Email\"}});\r\n      }\r\n      //Any Server Errors\r\n      else {\r\n            setState({...state, error:{display: true, message: \"System Error: Try Again Later\"}});\r\n      }\r\n    }\r\n    //General Errors\r\n    catch(error){\r\n        setState({...state, error:{display: true, message: `An error occurred: ${error.message}`}});\r\n    }\r\n\r\n  }\r\n\r\n  //Display pop-up\r\n  const handleClickOpen = () => {\r\n    setState({...state, email:'', open: true, error:{display: false}});\r\n  };\r\n\r\n  //Close pop-up\r\n  const handleClose = () => {\r\n    setState({...state, open: false, error:{display: false}});\r\n  };\r\n\r\n  //track the email address put in the text field\r\n  const handleEmailChange = (event) => {\r\n    setState({...state, email: event.target.value, open: true});\r\n  }\r\n\r\n  //Render component \r\n  return (\r\n    <div>\r\n      <Link onClick={handleClickOpen}><Typography>Forgot Password?</Typography></Link>\r\n      <Dialog open={state.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Forgot Password?</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please enter the email address of the associated account here. An email will be sent to\r\n            you there containing next steps. \r\n          </DialogContentText>\r\n          <TextField\r\n            onChange={handleEmailChange}\r\n            error={state.error.display}\r\n            helperText={state.error.display ? state.error.message: null}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSend} color=\"primary\">\r\n            Send Email\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\EditMenuItemModal.js",["205","206"],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\AddMenuItemModal.js",["207","208"],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuItems.js",["209"],"/**\r\n * Groups MenuItemCategory components for formatting purposes. Renders \r\n * categories based off of what is being displayed with filters/states. \r\n * Simplifies passing of props as it centralizes the components.\r\n * \r\n * @summary   Grouping of MenuItemCategory components.\r\n * @author    Navid Boloorian\r\n */\r\n\r\nimport React from 'react';\r\nimport MenuItemCategory from './MenuItemCategory';\r\nimport '../css/MenuItems.css';\r\n\r\nconst MenuItems = ({ foodCategories, processForm, popupVisible, popupValues, togglePopup }) => {\r\n\r\n  return (\r\n\r\n      <div className=\"menu-items\">\r\n        {/** generates categories in the menu */}\r\n        {foodCategories.map((categoryName, key) => {\r\n          return <MenuItemCategory key={key} categoryName={categoryName} key={key} processForm={processForm} popupVisible={popupVisible} popupValues={popupValues} togglePopup={togglePopup}/>\r\n        })}\r\n      </div>\r\n\r\n  )\r\n}\r\n  \r\n  export default MenuItems;","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuFilter.js",["210","211"],"/**\r\n * Component that groups all filter buttons together. Responsible for sending \r\n * the relevant props to individual buttons.\r\n * \r\n * @summary   Component that groups all filter buttons.\r\n * @author    Navid Boloorian\r\n */\r\n\r\nimport React, { Component} from 'react';\r\nimport MenuFilterButton from './MenuFilterButton';\r\nimport \"../css/MenuFilter.css\";\r\nconst config = require('../config');\r\n\r\nconst MenuFilter = ( {foodCategories, changeVisibleCategories, toggledFilter, setToggledFilter} ) => {\r\n    return (\r\n      <div className=\"menu-filter\">\r\n        {foodCategories.map((categoryName, key) => (\r\n          // generates filter buttons based on categories\r\n          <MenuFilterButton toggledFilter={toggledFilter} setToggledFilter={setToggledFilter} categoryName={categoryName} key={key} changeVisibleCategories={changeVisibleCategories()} />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default MenuFilter;","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\OrdersTableColumns.js",["212","213"],"/**\r\n * Contains the details about each column in the Orders Table.\r\n * \r\n * Each Column has specific props it requires. For example, \r\n * \r\n * The Pickup Details, Order Status, and Submission Details \r\n * Require their own custom filtering, so they take in props\r\n * That allow for custom filtering. \r\n * \r\n * Order Status contains props for a custom body inside the table\r\n * Cell. \r\n * \r\n * @summary - Column details for orders table\r\n */\r\n\r\n// import helper functions from utils\r\nimport {\r\n    renderStatus,\r\n    DisplayDateFilters,\r\n    DisplayStatusFilters,\r\n    updateDateFilters,\r\n    renderDateFilters    \r\n} from '../util/OrdersTableFunctions';\r\n\r\n// the column headers for the table\r\nconst columns = [\r\n    {\r\n      name: \"Pick up Details\",\r\n      options: {\r\n        filter: true,\r\n        filterType: 'custom',\r\n        customFilterListOptions: {\r\n          render: renderDateFilters,\r\n          update: updateDateFilters\r\n        },\r\n        filterOptions: {\r\n          names: [],\r\n          logic(date, filters) {\r\n            const getDate = date.split(\"\\n\")[0];\r\n            if (filters[0] && filters[1]) {\r\n              return getDate < filters[0] || getDate > filters[1];\r\n            } else if (filters[0]) {\r\n              return getDate < filters[0];\r\n            } else if (filters[1]) {\r\n              return getDate > filters[1];\r\n            }\r\n            return false;\r\n          },\r\n          display: DisplayDateFilters\r\n        }\r\n      }  \r\n    },\r\n    {\r\n      name: \"Name\",\r\n      options: {\r\n        filter: true,\r\n        filterType: 'textField'\r\n      }  \r\n    },\r\n    {\r\n      name: \"Email\",\r\n      options: {\r\n        filter: true,\r\n        filterType: 'textField'\r\n      }    \r\n    },\r\n    {\r\n      name: \"Phone Number\",\r\n      options: {\r\n        filter: true,\r\n        filterType: 'textField'\r\n      }  \r\n    },\r\n    {\r\n      name: \"Amount Paid\",\r\n      options: {\r\n        filter: false\r\n      }  \r\n    },\r\n    {\r\n      name: \"Order Description\",\r\n      options: {\r\n        display: false, \r\n        viewColumns: false, \r\n        filter: false\r\n      }\r\n    },\r\n    {\r\n      name: \"Submission Details\",\r\n      options: {\r\n        filter: true,\r\n        filterType: 'custom',\r\n        customFilterListOptions: {\r\n          render: renderDateFilters,\r\n          update: updateDateFilters\r\n        },\r\n        filterOptions: {\r\n          names: [],\r\n          logic(date, filters) {\r\n            const getDate = date.split(\"\\n\")[0];\r\n            if (filters[0] && filters[1]) {\r\n              return getDate < filters[0] || getDate > filters[1];\r\n            } else if (filters[0]) {\r\n              return getDate < filters[0];\r\n            } else if (filters[1]) {\r\n              return getDate > filters[1];\r\n            }\r\n            return false;\r\n          },\r\n          display: DisplayDateFilters\r\n        }\r\n      }  \r\n    },\r\n    {\r\n      name: \"Order Status\",\r\n      options: {\r\n        filter: true,\r\n        filterType: 'custom',\r\n        customBodyRender: renderStatus,\r\n        customFilterListOptions: {\r\n          render: (options) => {\r\n            if(options[0] === \"All Orders\") return [];\r\n            return options;\r\n          },\r\n        },\r\n        filterOptions: {\r\n          names: [\"Pending Orders\", \"Completed Orders\"],\r\n          logic(order, filters) {\r\n            if (filters[0] == \"Completed Orders\") {\r\n              return order === \"Pending Orders\";\r\n            } else if (filters[0] == \"Pending Orders\") {\r\n              return order === \"Completed Orders\";\r\n            }\r\n  \r\n            return false;\r\n          },\r\n          display: DisplayStatusFilters\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: \"Row ID\",\r\n      options: {\r\n        display: false, \r\n        viewColumns: false, \r\n        filter: false\r\n      }\r\n    }\r\n];\r\n\r\nexport { columns } ;","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\util\\OrdersTableFunctions.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuFilterButton.js",["214"],"/**\r\n * Individual buttons that handle toggle the display of sections onclick. \r\n * Toggling is based on props so that they dynamically change.\r\n * \r\n * @summary   Individual buttons that toggle the display of sections.\r\n * @author    Navid Boloorian\r\n */\r\n\r\nimport React from 'react';\r\nimport '../css/MenuFilterButton.css';\r\n\r\nconst MenuFilterButton = ( {categoryName, changeVisibleCategories, toggledFilter, setToggledFilter} ) => {\r\n\r\n    /**\r\n     * Function that groups the filter toggling state calls.\r\n     */\r\n    function updateFilters() {\r\n      changeVisibleCategories(categoryName);\r\n      setToggledFilter(categoryName);\r\n    }\r\n\r\n    // logic to check whether or not the filter button should be highlighted\r\n    let filterMatch = (categoryName === toggledFilter) && (categoryName != \"Whole Menu\");\r\n\r\n    return (\r\n      <button \r\n        className={`menu-filter-button ${filterMatch ? \"toggled-filter\": \"\"}`}\r\n        onClick={() => (updateFilters())}>\r\n        {categoryName} \r\n      </button>\r\n    )\r\n  }\r\n  \r\n  export default MenuFilterButton;","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuItemCategory.js",["215","216"],"/**\r\n * Individual buttons that handle toggle the display of sections onclick. \r\n * Toggling is based on props so that they dynamically change.\r\n * \r\n * @summary   Individual buttons that toggle the display of sections.\r\n * @author    Navid Boloorian\r\n */\r\n\r\nimport React, { useState, useEffect} from 'react';\r\nimport '../css/MenuItemCategory.css';\r\nimport MenuItem from './MenuItem';\r\nimport MenuItemPopup from './MenuItemPopup';\r\n\r\nconst config = require('../config');\r\nconst BACKEND_URL = config.backend.uri;\r\n\r\nconst MenuItemCategory = ({ categoryName, processForm, popupVisible, popupValues, togglePopup }) => {\r\n  // array that stores menu items for the current category\r\n  const [menuItems, setMenuItems] = useState(new Array());\r\n  const menuItemValues = [];\r\n\r\n  /**\r\n   * useEffect() is called to get information from database\r\n   */\r\n  useEffect(() => {\r\n    fetch(`${BACKEND_URL}item/`)\r\n    .then(async result => {\r\n      if (result.ok) {\r\n        const json = await result.json();\r\n\r\n        for(var i = 0; i < json.items.length; i++) {\r\n          // since \"featured\" isn't a category, we need to handle it differently\r\n          let isCategoryEqual = json.items[i].Category === categoryName;\r\n          let isFeatured = (categoryName === \"Featured\") && (json.items[i].isFeatured);\r\n\r\n          // is stored only if the category name is the same as json's category\r\n          if((json.items !== undefined) && (isCategoryEqual || isFeatured)) {\r\n            menuItemValues.push(json.items[i]);\r\n          }\r\n        }\r\n        setMenuItems(menuItemValues);\r\n      }\r\n      else {\r\n        console.log(\"error\");\r\n      }\r\n    })\r\n\r\n  /**\r\n   * sets dependency on categoryName, meaning that whenever categoryName \r\n   * changes, useEffect is called again. This is necessary so that when filters * are clicked data is actually reloaded\r\n   */\r\n  }, [categoryName]);\r\n  \r\n  return (\r\n      <>\r\n        {/** popup is created here, if it is visible it is rendered */}\r\n        {popupVisible ? <MenuItemPopup values={popupValues} togglePopup={togglePopup} processForm={processForm} /> : null}\r\n        <div className=\"menu-item-category\">\r\n          <h2> {categoryName} </h2>\r\n          <div className=\"menu-item-category-grid\">\r\n            {/** generate menu items based off of array */}\r\n            {menuItems.map((menuItem, key) => {\r\n              let title = menuItem.Name;\r\n              let image = menuItem.pictureURL;\r\n              let description = menuItem.Description;\r\n              // since some items will only have a family pricing option, we use individual as the default; if individual doesnt exist, use family instead\r\n              let price = (\"Individual\" in menuItem.Prices) ? menuItem.Prices.Individual : menuItem.Prices.Family\r\n              let accommodations = menuItem.Accommodations;\r\n              let priceOptions = menuItem.Prices;\r\n              let dietaryInfo = menuItem.dietaryInfo;\r\n\r\n              return <MenuItem title={title} image={image} price={price} description={description} togglePopup={togglePopup} key={key} dietaryInfo={dietaryInfo} priceOptions={priceOptions} accommodations={accommodations} />\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default MenuItemCategory;\r\n","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuItemPopup.js",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"/**\r\n * Popup that displays specified item when MenuItem is clicked. Has form to \r\n * pass data to/add items to cart. Popup gives relevant information such as \r\n * pricing, description, additional accommodations etc.\r\n * \r\n * @summary     Displays item information and allows user to add item to cart.\r\n * @author      Aaron Kirk, Navid Boloorian\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport '../css/MenuItemPopup.css';\r\nimport plus from '../media/plus.svg';\r\nimport minus from '../media/minus.svg';\r\n\r\nconst MenuItemPopup = ({ values, togglePopup, processForm }) => {\r\n\r\n    const getInitialAccommodationsCost = () => {\r\n        var sum = 0;\r\n        if(values.get(\"fillIns\") != undefined) {\r\n            values.get(\"accommodations\").forEach((accommodation) => {\r\n                if(values.get(\"fillIns\").accommodations.includes(accommodation.Description)) {\r\n                    sum += parseFloat(accommodation.Price).toFixed(2);\r\n                }\r\n            });\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    const [quantity, setQuantity] = useState((values.get(\"fillIns\") != undefined) ? parseInt(values.get(\"fillIns\").quantity) : 1);\r\n    // if individual price exists, use that as default; otherwise, use family\r\n    const [currPrice, setCurrPrice] = useState((values.get(\"fillIns\") != undefined) ? ((values.get(\"fillIns\").size == \"Individual\") ? values.get(\"price\").Individual : values.get(\"price\").Family) : ((\"Individual\" in values.get(\"price\")) ? values.get(\"price\").Individual : values.get(\"price\").Family));\r\n    const [accommodationCost, setAccommodationCost] = useState(getInitialAccommodationsCost());\r\n    const [totalPrice, setTotalPrice] = useState((parseFloat(currPrice * quantity) + parseFloat(accommodationCost)).toFixed(2));\r\n\r\n    // handles changing price and quantity states\r\n    const changeQuantity = sign => {\r\n        // everything is fixed to 2 decimal places\r\n        if(sign == \"+\") {\r\n            setQuantity(quantity + 1);\r\n            // calulates on quantity + 1 b/c state hasn't updated yet\r\n            setTotalPrice((parseFloat(accommodationCost) + currPrice * (quantity + 1)).toFixed(2));\r\n        }\r\n        else if(sign == \"-\") {\r\n            if(quantity > 1) {\r\n                setQuantity(quantity - 1);\r\n                // calulates on quantity - 1 b/c state hasn't updated yet\r\n                setTotalPrice((parseFloat(accommodationCost) + currPrice * (quantity - 1)).toFixed(2));\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkAccommodationFillIns = accommodation=> {\r\n        if(values.get(\"fillIns\") != undefined) {\r\n            if(values.get(\"fillIns\").accommodations.includes(accommodation.Description)) {\r\n                handleAccommodation(true, accommodation.Price);\r\n                return true;\r\n            }\r\n        } \r\n        return false;\r\n    }\r\n\r\n    //handles toggling price additions from accommodations\r\n    const handleAccommodation = (checked, price) => {\r\n        if(checked) {\r\n            setAccommodationCost((parseFloat(accommodationCost) + parseFloat(price)).toFixed(2));\r\n            setTotalPrice((parseFloat(totalPrice) + parseFloat(price)).toFixed(2));\r\n            return;\r\n        }\r\n        // everything is fixed to 2 decimal places\r\n        if(checked) {\r\n            // parseFloat() is necessary because otherwise they get treated like strings for addition\r\n            setAccommodationCost((parseFloat(accommodationCost) + parseFloat(price)).toFixed(2));\r\n            setTotalPrice((parseFloat(totalPrice) + parseFloat(price)).toFixed(2));\r\n        } else {\r\n            setAccommodationCost((accommodationCost - price).toFixed(2));\r\n            setTotalPrice((totalPrice - price).toFixed(2));\r\n        }\r\n    }\r\n\r\n    // helper function to render the \r\n    const renderSize = (name, price, hasBothPrices) => {\r\n        return(\r\n            /** conditionally displays family size as an \"add-on\" if both are possible */\r\n            <label className=\"choice-label\">\r\n                <input onClick={() => handleSize(price)} type=\"radio\" name=\"size\" value={name} defaultChecked={(name == \"Individual\" || ((values.get(\"fillIns\") != undefined) && values.get(\"fillIns\").size == name) || !(\"Individual\" in values.get(\"price\")))} required />\r\n                <span onClick={() => handleSize(price)} className=\"label-title\">{(hasBothPrices) ? name + \" +($\" + parseFloat(price - values.get(\"price\").Individual).toFixed(2) + \")\": name}</span>\r\n            </label>\r\n        );\r\n    }\r\n    // will be used when family price is introduced to toggle between\r\n    const handleSize = (newPrice) => {\r\n        setCurrPrice(newPrice);\r\n        // currPrice has yet to update, so still using newPrice\r\n        // fix to 2 decimal places\r\n        setTotalPrice((parseFloat(accommodationCost) + newPrice * (quantity)).toFixed(2));\r\n    }\r\n\r\n    const renderAccommodations = () => {\r\n        // return nothing if there are no accommodations\r\n        if(values.get(\"accommodations\").length == 0) return;\r\n        else {\r\n            return (\r\n                /** Header */\r\n                <div className=\"section accommodations-section\">\r\n                <div className=\"section-title\">\r\n                    <h3>Accommodations</h3>\r\n                    <i>optional</i>\r\n                </div>\r\n                {/* map through and render all accommodations */}\r\n                {values.get(\"accommodations\").map((accommodation) => {\r\n                    return(\r\n                        <label className=\"choice-label\">\r\n                            <input type=\"checkbox\" name=\"accommodations\" defaultChecked={values.get(\"fillIns\") != undefined && values.get(\"fillIns\").accommodations.includes(accommodation.Description)} value={accommodation.Description} id={accommodation.Description} onChange={(e) => handleAccommodation(e.target.checked, accommodation.Price)} />\r\n                            <span className=\"label-title\">{accommodation.Description + \" +($\" + parseFloat(accommodation.Price).toFixed(2) + \")\"}</span>\r\n                        </label>\r\n                    );\r\n                })}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const numDietaryInfo = () => {\r\n        const dietaryInfo = Object.entries(values.get(\"dietary-info\"));\r\n        var count = 0;\r\n        for (const [key, value] of dietaryInfo) {\r\n            if(value) count++;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    const renderDietaryInfo = () => {\r\n        if (numDietaryInfo() == 0) return;\r\n        else {\r\n            return (\r\n                <>\r\n                <hr/>\r\n                <p className=\"dietary-info\">\r\n                    {(values.get(\"dietary-info\").vegan) ? \"*Vegan\" : null}\r\n                    {(values.get(\"dietary-info\").vegan) ? <br/> : null}\r\n                    {(values.get(\"dietary-info\").vegetarian) ? \"*Vegetarian\" : null}\r\n                    {(values.get(\"dietary-info\").vegetarian) ? <br/> : null}\r\n                    {(values.get(\"dietary-info\").glutenFree) ? \"*Gluten-free\" : null}\r\n                    {(values.get(\"dietary-info\").glutenFree) ? <br/> : null}\r\n                    {(values.get(\"dietary-info\").containsDairy) ? \"*Contains Dairy\" : null}\r\n                </p>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/** div that fades out the background */}\r\n            <div className=\"greyout\" onClick={togglePopup}></div>\r\n            <div className=\"menu-item-popup\">\r\n                <span className=\"close-button\" onClick={togglePopup}>+</span>\r\n                <div className=\"group-popup\">\r\n\r\n                    {/** Left side with dish details */}\r\n                    <div className=\"left-popup\">\r\n                        <div className=\"popup-image\" style={{backgroundImage: \"url(\" + values.get(\"image\") + \")\", backgroundSize:\"cover\"}}>\r\n                            <div className=\"popup-image-price\"><h3>{\"$\" + parseFloat(currPrice).toFixed(2)}</h3></div>\r\n                        </div>\r\n                        <div className=\"popup-item-info\">\r\n                            <h3 className=\"title-popup\">{values.get(\"title\")}</h3>\r\n                            <p className=\"desc-popup\">{values.get(\"description\")}</p>\r\n                            {renderDietaryInfo()}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/** right side with order options */}\r\n                    <div className=\"right-popup\">\r\n                        <form onSubmit={processForm} id=\"popup-form\">\r\n\r\n                            {/** sizing options */}\r\n                            <div className=\"section size-section\">\r\n                                <div className=\"section-title\">\r\n                                    <h3>Choose Size</h3>\r\n                                    <i>required</i>\r\n                                </div>\r\n                                {/** checks to ensure individual/family sizes exist; conditionally displays family size as an \"add-on\" if both are possible */}\r\n                                {(\"Individual\" in values.get(\"price\")) ? renderSize(\"Individual\", values.get(\"price\").Individual, false) : null}\r\n                                {(\"Family\" in values.get(\"price\")) ? renderSize(\"Family\", values.get(\"price\").Family, (\"Individual\" in values.get(\"price\"))) : null}\r\n                            </div>\r\n\r\n                            {/** accommodations options */}\r\n                            {renderAccommodations()}\r\n\r\n                            {/** custom instructions text area */}\r\n                            <div className=\"section instructions-section\">\r\n                                <div className=\"section-title\">\r\n                                    <h3>Special Instructions</h3>\r\n                                    <i>optional</i>\r\n                                </div>\r\n                                <p className=\"instructions-note\">Special accommodations can be made for orders placed in advanced but are not guaranteed, please <a href=\"/contact\">contact us</a> directly for more info.</p>\r\n                                <textarea name=\"instructions\" maxLength=\"75\" className=\"instructions-textarea\">{(values.get(\"fillIns\") != undefined) ? values.get(\"fillIns\").instructions : \"\"}</textarea>\r\n                            </div>\r\n\r\n                            {/** quantity selection */}\r\n                            <div className=\"section quantity-section\">\r\n                                <div className=\"section-title\"><h3>Quantity</h3></div>\r\n                                <div className=\"quantity-buttons\">\r\n                                    <button type=\"button\" className=\"button decrease-button\" onClick={() => {changeQuantity(\"-\");}\r\n                                    }><img src={minus} alt=\"Decrease Quantity\" /></button>\r\n                                    <span className=\"quantity-number\">{quantity}</span>\r\n                                    <button type=\"button\" className=\"button increase-button\" \r\n                                    onClick={() => {changeQuantity(\"+\");}}><img src={plus} alt=\"Increase Quantity\" /></button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/** hidden fields to pass along to the total price and  quantity */}\r\n                            <input name=\"popupValues\" type=\"hidden\" value={values} />\r\n                            <input name=\"price\" type=\"hidden\" value={parseFloat(totalPrice).toFixed(2)} />\r\n                            <input name=\"quantity\" type=\"hidden\" value={quantity} />\r\n                            <input className=\"submit-order-button\" type=\"submit\" value={(values.get(\"fillIns\") != undefined) ? \"Save Changes: $\" + totalPrice : \"Add \" + quantity + \" to cart: $\" + totalPrice} />\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n  \r\n    export default MenuItemPopup;\r\n","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\MenuItem.js",["234","235"],"/**\r\n * Component responsible for displaying and formatting items on menu. Bases \r\n * information on props and displays them accordingly. \r\n * \r\n * @summary   Component representing items in the menu.\r\n * @author    Navid Boloorian\r\n */\r\n\r\nimport React from 'react';\r\nimport \"../css/MenuItem.css\";\r\nconst config = require('../config');\r\n\r\nconst MenuItem = ( {description, image, price, title, togglePopup, dietaryInfo, priceOptions, accommodations} ) => {\r\n    return (\r\n      <div className=\"menu-item\" onClick={() => togglePopup(title, description, priceOptions, image, dietaryInfo, accommodations)}>\r\n        <div className=\"menu-image\">\r\n          <img src={image}></img>\r\n        </div>\r\n        <div className=\"menu-text\">\r\n          <h3 className=\"menu-name\">{title}</h3>\r\n          <p className=\"menu-description\">{description}</p>\r\n        </div>\r\n        <div className=\"menu-absolutes\">\r\n          <p className=\"menu-price\">${price}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n  \r\nexport default MenuItem;","C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\ChangeHeaderModal.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\pages\\Emails.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\GitHub\\UWEAST-Community-Kitchen\\frontend\\src\\components\\ChangeSecondaryEmailScreen.js",["236","237","238"],"/**\r\n * This file renders the information related to the secondary emails.\r\n * It displays all the current secondary emails that that admin \r\n * user has authorized.\r\n * It makes two calls to the backend:\r\n * \r\n *  1) POST call to add secondary email\r\n *  2) DELETE call to remove a secondary email\r\n * \r\n * @summary     Handles functionality of secondary emails on Admin page.\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport '../css/ChangeEmailScreen.css';\r\n\r\nconst config = require('../config');\r\nconst BACKEND_URL = config.backend.uri;\r\n\r\n// styling for the MUI form\r\nconst useStyles = makeStyles((theme) => ({\r\n    span: {\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"black\"\r\n      },\r\n      \"& .MuiInputLabel-outlined.Mui-focused\": {\r\n        color: \"black\"\r\n      }\r\n    }\r\n}));\r\n\r\n/**\r\n * Renders the node containing the email addresses.\r\n * \r\n * @param {string} email - Secondary email\r\n * @param {array} secondaryEmails - List of all current secondary emails\r\n * @param {function} setSecondaryEmails - Function to update secondary emails list\r\n * @param {function} updateSecondaryEmails - Parent function to update parent state \r\n * @returns {component} - Renders the node with email\r\n */\r\nconst renderNode = (email, secondaryEmails, setSecondaryEmails, updateSecondaryEmails) => {\r\n    // delete the email from the database\r\n    const deleteItem = () => {\r\n        fetch(`${BACKEND_URL}email/removeSecondary`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: email\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.success) {\r\n                // update the array in the current class\r\n                // and in the parent class\r\n                const arr = secondaryEmails.filter(a => a !== email);\r\n                setSecondaryEmails(arr);\r\n                updateSecondaryEmails(arr);\r\n            }\r\n        })    \r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <p className=\"secondary-email-name\">{email}</p>\r\n            <FontAwesomeIcon icon={faTrash} className=\"trash-icon\" \r\n                onClick={(e) => deleteItem()}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n// styling used for the plus icon\r\nconst plusIcon = {\r\n    color: 'white',\r\n    marginRight: 'calc(0.5vw)'\r\n}\r\n\r\nexport default function ChangeSecondaryEmailScreen (props) {\r\n    const classes = useStyles();\r\n    const updateSecondaryEmails = props.updateSecondaryEmails;\r\n    const [secondaryEmails, setSecondaryEmails] = useState([]);\r\n    const [primaryEmail, setPrimaryEmail] = useState(\"\");\r\n    const [addSecondaryEmail, setAddSecondaryEmail] = useState(\"\");\r\n    const [inputError, setInputError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    // allows user to press 'enter' to submit\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            addEmail(addSecondaryEmail);    \r\n        }\r\n    }\r\n\r\n    // loads all emails from the parent class\r\n    useEffect(() => {\r\n        setSecondaryEmails(props.emails);\r\n        setPrimaryEmail(props.primaryEmail);\r\n    }, [props])\r\n\r\n    /**\r\n     * Adds the email to the database.\r\n     * \r\n     * @param {string} addSecondaryEmail - Email to add\r\n     */\r\n    const addEmail = (addSecondaryEmail) => {\r\n        // make sure email is not a primary email \r\n        if(addSecondaryEmail === primaryEmail) {\r\n            setErrorMessage(\"This is currently your primary email.\"); \r\n            setInputError(true);\r\n            return;\r\n        }\r\n\r\n        // make sure the email follows proper format\r\n        if (addSecondaryEmail && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(addSecondaryEmail) || addSecondaryEmail.length === 0) {\r\n            setErrorMessage(\"Enter a valid email address.\");\r\n            setInputError(true);\r\n            return;\r\n        }\r\n\r\n        fetch(`${BACKEND_URL}email/addSecondary`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: addSecondaryEmail\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.success) {\r\n                // update the parent's array and the child's array\r\n                const getNewEmail = addSecondaryEmail;\r\n                const arr = secondaryEmails.concat(getNewEmail)\r\n                setSecondaryEmails(arr);\r\n                updateSecondaryEmails(arr);\r\n                // clear the textfield\r\n                setAddSecondaryEmail(\"\");\r\n                // clear any error handling\r\n                setInputError(false);\r\n                setErrorMessage(\"\");\r\n            } else {\r\n                // error handling\r\n                setErrorMessage(\"This email is already listed as a secondary email.\"); \r\n                setInputError(true);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"secondary-emails-container\"> \r\n            <h1 className=\"emailHeading\">Change Secondary Email</h1>\r\n            <p className=\"emailDescription\">Order confirmations will be sent to this email.</p>\r\n            \r\n            <div className=\"secondary-emails\">\r\n                {secondaryEmails.map((secondary, ind) => (\r\n                    renderNode(secondary, secondaryEmails, setSecondaryEmails, updateSecondaryEmails)\r\n                ))}\r\n            </div>\r\n            \r\n            {/* The textfield */}\r\n            <div className=\"add-secondary-email\">\r\n                <span className={classes.span}>\r\n                    <TextField id=\"email-input\" \r\n                        size=\"small\"\r\n                        error={inputError} \r\n                        value={addSecondaryEmail} \r\n                        type=\"email\" \r\n                        onChange={(e) => setAddSecondaryEmail(e.target.value)} \r\n                        onKeyDown={(e) => handleKeyDown(e)}\r\n                        label=\"Add Secondary Email\" \r\n                        variant=\"outlined\"\r\n                        helperText={errorMessage}\r\n                        id=\"secondaryEmail\"\r\n                    />\r\n                </span>\r\n\r\n                <Button id=\"submit\" className=\"emailAddButton\" \r\n                    onClick={(e) => addEmail(addSecondaryEmail)}\r\n                >   \r\n                    {/* The \"add\" icon */}\r\n                    <FontAwesomeIcon icon={faPlusCircle} style={plusIcon} />\r\n                        Add\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":16,"column":8,"nodeType":"245","messageId":"246","endLine":16,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":39,"column":10,"nodeType":"249","endLine":39,"endColumn":12,"suggestions":"250"},{"ruleId":"243","severity":1,"message":"251","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":25},{"ruleId":"243","severity":1,"message":"252","line":6,"column":7,"nodeType":"245","messageId":"246","endLine":6,"endColumn":13},{"ruleId":"243","severity":1,"message":"253","line":7,"column":7,"nodeType":"245","messageId":"246","endLine":7,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":77,"column":6,"nodeType":"249","endLine":77,"endColumn":8,"suggestions":"254"},{"ruleId":"247","severity":1,"message":"248","line":79,"column":6,"nodeType":"249","endLine":79,"endColumn":8,"suggestions":"255"},{"ruleId":"256","severity":1,"message":"257","line":36,"column":5,"nodeType":"258","messageId":"259","endLine":36,"endColumn":47},{"ruleId":"256","severity":1,"message":"257","line":46,"column":5,"nodeType":"258","messageId":"259","endLine":46,"endColumn":66},{"ruleId":"256","severity":1,"message":"257","line":50,"column":5,"nodeType":"258","messageId":"259","endLine":50,"endColumn":59},{"ruleId":"247","severity":1,"message":"248","line":61,"column":10,"nodeType":"249","endLine":61,"endColumn":12,"suggestions":"260"},{"ruleId":"256","severity":1,"message":"257","line":63,"column":5,"nodeType":"258","messageId":"259","endLine":63,"endColumn":109},{"ruleId":"256","severity":1,"message":"257","line":72,"column":5,"nodeType":"258","messageId":"259","endLine":72,"endColumn":74},{"ruleId":"261","severity":1,"message":"262","line":29,"column":26,"nodeType":"263","messageId":"264","endLine":29,"endColumn":28},{"ruleId":"265","severity":1,"message":"266","line":41,"column":7,"nodeType":"267","endLine":41,"endColumn":111},{"ruleId":"261","severity":1,"message":"268","line":47,"column":27,"nodeType":"263","messageId":"264","endLine":47,"endColumn":29},{"ruleId":"261","severity":1,"message":"268","line":53,"column":33,"nodeType":"263","messageId":"264","endLine":53,"endColumn":35},{"ruleId":"261","severity":1,"message":"268","line":44,"column":21,"nodeType":"263","messageId":"264","endLine":44,"endColumn":23},{"ruleId":"261","severity":1,"message":"268","line":53,"column":35,"nodeType":"263","messageId":"264","endLine":53,"endColumn":37},{"ruleId":"243","severity":1,"message":"269","line":84,"column":9,"nodeType":"245","messageId":"246","endLine":84,"endColumn":13},{"ruleId":"243","severity":1,"message":"270","line":1,"column":28,"nodeType":"245","messageId":"246","endLine":1,"endColumn":37},{"ruleId":"271","severity":1,"message":"272","line":24,"column":21,"nodeType":"273","endLine":24,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":25,"column":21,"nodeType":"273","endLine":25,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":26,"column":21,"nodeType":"273","endLine":26,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":27,"column":21,"nodeType":"273","endLine":27,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":28,"column":21,"nodeType":"273","endLine":28,"endColumn":31},{"ruleId":"247","severity":1,"message":"274","line":201,"column":8,"nodeType":"249","endLine":201,"endColumn":14,"suggestions":"275"},{"ruleId":"243","severity":1,"message":"276","line":233,"column":12,"nodeType":"245","messageId":"246","endLine":233,"endColumn":26},{"ruleId":"243","severity":1,"message":"277","line":252,"column":13,"nodeType":"245","messageId":"246","endLine":252,"endColumn":19},{"ruleId":"261","severity":1,"message":"268","line":53,"column":31,"nodeType":"263","messageId":"264","endLine":53,"endColumn":33},{"ruleId":"278","severity":1,"message":"279","line":325,"column":63,"nodeType":"280","messageId":"281","endLine":325,"endColumn":65},{"ruleId":"278","severity":1,"message":"279","line":327,"column":94,"nodeType":"280","messageId":"281","endLine":327,"endColumn":96},{"ruleId":"278","severity":1,"message":"279","line":319,"column":63,"nodeType":"280","messageId":"281","endLine":319,"endColumn":65},{"ruleId":"278","severity":1,"message":"279","line":321,"column":94,"nodeType":"280","messageId":"281","endLine":321,"endColumn":96},{"ruleId":"282","severity":1,"message":"283","line":21,"column":74,"nodeType":"284","endLine":21,"endColumn":83},{"ruleId":"243","severity":1,"message":"285","line":9,"column":17,"nodeType":"245","messageId":"246","endLine":9,"endColumn":26},{"ruleId":"243","severity":1,"message":"252","line":12,"column":7,"nodeType":"245","messageId":"246","endLine":12,"endColumn":13},{"ruleId":"261","severity":1,"message":"268","line":129,"column":28,"nodeType":"263","messageId":"264","endLine":129,"endColumn":30},{"ruleId":"261","severity":1,"message":"268","line":131,"column":35,"nodeType":"263","messageId":"264","endLine":131,"endColumn":37},{"ruleId":"261","severity":1,"message":"262","line":23,"column":73,"nodeType":"263","messageId":"264","endLine":23,"endColumn":75},{"ruleId":"286","severity":1,"message":"287","line":19,"column":46,"nodeType":"288","messageId":"289","endLine":19,"endColumn":57},{"ruleId":"247","severity":1,"message":"290","line":52,"column":6,"nodeType":"249","endLine":52,"endColumn":20,"suggestions":"291"},{"ruleId":"261","severity":1,"message":"262","line":19,"column":34,"nodeType":"263","messageId":"264","endLine":19,"endColumn":36},{"ruleId":"261","severity":1,"message":"262","line":29,"column":69,"nodeType":"263","messageId":"264","endLine":29,"endColumn":71},{"ruleId":"261","severity":1,"message":"262","line":31,"column":71,"nodeType":"263","messageId":"264","endLine":31,"endColumn":73},{"ruleId":"261","severity":1,"message":"268","line":31,"column":116,"nodeType":"263","messageId":"264","endLine":31,"endColumn":118},{"ruleId":"261","severity":1,"message":"268","line":38,"column":17,"nodeType":"263","messageId":"264","endLine":38,"endColumn":19},{"ruleId":"261","severity":1,"message":"268","line":43,"column":22,"nodeType":"263","messageId":"264","endLine":43,"endColumn":24},{"ruleId":"243","severity":1,"message":"292","line":52,"column":11,"nodeType":"245","messageId":"246","endLine":52,"endColumn":36},{"ruleId":"261","severity":1,"message":"262","line":53,"column":34,"nodeType":"263","messageId":"264","endLine":53,"endColumn":36},{"ruleId":"261","severity":1,"message":"268","line":85,"column":118,"nodeType":"263","messageId":"264","endLine":85,"endColumn":120},{"ruleId":"261","severity":1,"message":"262","line":85,"column":161,"nodeType":"263","messageId":"264","endLine":85,"endColumn":163},{"ruleId":"261","severity":1,"message":"268","line":85,"column":205,"nodeType":"263","messageId":"264","endLine":85,"endColumn":207},{"ruleId":"261","severity":1,"message":"268","line":100,"column":48,"nodeType":"263","messageId":"264","endLine":100,"endColumn":50},{"ruleId":"261","severity":1,"message":"262","line":113,"column":112,"nodeType":"263","messageId":"264","endLine":113,"endColumn":114},{"ruleId":"243","severity":1,"message":"293","line":126,"column":21,"nodeType":"245","messageId":"246","endLine":126,"endColumn":24},{"ruleId":"261","severity":1,"message":"268","line":133,"column":30,"nodeType":"263","messageId":"264","endLine":133,"endColumn":32},{"ruleId":"261","severity":1,"message":"262","line":197,"column":136,"nodeType":"263","messageId":"264","endLine":197,"endColumn":138},{"ruleId":"261","severity":1,"message":"262","line":216,"column":112,"nodeType":"263","messageId":"264","endLine":216,"endColumn":114},{"ruleId":"243","severity":1,"message":"252","line":11,"column":7,"nodeType":"245","messageId":"246","endLine":11,"endColumn":13},{"ruleId":"294","severity":1,"message":"295","line":17,"column":11,"nodeType":"267","endLine":17,"endColumn":28},{"ruleId":"278","severity":1,"message":"279","line":122,"column":31,"nodeType":"280","messageId":"281","endLine":122,"endColumn":33},{"ruleId":"278","severity":1,"message":"279","line":122,"column":103,"nodeType":"280","messageId":"281","endLine":122,"endColumn":105},{"ruleId":"282","severity":1,"message":"283","line":182,"column":25,"nodeType":"284","endLine":182,"endColumn":44},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"no-unused-vars","'Orders' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["298"],"'useState' is defined but never used.","'config' is assigned a value but never used.","'BACKEND_URL' is assigned a value but never used.",["299"],["300"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["301"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","Expected '===' and instead saw '=='.","'json' is assigned a value but never used.","'useEffect' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","React Hook React.useEffect has missing dependencies: 'history' and 'paypalOrderObject'. Either include them or remove the dependency array.",["302"],"'checkboxUpdate' is assigned a value but never used.","'imgUrl' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Component' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","React Hook useEffect has a missing dependency: 'menuItemValues'. Either include it or remove the dependency array.",["303"],"'checkAccommodationFillIns' is assigned a value but never used.","'key' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"304","fix":"305"},{"desc":"304","fix":"306"},{"desc":"304","fix":"307"},{"desc":"304","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},"Update the dependencies array to be: [state]",{"range":"313","text":"314"},{"range":"315","text":"314"},{"range":"316","text":"314"},{"range":"317","text":"314"},"Update the dependencies array to be: [cart, history, paypalOrderObject]",{"range":"318","text":"319"},"Update the dependencies array to be: [categoryName, menuItemValues]",{"range":"320","text":"321"},[1217,1219],"[state]",[1871,1873],[1966,1968],[1993,1995],[7843,7849],"[cart, history, paypalOrderObject]",[1859,1873],"[categoryName, menuItemValues]"]