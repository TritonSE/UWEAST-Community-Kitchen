[{"/Users/amador/UWEAST-Community-Kitchen/frontend/src/App.js":"1","/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Admin.js":"2","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/PayPal.js":"3","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/SearchSection.js":"4","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/AdminMenuItems.js":"5","/Users/amador/UWEAST-Community-Kitchen/frontend/src/util/auth.js":"6","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItems.js":"7","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/OrdersTableColumns.js":"8","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItem.js":"9","/Users/amador/UWEAST-Community-Kitchen/frontend/src/reportWebVitals.js":"10","/Users/amador/UWEAST-Community-Kitchen/frontend/src/config.js":"11","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/NavBar.js":"12","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/CartPreview.js":"13","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuSection.js":"14","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/ChangeEmailScreen.js":"15","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuFilter.js":"16","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/CartSummary.js":"17","/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/About.js":"18","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuFilterButton.js":"19","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/OrdersTable.js":"20","/Users/amador/UWEAST-Community-Kitchen/frontend/src/index.js":"21","/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Menu.js":"22","/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Contact.js":"23","/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Orders.js":"24","/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Login.js":"25","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/Banner.js":"26","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/SearchBar.js":"27","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItemPopup.js":"28","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItemCategory.js":"29","/Users/amador/UWEAST-Community-Kitchen/frontend/src/util/OrdersTableFunctions.js":"30","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/CustomTimePicker.js":"31"},{"size":1133,"mtime":1613602950426,"results":"32","hashOfConfig":"33"},{"size":2982,"mtime":1613602950437,"results":"34","hashOfConfig":"35"},{"size":7471,"mtime":1613602950429,"results":"36","hashOfConfig":"35"},{"size":322,"mtime":1613602950430,"results":"37","hashOfConfig":"35"},{"size":15295,"mtime":1613602950426,"results":"38","hashOfConfig":"33"},{"size":129,"mtime":1613602950439,"results":"39","hashOfConfig":"33"},{"size":689,"mtime":1613602950428,"results":"40","hashOfConfig":"35"},{"size":3384,"mtime":1613602950429,"results":"41","hashOfConfig":"35"},{"size":757,"mtime":1613602950428,"results":"42","hashOfConfig":"35"},{"size":362,"mtime":1613602950438,"results":"43","hashOfConfig":"33"},{"size":191,"mtime":1613602950430,"results":"44","hashOfConfig":"33"},{"size":3480,"mtime":1613602950428,"results":"45","hashOfConfig":"35"},{"size":3572,"mtime":1613946544509,"results":"46","hashOfConfig":"35"},{"size":3879,"mtime":1613602950428,"results":"47","hashOfConfig":"35"},{"size":2518,"mtime":1613602950427,"results":"48","hashOfConfig":"35"},{"size":620,"mtime":1613602950427,"results":"49","hashOfConfig":"35"},{"size":9006,"mtime":1613976785408,"results":"50","hashOfConfig":"35"},{"size":1503,"mtime":1613602950437,"results":"51","hashOfConfig":"35"},{"size":451,"mtime":1613602950427,"results":"52","hashOfConfig":"35"},{"size":3867,"mtime":1613602950429,"results":"53","hashOfConfig":"35"},{"size":500,"mtime":1613602950436,"results":"54","hashOfConfig":"35"},{"size":3975,"mtime":1613976874488,"results":"55","hashOfConfig":"35"},{"size":482,"mtime":1613602950438,"results":"56","hashOfConfig":"35"},{"size":4548,"mtime":1613602950438,"results":"57","hashOfConfig":"35"},{"size":1621,"mtime":1613602950438,"results":"58","hashOfConfig":"35"},{"size":360,"mtime":1613602950427,"results":"59","hashOfConfig":"35"},{"size":300,"mtime":1613602950429,"results":"60","hashOfConfig":"33"},{"size":9802,"mtime":1613602950428,"results":"61","hashOfConfig":"35"},{"size":2996,"mtime":1613602950428,"results":"62","hashOfConfig":"33"},{"size":5513,"mtime":1613602950439,"results":"63","hashOfConfig":"33"},{"size":1210,"mtime":1613605798738,"results":"64","hashOfConfig":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"hzv0p5",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"wx0vlp",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"67"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"70"},"/Users/amador/UWEAST-Community-Kitchen/frontend/src/App.js",[],["142","143"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Admin.js",[],["144","145"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/PayPal.js",["146"],"import React from 'react'\nimport { useHistory } from \"react-router-dom\";\n\n// const paypal = require(\"@paypal/checkout-server-sdk\");\n\nconst config = require('../config');\n\nconst BACKEND_URL = config.backend.uri;\n\n//PayPal script is located in public/index.html (contains Client ID)\nexport default function PayPal(props) {\n    const { cart } = props;\n    let history = useHistory();\n    // I assume the cart object looks like this:\n    // {\n    //     cart_total: \"\",\n    //     item_total: \"\",\n    //     tax_total: \"\",\n    //     items: [\n    //         {\n    //             name: \"\",\n    //             quantity: \"\",\n    //             size: \"\",\n    //             addons: [\"\", \"\"],\n    //             individual_price: \"\",\n    //             individual_tax: \"\",\n    //         },\n    //     ],\n    //     pickup_date: \"\"\n    // }\n    const paypalRef = React.useRef();\n    const paypalOrderObject = {\n        intent: \"CAPTURE\",\n        application_context: {\n            shipping_preference: 'NO_SHIPPING',\n        },\n        purchase_units: [{\n            description: \"Food order from UWEAST Kitchen\",\n            // Deals with pricing of the cart\n            amount: {\n                currency_code: \"USD\",\n                value: cart.cart_total,\n                breakdown: {\n                    // includes totals for items and taxes. Shipping and handling can be ignored\n                    // because the items are for pickup and handling is included in price\n                    item_total: {\n                        currency_code: \"USD\",\n                        value: cart.item_total,\n                    },\n                    tax_total: {\n                        currency_code: \"USD\",\n                        value: cart.tax_total,\n                    },\n                }\n            },\n            // Deals with the individual item entries for the order\n            items: \n            cart.items.map((item) => {\n                return {\n                    name: item.name,\n                    // Description follows the format:\n                    // Size: {size}, (Gluten Free,) (Other addons,) \n                    description: [`Size: ${item.size}`, ...item.addons].join(\", \"),\n                    unit_amount: {\n                        currency_code: \"USD\",\n                        value: item.individual_price,\n                    },\n                    tax: {\n                        currency_code: \"USD\",\n                        value: item.individual_tax,\n                    },\n                    quantity: item.quantity,\n                    category: \"PHYSICAL_GOODS\"\n                }\n            })\n        }],\n        shipping_type: 'PICKUP',\n    }\n    // THE FOLLOWING TWO METHODS ARE NOT USED. THEY WERE CREATED FOR\n    // SERVER SIDE PAYMENT INTEGRATION, BUT THIS ISN'T BEST PRACTICE,\n    // SO IT WAS NOT PURSUED. THEREFORE THESE METHODS ARE COMMENTED OUT.\n    /* const createOrder = async () => {\n        console.log(\"Creating order...\");\n        return fetch(`${BACKEND_URL}paypal/createPayment`, {\n            method: \"POST\",\n            body: JSON.stringify(paypalOrderObject),\n            headers: {\n                \"content-type\": \"application/json\"\n            }, \n        }).then((res) => {\n            if(res.ok) {\n                return res.json();\n            }\n        }).then((data) => {\n            console.log(\"finished creating order\")\n            return data.orderID; // make sure to use the same key name for order ID on the client and server\n        })\n        .catch((err) => {\n            console.log(err);\n            alert(\"Create order Error\");\n        });\n    }\n    const onApprove = async (data) => {\n        console.log(\"Authorizing order...\");\n        return fetch(`${BACKEND_URL}paypal/executePayment`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                orderID: data.orderID,\n            }),\n        }).then((res) => {\n           // handle show completion\n           console.log(\"ORDER COMPLETE!\");\n           return res.json();\n        })\n        .catch(() => {\n            alert(\"Error\");\n        }).then((details) => {\n            alert(\"Successful order!\");\n            console.log(details);\n        });\n    } */\n\n     // To show PayPal buttons once the component loads\n    React.useEffect(() => {\n        window.paypal\n        .Buttons({\n            createOrder: async(data, actions) => {\n                return actions.order.create(paypalOrderObject);\n            },\n            onApprove: async (data, actions) => {\n                return actions.order.capture().then(function(details) {\n                    // Details here includes payer name, phone number, and email.\n\n                    // create order object\n                    const orderObj = {\n                        \"Customer\": {\n                            \"Name\": details.payer.name.given_name + \" \" + details.payer.name.surname,\n                            \"Email\": details.payer.email_address,\n                            \"Phone\": details.payer.phone.phone_number.national_number\n                        },\n                        \"Pickup\": cart.pickup_date,\n                        \"PayPal\": {\n                            \"Amount\": cart.cart_total,\n                            \"transactionID\": details.id\n                        },\n                        \"Order\": \n                        cart.items.map((item) => {\n                            return {\n                                \"item\": item.name,\n                                \"quantity\": item.quantity,\n                                \"extra\": [`${item.size} size`, ...item.addons],\n                            }\n                        })\n                    }\n                    // signal email automation by calling the /autoEmails/automate route, \n                    // this will automatically add the order to the database \n                    return fetch(`${BACKEND_URL}autoEmails/automate`, {\n                        method: \"POST\",\n                        headers: {\n                            \"content-type\": \"application/json\",\n                        },\n                        body: JSON.stringify(orderObj),\n                    }).then((res) => {\n                        if(res.ok){\n                            alert('Transaction completed! You will receive a confirmation email shortly.');\n                            history.push(\"/\");\n                        } else {\n                            alert('Transaction completed, but email automation failed. You paid for your meal, and should get a confirmation from PayPal');\n                            history.push(\"/\");\n\n                        }\n                    })\n                    .catch(() => {\n                        alert(\"Error\");\n                    });\n                });\n            },\n            onCancel: () => {\n                // If the user cancels their order, send them back to the cart summary\n                // The cart summary exists at the menu page\n                console.log(\"cancel\");\n                history.push(\"/\");\n            },\n            onError: (err) => {\n                alert(\"An error occurred!\");\n                console.error(err);\n                history.push(\"/\");\n\n            },\n        })\n        .render(paypalRef.current);\n    }, [cart]);\n\n    return (\n        <div>\n            <div ref={paypalRef}/>\n        </div>\n    )\n}",["147","148"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/SearchSection.js",["149","150","151"],"import React, { Component } from 'react';\nimport SearchBar from \"./SearchBar\";\nimport \"../css/SearchSection.css\";\nconst config = require('../config');\n\nconst BACKEND_URL = config.backend.uri;\n\nconst SearchSection = () => {\n    return (\n      <div className=\"search-section\"></div>\n    );\n}\n  \nexport default SearchSection;",["152","153"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/AdminMenuItems.js",["154"],"import React, {useState, useEffect} from 'react';\nimport {Modal, Button} from 'react-bootstrap';\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SearchBar from \"material-ui-search-bar\";\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport '../css/AdminMenuItems.css';\n\nconst config = require('../config');\nconst BACKEND_URL = config.backend.uri;\n\nfunction createData(itemName, imgSource, categoryName, options, baseprice, description, id, featured) {\n  return {\n        \"itemName\": itemName, \n        \"imgSource\": imgSource,\n        \"categoryName\": categoryName, \n        \"options\": options, \n        \"basePrice\": baseprice, \n        \"description\": description,\n        \"id\": id,\n        \"isFeatured\": featured,\n    };\n}\n\n// Renders modal that asks the user if they want to remove the item from the menu\nconst deleteConfirmationModal = (deleteConfirmation, setDeleteConfirmation, itemList, setItemList, displayContent, setDisplayContent) => {\n    return (\n        <Modal \n            show={deleteConfirmation !== []} \n            onHide={() => setDeleteConfirmation([\"\", \"\"])} \n            backdrop='static'\n            style={{\"marginTop\": \"30vh\"}}\n        >\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Menu Item</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div>\n                        <p>Are you sure you want to remove {deleteConfirmation[0]} from the menu?</p>\n                    </div>\n                </Modal.Body>\n                \n                <Modal.Footer>\n                    <Button variant=\"primary\" className=\"menuAddButton\" onClick={() => {\n                        // REMOVE ITEM FROM MENU\n                        console.log(\"removing item from menu\")\n                        \n                        // Call database, remove item from menu\n                        handleRemoveByID(deleteConfirmation[1], itemList, setItemList, displayContent, setDisplayContent);\n                        setDeleteConfirmation([\"\", \"\"]);\n                    }}>\n                        Remove Item\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => {\n                        setDeleteConfirmation([\"\", \"\"]);\n                    }}>\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        );\n}\n\n// Renders table of items based on what is passed in through displayContent\nfunction menuTable(itemList, setItemList, displayContent, setDisplayContent, setDeleteConfirmation, handleFeatureChange) {\n    return (\n        <TableContainer component={Paper} className=\"menuTableContainer\">\n            <Table aria-label=\"simple table\" stickyHeader className=\"menuTable\">\n                <TableHead>\n                    <TableRow style={{\"overflow\": \"hidden\"}}>\n                        <TableCell className=\"menuTableHeaders\" width=\"5%\">Feature</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"15%\" align=\"center\">Item Image</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"15%\" align=\"left\">Item Name</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"12%\" align=\"left\">Category Name</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"12%\" align=\"left\">Size</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"12%\" align=\"left\">Base Price</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"12%\" align=\"left\">Add-ons</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"12%\" align=\"left\">Edit</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {displayContent.map((row, index) => {\n                        const bgColor = index % 2 === 0 ? \"evenrowbg\" : \"oddrowbg\";\n                        console.log(row);\n                        return (\n                            <TableRow key={row._id} className={bgColor}>\n                                <TableCell component=\"th\" scope=\"row\" className=\"menuRowText\" width=\"5%\">\n                                    <Checkbox\n                                        id={row._id + \"checkbox\"}\n                                        checked={row.isFeatured}\n                                        onChange={(e) => {\n                                            handleFeatureChange(row);\n                                        }}\n                                        name={row.itemName}\n                                        style ={{\n                                            color: \"#747474\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell align=\"center\" className=\"menuRowText\" width=\"15%\">\n                                    <img src={row.imgSource} alt={row.itemName} className=\"menuItemImage\"/>\n                                </TableCell>\n                                <TableCell className=\"menuRowText\" width=\"15%\">{row.itemName}</TableCell>\n                                <TableCell align=\"left\" className=\"menuRowText\" width=\"12%\">{row.categoryName}</TableCell>\n                                <TableCell align=\"left\" className=\"menuRowText\" width=\"12%\">\n                                {\n                                    row.basePrice.map((v) => {return (<>{v[0]}<br /></>)})\n                                }\n                                </TableCell>\n                                <TableCell align=\"left\" className=\"menuRowText\" width=\"12%\">\n                                {\n                                    row.basePrice.map((v) => <>${v[1]}<br /></>)\n                                }\n                                </TableCell>\n                                <TableCell align=\"left\" className=\"menuRowText\" width=\"12%\">\n                                {\n                                    row.options.map((v) => <p>{v[1].Description}</p>)\n                                }\n                                </TableCell>\n                                <TableCell align=\"left\" className=\"menuRowText\" width=\"12%\">\n                                    <IconButton>\n                                        <EditIcon style={{\"marginRight\": \"5px\"}}/>\n                                    </IconButton>\n                                    <IconButton aria-label=\"delete item\" onClick={() => setDeleteConfirmation([row.itemName, row.id])}>\n                                        <DeleteIcon style={{\"marginLeft\": \"5px\"}}/>\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                    )})}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n// handle remove based on id passed in through params\nasync function handleRemoveByID(id, itemList, setItemList, displayContent, setDisplayContent){\n    // remove from database\n    console.log(\"Removing \" + id);\n    await fetch(`${BACKEND_URL}item/remove`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                \"_id\": id\n            })\n        }).then(res => {\n            if(res.ok){\n                console.log(\"Remove successful!\")\n                // remove from rows\n                setItemList(itemList.filter(x => x.id !== id));\n                // remove from filtered rows\n                setDisplayContent(displayContent.filter(x => x.id !== id));\n            }\n        })\n    \n}\nexport default function AdminMenuItems (props) {\n    const [deleteConfirmation, setDeleteConfirmation] = useState([\"\", \"\"]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [filter, setFilter] = useState(\"All\");\n    const [displayContent, setDisplayContent] = useState([]);\n    const [itemList, setItemList] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const [checkboxUpdate, setCheckboxUpdate] = useState(\"\");\n    // Fetch all menu items to display in table\n    useEffect(() => {\n        var data = null;\n        const fetchData = async () => {\n            const res = await fetch(`${BACKEND_URL}item/`, {\n                method: \"GET\",\n                headers: {\n                    \"content-type\": \"application/json\",\n                },\n            })\n            data = await res.json();\n            console.log(data.items);\n            const rows = [];\n            data.items.forEach(element => {\n                console.log(element);\n                rows.push(\n                    createData(\n                        element.Name,\n                        element.pictureURL, \n                        element.Category, \n                        Object.entries(element.Accomodations),\n                        Object.entries(element.Prices), \n                        element.Description,\n                        element._id,\n                        element.isFeatured,\n                ));\n            });\n            setItemList(rows);\n            setDisplayContent(rows);\n            setLoaded(true);\n        }\n        \n        fetchData();\n    }, [setLoaded,])\n    // update display contents based on search term\n    const handleSearch = (searchTerm) => {\n        // Empty search term, so we want to reset the displayed items to those of the current category\n        if(searchTerm === \"\"){\n            if(filter === \"All\"){        \n                setDisplayContent(itemList); \n            }\n            else {\n                setDisplayContent(itemList.filter(x => x.categoryName === filter));\n            }\n        }\n        else{\n            // Filters the current display content to show those that contain the\n            // search term in the name AND correspond to current filter\n            if(filter === \"All\"){\n                setDisplayContent(itemList.filter(x => x.itemName.toLowerCase().includes(searchTerm.toLowerCase()))); \n            }\n            else {\n                // Filter based on search term and filter term\n                setDisplayContent(itemList.filter(x => \n                    x.itemName.toLowerCase().includes(searchTerm.toLowerCase())\n                    && x.categoryName === filter\n                )); \n            }\n        }\n    }\n    // update display contents based on filter term\n    // possible terms are: Main Dish, Appetizer, Drink, Side\n    const handleFilterChange = (filter) => {\n        // clear search\n        setSearchTerm(\"\");\n        if(filter === \"All\"){        \n            setDisplayContent(itemList); \n        }\n        else{\n            const newRows = [];\n            for(var index in itemList) { \n                if (itemList[index][\"categoryName\"] === filter){\n                    newRows.push(itemList[index]); \n                }\n            }\n            console.log(newRows)\n            setDisplayContent(newRows); \n        }\n    }\n    // Called when a set featured checkbox is clicked\n    const handleFeatureChange = async (row) => {\n        const itemID = row.id;\n        const newValue = !row.isFeatured;\n        row.isFeatured = newValue;\n        // update item's feature property in local (displayContent and itemList)\n        var itemListIndex = -1;\n        itemList.forEach((x, index) => {\n            itemListIndex = x.id === itemID ? index : itemListIndex;\n        })\n        if(itemListIndex !== -1){\n            setItemList(prev => {\n                prev[itemListIndex].isFeatured = newValue;\n                return prev;\n            })\n        }\n        var displayContentIndex = displayContent.findIndex(x => x.id === itemID);\n        if(displayContentIndex !== -1){\n            displayContent[displayContentIndex].isFeatured = newValue;\n            setDisplayContent(displayContent);\n        }\n        setCheckboxUpdate(row.itemName + \"\" + newValue);\n\n        // update item's feature property in database\n        await fetch(`${BACKEND_URL}item/feature`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                \"_id\": itemID,\n                \"isFeatured\": newValue\n            })\n        })\n    }\n    if(loaded){\n        return (  \n            <div>\n                {deleteConfirmation[0] !== \"\" && deleteConfirmationModal(deleteConfirmation, setDeleteConfirmation, itemList, setItemList, displayContent, setDisplayContent)}\n                <div className=\"aboveTableContainer\">\n                    <Button className=\"menuAddButton\">\n                        <AddCircleIcon className=\"menuAddButtonIcon\" />\n                        Add Item\n                    </Button>\n                    <div className=\"searchFilterContainer\">\n                        <Select\n                            className=\"menuFilterSelect\"\n                            id=\"item-filter-select\"\n                            defaultValue=\"All\"\n                            displayEmpty=\"false\"\n                            variant=\"outlined\"\n                            value={filter}\n                            onChange={(v) => {\n                                setFilter(v.target.value);\n                                handleFilterChange(v.target.value);\n                            }}\n                        >\n                            <MenuItem value=\"All\">All</MenuItem>\n                            <MenuItem value=\"Appetizer\">Appetizer</MenuItem>\n                            <MenuItem value=\"Main Dish\">Main Dish</MenuItem>\n                            <MenuItem value=\"Side\">Side</MenuItem>\n                            <MenuItem value=\"Drink\">Drink</MenuItem>\n                        </Select>\n                        <SearchBar\n                            className=\"menuSearchBar\"\n                            value={searchTerm}\n                            onChange={(newValue) => setSearchTerm(newValue)}\n                            onRequestSearch={() => handleSearch(searchTerm)}\n                            onCancelSearch={() => {\n                                setSearchTerm(\"\"); \n                                handleSearch(\"\");\n                            }}\n                        />\n                    </div>\n                </div>\n                {menuTable(itemList, setItemList, displayContent, setDisplayContent, setDeleteConfirmation, handleFeatureChange)}\n            </div>\n        )\n    }\n    else{\n        return (\n            <div> </div>\n        )\n    }\n}\n","/Users/amador/UWEAST-Community-Kitchen/frontend/src/util/auth.js",[],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItems.js",["155","156"],"import React from 'react';\nimport MenuItemCategory from './MenuItemCategory';\nimport '../css/MenuItems.css';\nconst config = require('../config');\n\nconst BACKEND_URL = config.backend.uri;\n\nconst MenuItems = ({ foodCategories, processForm, popupVisible, popupValues, togglePopup }) => {\n\n  return (\n\n      <div className=\"menu-items\">\n        {/** generates categories in the menu */}\n        {foodCategories.map((categoryName, key) => {\n          return <MenuItemCategory key={key} categoryName={categoryName} key={key} processForm={processForm} popupVisible={popupVisible} popupValues={popupValues} togglePopup={togglePopup}/>\n        })}\n      </div>\n\n  )\n}\n  \n  export default MenuItems;","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/OrdersTableColumns.js",["157","158"],"import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport '../css/Orders.css';\n\n// Import helper functions from utils\nimport {\n    renderStatus,\n    DisplayDateFilters,\n    DisplayStatusFilters,\n    updateDateFilters,\n    renderDateFilters    \n} from '../util/OrdersTableFunctions';\n\n//The column headers for the table\nconst columns = [\n    {\n      name: \"Pick up Details\",\n      options: {\n        filter: true,\n        filterType: 'custom',\n        customFilterListOptions: {\n          render: renderDateFilters,\n          update: updateDateFilters\n        },\n        filterOptions: {\n          names: [],\n          logic(date, filters) {\n            const getDate = date.split(\"\\n\")[0];\n            if (filters[0] && filters[1]) {\n              return getDate < filters[0] || getDate > filters[1];\n            } else if (filters[0]) {\n              return getDate < filters[0];\n            } else if (filters[1]) {\n              return getDate > filters[1];\n            }\n            return false;\n          },\n          display: DisplayDateFilters\n        }\n      }  \n    },\n    {\n      name: \"Name\",\n      options: {\n        filter: true,\n        filterType: 'textField'\n      }  \n    },\n    {\n      name: \"Email\",\n      options: {\n        filter: true,\n        filterType: 'textField'\n      }    \n    },\n    {\n      name: \"Phone Number\",\n      options: {\n        filter: true,\n        filterType: 'textField'\n      }  \n    },\n    {\n      name: \"Amount Paid\",\n      options: {\n        filter: false\n      }  \n    },\n    {\n      name: \"Order Description\",\n      options: {\n        display: false, \n        viewColumns: false, \n        filter: false\n      }\n    },\n    {\n      name: \"Submission Details\",\n      options: {\n        filter: true,\n        filterType: 'custom',\n        customFilterListOptions: {\n          render: renderDateFilters,\n          update: updateDateFilters\n        },\n        filterOptions: {\n          names: [],\n          logic(date, filters) {\n            const getDate = date.split(\"\\n\")[0];\n            if (filters[0] && filters[1]) {\n              return getDate < filters[0] || getDate > filters[1];\n            } else if (filters[0]) {\n              return getDate < filters[0];\n            } else if (filters[1]) {\n              return getDate > filters[1];\n            }\n            return false;\n          },\n          display: DisplayDateFilters\n        }\n      }  \n    },\n    {\n      name: \"Order Status\",\n      options: {\n        filter: true,\n        filterType: 'custom',\n        customBodyRender: renderStatus,\n        customFilterListOptions: {\n          render: (options) => {\n            if(options[0] === \"All Orders\") return [];\n            return options;\n          },\n        },\n        filterOptions: {\n          names: [\"Pending Orders\", \"Completed Orders\"],\n          logic(order, filters) {\n            if (filters[0] == \"Completed Orders\") {\n              return order === \"Pending Orders\";\n            } else if (filters[0] == \"Pending Orders\") {\n              return order === \"Completed Orders\";\n            }\n  \n            return false;\n          },\n          display: DisplayStatusFilters\n        }\n      }\n    },\n    {\n      name: \"Row ID\",\n      options: {\n        display: false, \n        viewColumns: false, \n        filter: false\n      }\n    }\n];\n\nexport { columns } ;","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItem.js",["159","160"],"import React from 'react';\nimport \"../css/MenuItem.css\";\nconst config = require('../config');\n\nconst MenuItem = ( {description, image, price, title, togglePopup, dietaryInfo, priceOptions, accommodations} ) => {\n    return (\n      <div className=\"menu-item\" onClick={() => togglePopup(title, description, priceOptions, image, dietaryInfo, accommodations)}>\n        <div className=\"menu-image\">\n          <img src={image}></img>\n        </div>\n        <div className=\"menu-text\">\n          <h3 className=\"menu-name\">{title}</h3>\n          <p className=\"menu-description\">{description}</p>\n        </div>\n        <div className=\"menu-absolutes\">\n          <p className=\"menu-price\">${price}</p>\n        </div>\n      </div>\n    );\n}\n  \nexport default MenuItem;","/Users/amador/UWEAST-Community-Kitchen/frontend/src/reportWebVitals.js",[],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/config.js",[],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/NavBar.js",["161","162","163","164","165"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/CartPreview.js",["166","167"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuSection.js",["168","169","170","171","172"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/ChangeEmailScreen.js",[],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuFilter.js",["173","174"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/CartSummary.js",["175","176","177","178","179","180","181","182","183","184","185"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/About.js",["186"],"import React, { Component} from 'react';\nimport Navbar from '../components/NavBar';\nimport PayPal from '../components/PayPal';\n\nconst config = require('../config');\n\nconst BACKEND_URL = config.backend.uri;\n\nclass About extends Component {\n\n    // For paypal payment handling, we assume the cart passed into the PayPal object looks like...\n    // {\n    //     item_total: \"\",\n    //     tax_total: \"\",\n    //     items: [\n    //         {\n    //             name: \"\",\n    //             quantity: \"\", \n    //             size: \"\", (Individual or Family)\n    //             addons: [\"\", \"\"], (Sides, gluten free)\n    //             individual_price: \"\", (price per item)\n    //             individual_tax: \"\", (tax per item)\n    //         },\n\n    //     ]\n    // }\n    \n    render (){\n    const cart = {\n        cart_total: \"15.00\",\n        item_total: \"12.00\",\n        tax_total: \"3.00\",\n        items: [\n            {\n                name: \"Food 1\",\n                quantity: \"2\",\n                size: \"Individual\",\n                addons: [\"Gluten Free\"],\n                individual_price: \"6.00\",\n                individual_tax: \"1.50\",\n            },\n        ],\n        pickup_date: \"2021-02-04\"\n    }\n      return (\n\n          <div>\n              <Navbar currentPage=\"about\"/>\n              <div style={{marginTop: \"30px\"}}>\n                  This is the About Page.\n              </div>\n              <PayPal cart={cart}/>           \n          </div>\n\n      )\n    }\n  }\n  \n  export default About;","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuFilterButton.js",["187","188"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/OrdersTable.js",[],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/index.js",[],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Menu.js",["189","190"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Contact.js",["191"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Orders.js",["192"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/pages/Login.js",[],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/Banner.js",["193","194"],"import React from 'react';\nimport MenuFilterButton from './MenuFilterButton';\nimport \"../css/Banner.css\";\nconst config = require('../config');\n\nconst MenuFilter = ( {foodCategories, changeVisibleCategories} ) => {\n    return (\n      <div className=\"banner\">\n        <p>All orders require a $20 MINIMUM</p>\n      </div>\n    )\n  }\n  \n  export default MenuFilter;","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/SearchBar.js",["195","196"],"import React, { Component } from 'react';\nconst config = require('../config');\n\nconst BACKEND_URL = config.backend.uri;\n\nconst SearchBar = ( {keyword, setKeyword} ) => {\n    return (\n      <input\n        key=\"searchkey\"\n        placeholder=\"search food\"\n      />\n    );\n}\n  \nexport default SearchBar;","/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItemPopup.js",["197","198","199","200","201","202"],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/MenuItemCategory.js",["203","204","205"],"import React, { useState, useEffect} from 'react';\r\nimport '../css/MenuItemCategory.css';\r\nimport MenuItem from './MenuItem';\r\nimport MenuItemPopup from './MenuItemPopup';\r\nconst config = require('../config');\r\n\r\nconst BACKEND_URL = config.backend.uri;\r\n\r\nconst MenuItemCategory = ({ categoryName, processForm, popupVisible, popupValues, togglePopup }) => {\r\n  // array that stores menu items for the current category\r\n  const [menuItems, setMenuItems] = useState(new Array());\r\n  const menuItemValues = [];\r\n\r\n  // useEffect() is called to get information from database\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/item/\")\r\n    .then(async result => {\r\n      if (result.ok) {\r\n        const json = await result.json();\r\n\r\n        for(var i = 0; i < json.items.length; i++) {\r\n          // since \"featured\" isn't a category, we need to handle it differently\r\n          let isCategoryEqual = json.items[i].Category === categoryName;\r\n          let isFeatured = (categoryName === \"Featured\") && (json.items[i].isFeatured);\r\n\r\n          // is stored only if the category name is the same as json's category\r\n          if((json.items !== undefined) && (isCategoryEqual || isFeatured)) {\r\n            menuItemValues.push(json.items[i]);\r\n          }\r\n        }\r\n        setMenuItems(menuItemValues);\r\n      }\r\n      else {\r\n        console.log(\"error\");\r\n      }\r\n    })\r\n\r\n  /**\r\n   * sets dependency on categoryName, meaning that whenever categoryName \r\n   * changes, useEffect is called again. This is necessary so that when filters * are clicked data is actually reloaded\r\n   */\r\n  }, [categoryName]);\r\n  \r\n  return (\r\n      <>\r\n        {/** popup is created here, if it is visible it is rendered */}\r\n        {popupVisible ? <MenuItemPopup values={popupValues} togglePopup={togglePopup} processForm={processForm} /> : null}\r\n        <div className=\"menu-item-category\">\r\n          <h2> {categoryName} </h2>\r\n          <div className=\"menu-item-category-grid\">\r\n            {/** generate menu items based off of array */}\r\n            {menuItems.map((menuItem, key) => {\r\n              let title = menuItem.Name;\r\n              let image = menuItem.pictureURL;\r\n              let description = menuItem.Description;\r\n              // since some items will only have a family pricing option, we use individual as the default; if individual doesnt exist, use family instead\r\n              let price = (\"Individual\" in menuItem.Prices) ? menuItem.Prices.Individual : menuItem.Prices.Family\r\n              let accommodations = menuItem.Accomodations;\r\n              let priceOptions = menuItem.Prices;\r\n              let dietaryInfo = menuItem.dietaryInfo;\r\n\r\n              return <MenuItem title={title} image={image} price={price} description={description} togglePopup={togglePopup} key={key} dietaryInfo={dietaryInfo} priceOptions={priceOptions} accommodations={accommodations} />\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default MenuItemCategory;\r\n","/Users/amador/UWEAST-Community-Kitchen/frontend/src/util/OrdersTableFunctions.js",[],"/Users/amador/UWEAST-Community-Kitchen/frontend/src/components/CustomTimePicker.js",["206","207","208"],"import React from \"react\";\nimport moment from \"moment\";\nimport MomentUtils from \"@date-io/moment\";\nimport { MuiPickersUtilsProvider, TimePicker } from \"@material-ui/pickers\";\nimport '../css/CartSummary.css';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\n\nfunction CustomTimePicker(props) {\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n            <div className=\"time-picker\">\n                <Row>\n                <TimePicker\n                label={props.label ? props.label : \"Time Picker\"}\n                value={\n                    props.value\n                    ? moment(props.value, \"HH:mm A\")\n                    : null\n                }\n                ampm={true}\n                autoOk={true}\n                minutesStep={1}\n                onChange={(time) => props.setSelectedTime(time)}\n                error={props.errorMessage ? true : false}\n                />\n                </Row>\n                <Row>\n                {props.errorMessage && (\n                <span className=\"error\">{props.errorMessage}</span>\n                )}\n                </Row>\n            </div>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nexport default CustomTimePicker;",{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"209","replacedBy":"213"},{"ruleId":"211","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":195,"column":8,"nodeType":"217","endLine":195,"endColumn":14,"suggestions":"218"},{"ruleId":"209","replacedBy":"219"},{"ruleId":"211","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"225","line":2,"column":8,"nodeType":"223","messageId":"224","endLine":2,"endColumn":17},{"ruleId":"221","severity":1,"message":"226","line":6,"column":7,"nodeType":"223","messageId":"224","endLine":6,"endColumn":18},{"ruleId":"209","replacedBy":"227"},{"ruleId":"211","replacedBy":"228"},{"ruleId":"221","severity":1,"message":"229","line":177,"column":12,"nodeType":"223","messageId":"224","endLine":177,"endColumn":26},{"ruleId":"221","severity":1,"message":"226","line":6,"column":7,"nodeType":"223","messageId":"224","endLine":6,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":15,"column":74,"nodeType":"232","endLine":15,"endColumn":83},{"ruleId":"233","severity":1,"message":"234","line":118,"column":28,"nodeType":"235","messageId":"236","endLine":118,"endColumn":30},{"ruleId":"233","severity":1,"message":"234","line":120,"column":35,"nodeType":"235","messageId":"236","endLine":120,"endColumn":37},{"ruleId":"221","severity":1,"message":"237","line":3,"column":7,"nodeType":"223","messageId":"224","endLine":3,"endColumn":13},{"ruleId":"238","severity":1,"message":"239","line":9,"column":11,"nodeType":"240","endLine":9,"endColumn":28},{"ruleId":"241","severity":1,"message":"242","line":10,"column":5,"nodeType":"243","messageId":"244","endLine":10,"endColumn":47},{"ruleId":"241","severity":1,"message":"242","line":13,"column":5,"nodeType":"243","messageId":"244","endLine":13,"endColumn":66},{"ruleId":"241","severity":1,"message":"242","line":17,"column":5,"nodeType":"243","messageId":"244","endLine":17,"endColumn":59},{"ruleId":"241","severity":1,"message":"242","line":24,"column":5,"nodeType":"243","messageId":"244","endLine":24,"endColumn":109},{"ruleId":"241","severity":1,"message":"242","line":33,"column":5,"nodeType":"243","messageId":"244","endLine":33,"endColumn":74},{"ruleId":"221","severity":1,"message":"245","line":1,"column":28,"nodeType":"223","messageId":"224","endLine":1,"endColumn":37},{"ruleId":"233","severity":1,"message":"246","line":46,"column":53,"nodeType":"235","messageId":"236","endLine":46,"endColumn":55},{"ruleId":"221","severity":1,"message":"247","line":4,"column":8,"nodeType":"223","messageId":"224","endLine":4,"endColumn":21},{"ruleId":"221","severity":1,"message":"237","line":6,"column":7,"nodeType":"223","messageId":"224","endLine":6,"endColumn":13},{"ruleId":"233","severity":1,"message":"234","line":30,"column":21,"nodeType":"235","messageId":"236","endLine":30,"endColumn":23},{"ruleId":"233","severity":1,"message":"234","line":39,"column":35,"nodeType":"235","messageId":"236","endLine":39,"endColumn":37},{"ruleId":"221","severity":1,"message":"248","line":70,"column":9,"nodeType":"223","messageId":"224","endLine":70,"endColumn":13},{"ruleId":"221","severity":1,"message":"222","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"226","line":6,"column":7,"nodeType":"223","messageId":"224","endLine":6,"endColumn":18},{"ruleId":"221","severity":1,"message":"249","line":3,"column":30,"nodeType":"223","messageId":"224","endLine":3,"endColumn":48},{"ruleId":"221","severity":1,"message":"250","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":18},{"ruleId":"221","severity":1,"message":"251","line":8,"column":10,"nodeType":"223","messageId":"224","endLine":8,"endColumn":19},{"ruleId":"221","severity":1,"message":"252","line":9,"column":10,"nodeType":"223","messageId":"224","endLine":9,"endColumn":19},{"ruleId":"221","severity":1,"message":"253","line":9,"column":26,"nodeType":"223","messageId":"224","endLine":9,"endColumn":29},{"ruleId":"233","severity":1,"message":"234","line":57,"column":37,"nodeType":"235","messageId":"236","endLine":57,"endColumn":39},{"ruleId":"233","severity":1,"message":"234","line":57,"column":126,"nodeType":"235","messageId":"236","endLine":57,"endColumn":128},{"ruleId":"254","severity":1,"message":"255","line":72,"column":25,"nodeType":"256","endLine":72,"endColumn":35},{"ruleId":"254","severity":1,"message":"255","line":74,"column":25,"nodeType":"256","endLine":74,"endColumn":35},{"ruleId":"233","severity":1,"message":"246","line":82,"column":53,"nodeType":"235","messageId":"236","endLine":82,"endColumn":55},{"ruleId":"254","severity":1,"message":"255","line":163,"column":41,"nodeType":"256","endLine":163,"endColumn":51},{"ruleId":"221","severity":1,"message":"226","line":7,"column":7,"nodeType":"223","messageId":"224","endLine":7,"endColumn":18},{"ruleId":"221","severity":1,"message":"222","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"226","line":5,"column":7,"nodeType":"223","messageId":"224","endLine":5,"endColumn":18},{"ruleId":"221","severity":1,"message":"257","line":1,"column":28,"nodeType":"223","messageId":"224","endLine":1,"endColumn":36},{"ruleId":"221","severity":1,"message":"226","line":12,"column":7,"nodeType":"223","messageId":"224","endLine":12,"endColumn":18},{"ruleId":"221","severity":1,"message":"226","line":6,"column":7,"nodeType":"223","messageId":"224","endLine":6,"endColumn":18},{"ruleId":"221","severity":1,"message":"258","line":2,"column":8,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"259","line":2,"column":8,"nodeType":"223","messageId":"224","endLine":2,"endColumn":24},{"ruleId":"221","severity":1,"message":"237","line":4,"column":7,"nodeType":"223","messageId":"224","endLine":4,"endColumn":13},{"ruleId":"221","severity":1,"message":"222","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"226","line":4,"column":7,"nodeType":"223","messageId":"224","endLine":4,"endColumn":18},{"ruleId":"233","severity":1,"message":"234","line":16,"column":17,"nodeType":"235","messageId":"236","endLine":16,"endColumn":19},{"ruleId":"233","severity":1,"message":"234","line":21,"column":22,"nodeType":"235","messageId":"236","endLine":21,"endColumn":24},{"ruleId":"233","severity":1,"message":"234","line":48,"column":118,"nodeType":"235","messageId":"236","endLine":48,"endColumn":120},{"ruleId":"233","severity":1,"message":"234","line":63,"column":48,"nodeType":"235","messageId":"236","endLine":63,"endColumn":50},{"ruleId":"221","severity":1,"message":"260","line":89,"column":21,"nodeType":"223","messageId":"224","endLine":89,"endColumn":24},{"ruleId":"233","severity":1,"message":"234","line":96,"column":30,"nodeType":"235","messageId":"236","endLine":96,"endColumn":32},{"ruleId":"221","severity":1,"message":"226","line":7,"column":7,"nodeType":"223","messageId":"224","endLine":7,"endColumn":18},{"ruleId":"261","severity":1,"message":"262","line":11,"column":46,"nodeType":"263","messageId":"264","endLine":11,"endColumn":57},{"ruleId":"215","severity":1,"message":"265","line":42,"column":6,"nodeType":"217","endLine":42,"endColumn":20,"suggestions":"266"},{"ruleId":"221","severity":1,"message":"252","line":6,"column":10,"nodeType":"223","messageId":"224","endLine":6,"endColumn":19},{"ruleId":"221","severity":1,"message":"253","line":6,"column":26,"nodeType":"223","messageId":"224","endLine":6,"endColumn":29},{"ruleId":"221","severity":1,"message":"267","line":6,"column":31,"nodeType":"223","messageId":"224","endLine":6,"endColumn":37},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],["268"],["269"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'history' and 'paypalOrderObject'. Either include them or remove the dependency array.","ArrayExpression",["270"],["268"],["269"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'SearchBar' is defined but never used.","'BACKEND_URL' is assigned a value but never used.",["268"],["269"],"'checkboxUpdate' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'config' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useEffect' is defined but never used.","Expected '!==' and instead saw '!='.","'MenuItemPopup' is defined but never used.","'json' is assigned a value but never used.","'KeyboardTimePicker' is defined but never used.","'LuxonUtils' is defined but never used.","'TextField' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'useState' is defined but never used.","'NavBar' is defined but never used.","'MenuFilterButton' is defined but never used.","'key' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","React Hook useEffect has a missing dependency: 'menuItemValues'. Either include it or remove the dependency array.",["271"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},"Update the dependencies array to be: [cart, history, paypalOrderObject]",{"range":"276","text":"277"},"Update the dependencies array to be: [categoryName, menuItemValues]",{"range":"278","text":"279"},[7377,7383],"[cart, history, paypalOrderObject]",[1594,1608],"[categoryName, menuItemValues]"]