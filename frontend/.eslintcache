[{"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/index.js":"1","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Contact.js":"2","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/About.js":"3","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/PayPal.js":"4","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Login.js":"5","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/util/auth.js":"6","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/App.js":"7","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Admin.js":"8","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/NavBar.js":"9","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Register.js":"10","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/config.js":"11","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/ResetPassword.js":"12","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/ForgotPasswordDialogue.js":"13","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/reportWebVitals.js":"14","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Menu.js":"15","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuSection.js":"16","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItemPopup.js":"17","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItems.js":"18","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItem.js":"19","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/SearchSection.js":"20","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuFilter.js":"21","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Orders.js":"22","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/OrdersTable.js":"23","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/SearchBar.js":"24","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuFilterButton.js":"25","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItemCategory.js":"26","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/AdminMenuItems.js":"27","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/Banner.js":"28","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/ChangeEmailScreen.js":"29","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/OrdersTableColumns.js":"30","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/util/OrdersTableFunctions.js":"31"},{"size":500,"mtime":1612821409023,"results":"32","hashOfConfig":"33"},{"size":482,"mtime":1612821409046,"results":"34","hashOfConfig":"33"},{"size":1503,"mtime":1612821409030,"results":"35","hashOfConfig":"33"},{"size":7471,"mtime":1612821408993,"results":"36","hashOfConfig":"33"},{"size":5818,"mtime":1612929599346,"results":"37","hashOfConfig":"33"},{"size":1825,"mtime":1612929599360,"results":"38","hashOfConfig":"33"},{"size":1355,"mtime":1612929605136,"results":"39","hashOfConfig":"33"},{"size":3762,"mtime":1612932327042,"results":"40","hashOfConfig":"33"},{"size":4172,"mtime":1612929735243,"results":"41","hashOfConfig":"33"},{"size":6278,"mtime":1612932042637,"results":"42","hashOfConfig":"33"},{"size":191,"mtime":1612821409013,"results":"43","hashOfConfig":"33"},{"size":6203,"mtime":1612932057989,"results":"44","hashOfConfig":"33"},{"size":3704,"mtime":1612931287589,"results":"45","hashOfConfig":"33"},{"size":362,"mtime":1612821409074,"results":"46","hashOfConfig":"33"},{"size":731,"mtime":1612929605116,"results":"47","hashOfConfig":"33"},{"size":3802,"mtime":1612929605101,"results":"48","hashOfConfig":"33"},{"size":9694,"mtime":1612929605099,"results":"49","hashOfConfig":"33"},{"size":689,"mtime":1612928909903,"results":"50","hashOfConfig":"33"},{"size":757,"mtime":1612929605096,"results":"51","hashOfConfig":"33"},{"size":322,"mtime":1612929605106,"results":"52","hashOfConfig":"33"},{"size":620,"mtime":1612821408930,"results":"53","hashOfConfig":"33"},{"size":4548,"mtime":1612929605117,"results":"54","hashOfConfig":"33"},{"size":3867,"mtime":1612929605103,"results":"55","hashOfConfig":"33"},{"size":300,"mtime":1612821409000,"results":"56","hashOfConfig":"33"},{"size":451,"mtime":1612821408937,"results":"57","hashOfConfig":"33"},{"size":2994,"mtime":1612929605098,"results":"58","hashOfConfig":"33"},{"size":15295,"mtime":1612929605091,"results":"59","hashOfConfig":"33"},{"size":360,"mtime":1612929605094,"results":"60","hashOfConfig":"33"},{"size":2518,"mtime":1612929605095,"results":"61","hashOfConfig":"33"},{"size":3384,"mtime":1612929605105,"results":"62","hashOfConfig":"33"},{"size":5513,"mtime":1612929605119,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a4pre7",{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/index.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Contact.js",["140"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/About.js",["141"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/PayPal.js",["142"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Login.js",[],["143","144"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/util/auth.js",["145"],"const config = require('../config');\n\nconst ADMIN_TOKEN_ATTRIBUTE = 'uweast-ck:admin-token'; //Genereated from backend using secret-id\nconst ADMIN_EMAIL_ATTRIBUTE = 'uweast-ck:admin-email';\n\nconst BACKEND_URL = config.backend.uri;\n\n//Returns true if user is logged in, false otherwise\nfunction isAuthenticated() {\n    // if (!localStorage.hasOwnProperty(ADMIN_TOKEN_ATTRIBUTE)){\n    //     return false\n    // }\n    // const submission = {\n    //     jwtToken: localStorage.getItem(ADMIN_TOKEN_ATTRIBUTE)\n    // }\n    // const response = await fetch(`${BACKEND_URL}jwt/verify`, {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify(submission)\n    //   });\n\n    //   if(response.ok){\n    //       return true;\n    //   }\n    //   return false;\n    return localStorage.hasOwnProperty(ADMIN_TOKEN_ATTRIBUTE);\n  }\n  \n  //Retrieves the logged in user's JWT token from local storage\n  function getJWT() {\n    if (!isAuthenticated()) {\n      return null;\n    }\n    return localStorage.getItem(ADMIN_TOKEN_ATTRIBUTE);\n  }\n  \n  //Sets the user's JWT token in local storage\n  function setJWT(token) {\n    localStorage.setItem(ADMIN_TOKEN_ATTRIBUTE, token);\n  }\n  \n  //Retrieves the logged in user's email address\n  function getUser() {\n    if (!isAuthenticated()) {\n      return null;\n    }\n    return JSON.parse(localStorage.getItem(ADMIN_EMAIL_ATTRIBUTE));\n  }\n  \n  //Sets the user's email address\n  function setUser(user) {\n    localStorage.setItem(ADMIN_EMAIL_ATTRIBUTE, JSON.stringify(user));\n  }\n  \n  //Clears out all attributes in local storage\n  function logout() {\n    localStorage.removeItem(ADMIN_TOKEN_ATTRIBUTE);\n    localStorage.removeItem(ADMIN_EMAIL_ATTRIBUTE);\n  }\n  \n  export {\n    isAuthenticated, getJWT, setJWT,\n    getUser, setUser, logout\n  };\n","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/App.js",["146"],"import './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Menu from './pages/Menu';\nimport About from './pages/About';\nimport Admin from './pages/Admin';\nimport Contact from './pages/Contact';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport ResetPassword from './pages/ResetPassword';\nimport Orders from './pages/Orders';\n\nfunction App() {\n  return (\n    <Router>\n      {/* Switch gurantees that a URL can match to only one route*/}\n      <Switch>\n        {/* Login Page */}\n        <Route exact path=\"/login\">\n          <Login/>\n        </Route>\n        {/* Register Page */}\n        <Route exact path=\"/register\">\n          <Register/>\n        </Route>\n        {/* Reset Password Page */}\n        <Route exact path=\"/reset-password\">\n          <ResetPassword/>\n        </Route>\n        {/* About Page */}\n        <Route exact path=\"/about\">\n          <About/>\n        </Route>\n        {/* Contact Page */}\n        <Route exact path=\"/contact\">\n          <Contact/>\n        </Route>\n        {/* Admin Page */}\n        <Route exact path=\"/admin\">\n          <Admin/>\n        </Route>\n        {/* Any other URL is automatically matched to Menu Page */}\n        <Route path=\"/\">\n          <Menu/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Admin.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/NavBar.js",["147","148","149","150","151","152","153"],"import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { isAuthorized, removeJWT } from '../util/auth.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\nimport Logo from \"../util/UWEAST_Logo_Detail_Transparent.png\";\nimport '../css/NavBar.css';\nimport { isAuthenticated, logout} from '../util/auth';\n\n\nexport default function NavBar (props) {\n\n    {/* history hook to redirect on logout */}\n    const history = useHistory();\n\n    {/* stores class names to toggle whether content is shown */}\n    var adminContentClass;\n    var loginButtonClass;\n\n    {/* removes login token and redirects to menu page */}\n    function Logout() {\n        logout();\n        history.push(\"/login\");\n        history.go(0);\n    }\n\n    {/* Hides admin content (admin page + logout) or login button depending on whether user is logged in */}\n    if(isAuthenticated()) {\n        adminContentClass = \"nav-link\";\n        loginButtonClass = \"nav-link d-none\";\n    } else {\n        adminContentClass = \"nav-link d-none\";\n        loginButtonClass = \"nav-link\";\n    }\n\n    {/* Check current page from props to change active nav-link color */}\n    function isPageActive(pageToCheck) {\n        return (pageToCheck === props.currentPage) ? \" active\" : \"\";\n    }\n\n    return (\n        <html>\n            <head>\n                {/* Bootstrap Resources */}\n                <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossOrigin=\"anonymous\"/>\n            </head>\n            <Navbar className=\"navbar navbar-bg-color\" collapseOnSelect expand=\"md\" variant=\"dark\">\n                \n                {/* Left Hand Side of Navbar - Title & Image linked to Menu Page */}\n                <Navbar.Brand href=\"/\">\n                    <img src={Logo} className=\"logo-img\" alt=\"UWEAST Logo\" width={window.innerWidth > 768 ? '90' : '80'} \n                        height={window.innerWidth > 768 ? '90' : '80'} />\n                </Navbar.Brand>\n\n                <div className=\"brand-name\">\n                    <p>Community Kitchen</p>\n                </div>\n\n                {/* The shopping cart will only render if it is a mobile component */}\n                <div className=\"cart-icon\">\n                    <FontAwesomeIcon icon={faShoppingCart} style={{ color: 'white' }} \n                        onClick={() => console.log('clicked')} />\n\n                </div>\n\n                {/* Triggers on Collapse - Hamburger Icon replaces pages */}\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\n                {/* Right Hand Side of Navbar - Linked Pages (based off of Router paths in App.js) */}\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        {/* Menu Page */}\n                        <Nav.Link className={\"nav-link\" + isPageActive(\"menu\")} href=\"/\">Menu</Nav.Link>\n\n                        {/* Contact Page */}\n                        <Nav.Link className={\"nav-link\" + isPageActive(\"contact\")} href=\"/contact\">Contact</Nav.Link>\n\n                        {/* About Page */}\n                        <Nav.Link className={\"nav-link\" + isPageActive(\"about\")} href=\"/about\">About</Nav.Link>\n\n                        <span className=\"desktop-tabs\">\n                            <Nav.Link className={adminContentClass + isPageActive(\"admin\")} href=\"/admin\">Admin</Nav.Link>\n                        </span>\n\n                        <span className=\"desktop-tabs\">\n                            <Nav.Link className={adminContentClass} onClick={Logout}>Logout</Nav.Link>\n                        </span>\n\n                        <span className=\"desktop-tabs\">\n                            <Nav.Link className={loginButtonClass + isPageActive(\"login\")} href=\"/login\">Login</Nav.Link> \n                        </span>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </html>\n    )\n}\n","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Register.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/config.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/ResetPassword.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/ForgotPasswordDialogue.js",["154"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/reportWebVitals.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Menu.js",["155"],"import React, { Component} from 'react';\nimport Navbar from '../components/NavBar';\nimport SearchSection from '../components/SearchSection';\nimport MenuSection from '../components/MenuSection';\nimport Banner from '../components/Banner';\nconst config = require('../config');\n\nconst BACKEND_URL = config.backend.uri;\n\nclass Menu extends Component {\n\n\n    render (){\n\n      return (\n          <div>\n              <div className=\"navbar-wrapper\">\n                <Navbar currentPage=\"menu\"/>\n              </div>\n              <Banner/>\n              {/** search section is the top, non-menu half of the page */}\n              <SearchSection/>\n              <MenuSection/> \n          </div>\n\n      )\n    }\n  }\n  \n  export default Menu;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuSection.js",["156","157","158","159","160"],"import React, { useState } from 'react';\nimport MenuFilter from './MenuFilter';\nimport MenuItems from './MenuItems';\nimport MenuItemPopup from './MenuItemPopup';\nimport '../css/MenuSection.css';\nconst config = require('../config');\n\n// MenuSection is responsible for managing states for most of the menu\nconst MenuSection = () => {\n  // filterCategories populates the filter buttons\n  const filterCategories = [\"Whole Menu\", \"Featured\", \"Appetizers\", \"Main Dishes\", \"Sides\", \"Drinks\"];\n\n  // populates the menu item categories\n  const defaultCategories = [\"Featured\", \"Appetizers\", \"Main Dishes\", \"Sides\", \"Drinks\"];\n\n  // stores all the categories currently visible\n  let displayedCategories = [];\n\n  // states that are managed and passed down to components\n  const [visibleCategories, setVisibleCategories] = useState(defaultCategories);\n\n  // stores whether or not the popup is currently visible\n  const [popupVisible, setPopupVisible] = useState(false);\n\n  // map with all of the data that will be displayed in the popup\n  const [popupValues, setPopupValues] = useState(new Map());\n\n  // changes visible categories when filter button is clicked\n  const changeVisibleCategories = categoryName => {\n    if(categoryName == \"Whole Menu\") {\n      displayedCategories = defaultCategories;\n    }\n    else {\n      // if the option is not \"whole menu\", a new item is added to the \n      // displayedCategories array that is then passed to be rendered\n      displayedCategories.push(categoryName);\n    }\n\n    if(displayedCategories.length == 0) {\n      displayedCategories = defaultCategories;\n    }\n    \n    // responsible for actually rendering/setting what will be visible\n    setVisibleCategories(displayedCategories);\n  }\n\n  // processes the form submitted from the popup\n  const processForm = e => {\n    // prevents page reload\n    e.preventDefault();\n\n    // gets the form data\n    var data = new FormData(e.target);\n    var object = {};\n\n    // goes through and makes an object from the FormData\n    data.forEach((value, key) => {\n        if(!Reflect.has(object, key)){\n            object[key] = value;\n            return;\n        }\n\n        if(!Array.isArray(object[key])){\n            object[key] = [object[key]];    \n        }\n        object[key].push(value);\n    });\n\n    // converts the FormData to a JSON string, optional\n    var json = JSON.stringify(object);\n    \n    // when submit button is clicked, the popup is closed\n    togglePopup();\n  }\n  \n  // closes popup when open and opens popup when closed\n  const togglePopup = (title, description, price, image, dietaryInfo, accommodations) => {\n    setPopupVisible(!popupVisible);\n    \n    // sets the values of the map based on passed-in information\n    popupValues.set(\"title\", title);\n    popupValues.set(\"description\", description);\n    popupValues.set(\"price\", price);\n    popupValues.set(\"image\", image);\n    popupValues.set(\"dietary-info\", dietaryInfo);\n    popupValues.set(\"accommodations\", accommodations);\n\n    setPopupValues(popupValues);\n  }\n\n  /**\n   * MenuSection is split into three columns:\n   * 1. filter column\n   * 2. menu column\n   * 3. cart column\n   */\n  return (\n    <div className=\"menu-section-wrapper\">\n      <div className=\"menu-section\">\n        <div className=\"menu-filter-wrapper\">\n          <MenuFilter foodCategories={filterCategories} changeVisibleCategories={() => changeVisibleCategories} />\n        </div>\n        <div className=\"menu-items\">\n          {/** parameters are states being passed down */}\n          <MenuItems foodCategories={visibleCategories} processForm={processForm} popupVisible={popupVisible} popupValues={popupValues} togglePopup={togglePopup} />\n        </div>\n        <div className=\"menu-cart\">\n          cart\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MenuSection;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItemPopup.js",["161","162","163","164","165","166"],"import React, { useState } from 'react';\r\nimport '../css/MenuItemPopup.css';\r\nimport plus from '../media/plus.svg';\r\nimport minus from '../media/minus.svg';\r\n\r\nconst MenuItemPopup = ({ values, togglePopup, processForm }) => {\r\n    const [quantity, setQuantity] = useState(1);\r\n    // if individual price exists, use that as default; otherwise, use family\r\n    const [currPrice, setCurrPrice] = useState((\"Individual\" in values.get(\"price\")) ? values.get(\"price\").Individual : values.get(\"price\").Family);\r\n    const [totalPrice, setTotalPrice] = useState(currPrice);\r\n    const [accommodationCost, setAccommodationCost] = useState(0);\r\n\r\n    // handles changing price and quantity states\r\n    const changeQuantity = sign => {\r\n        // everything is fixed to 2 decimal places\r\n        if(sign == \"+\") {\r\n            setQuantity(quantity + 1);\r\n            // calulates on quantity + 1 b/c state hasn't updated yet\r\n            setTotalPrice((parseFloat(accommodationCost) + currPrice * (quantity + 1)).toFixed(2));\r\n        }\r\n        else if(sign == \"-\") {\r\n            if(quantity > 1) {\r\n                setQuantity(quantity - 1);\r\n                // calulates on quantity - 1 b/c state hasn't updated yet\r\n                setTotalPrice((parseFloat(accommodationCost) + currPrice * (quantity - 1)).toFixed(2));\r\n            }\r\n        }\r\n    }\r\n\r\n    //handles toggling price additions from accommodations\r\n    const handleAccommodation = (event, price) => {\r\n        // everything is fixed to 2 decimal places\r\n        if(event.target.checked) {\r\n            // parseFloat() is necessary because otherwise they get treated like strings for addition\r\n            setAccommodationCost((parseFloat(accommodationCost) + parseFloat(price)).toFixed(2));\r\n            setTotalPrice((parseFloat(totalPrice) + parseFloat(price)).toFixed(2));\r\n        } else {\r\n            setAccommodationCost((accommodationCost - price).toFixed(2));\r\n            setTotalPrice((totalPrice - price).toFixed(2));\r\n        }\r\n    }\r\n\r\n    // helper function to render the \r\n    const renderSize = (name, price, hasBothPrices) => {\r\n        return(\r\n            /** conditionally displays family size as an \"add-on\" if both are possible */\r\n            <label className=\"choice-label\">\r\n                <input onClick={() => handleSize(price)} type=\"radio\" name=\"size\" value={name} defaultChecked={(name == \"Individual\" || !(\"Individual\" in values.get(\"price\")))} required />\r\n                <span onClick={() => handleSize(price)} className=\"label-title\">{(hasBothPrices) ? name + \" +($\" + parseFloat(price - values.get(\"price\").Individual).toFixed(2) + \")\": name}</span>\r\n            </label>\r\n        );\r\n    }\r\n    // will be used when family price is introduced to toggle between\r\n    const handleSize = (newPrice) => {\r\n        setCurrPrice(newPrice);\r\n        // currPrice has yet to update, so still using newPrice\r\n        // fix to 2 decimal places\r\n        setTotalPrice((parseFloat(accommodationCost) + newPrice * (quantity)).toFixed(2));\r\n    }\r\n\r\n    const renderAccommodations = () => {\r\n        // return nothing if there are no accommodations\r\n        if(values.get(\"accommodations\").length == 0) return;\r\n        else {\r\n            return (\r\n                /** Header */\r\n                <div className=\"section accommodations-section\">\r\n                <div className=\"section-title\">\r\n                    <h3>Accommodations</h3>\r\n                    <i>optional</i>\r\n                </div>\r\n                {/* map through and render all accommodations */}\r\n                {values.get(\"accommodations\").map((accommodation) => {\r\n                    return(\r\n                        <label className=\"choice-label\">\r\n                            <input type=\"checkbox\" name=\"accommodations\" value={accommodation.Description} id={accommodation.Description} onChange={(e) => handleAccommodation(e, accommodation.Price)} />\r\n                            <span className=\"label-title\">{accommodation.Description + \" +($\" + parseFloat(accommodation.Price).toFixed(2) + \")\"}</span>\r\n                        </label>\r\n                    );\r\n                })}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const numDietaryInfo = () => {\r\n        const dietaryInfo = Object.entries(values.get(\"dietary-info\"));\r\n        var count = 0;\r\n        for (const [key, value] of dietaryInfo) {\r\n            if(value) count++;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    const renderDietaryInfo = () => {\r\n        if (numDietaryInfo() == 0) return;\r\n        else {\r\n            return (\r\n                <>\r\n                <hr/>\r\n                <p className=\"dietary-info\">\r\n                    {(values.get(\"dietary-info\").vegan) ? \"*Vegan\" : null}\r\n                    {(values.get(\"dietary-info\").vegan) ? <br/> : null}\r\n                    {(values.get(\"dietary-info\").vegetarian) ? \"*Vegetarian\" : null}\r\n                    {(values.get(\"dietary-info\").vegetarian) ? <br/> : null}\r\n                    {(values.get(\"dietary-info\").glutenFree) ? \"*Gluten-free\" : null}\r\n                </p>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/** div that fades out the background */}\r\n            <div className=\"greyout\" onClick={togglePopup}></div>\r\n            <div className=\"menu-item-popup\">\r\n                <span className=\"close-button\" onClick={togglePopup}>+</span>\r\n                <div className=\"group-popup\">\r\n\r\n                    {/** Left side with dish details */}\r\n                    <div className=\"left-popup\">\r\n                        <div className=\"popup-image\" style={{backgroundImage: \"url(\" + values.get(\"image\") + \")\"}}>\r\n                            <div className=\"popup-image-price\"><h3>{\"$\" + parseFloat(currPrice).toFixed(2)}</h3></div>\r\n                        </div>\r\n                        <div className=\"popup-item-info\">\r\n                            <h3 className=\"title-popup\">{values.get(\"title\")}</h3>\r\n                            <p className=\"desc-popup\">{values.get(\"description\")}</p>\r\n                            {renderDietaryInfo()}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/** right side with order options */}\r\n                    <div className=\"right-popup\">\r\n                        <form onSubmit={processForm} id=\"popup-form\">\r\n\r\n                            {/** sizing options */}\r\n                            <div className=\"section size-section\">\r\n                                <div className=\"section-title\">\r\n                                    <h3>Choose Size</h3>\r\n                                    <i>required</i>\r\n                                </div>\r\n                                {/** checks to ensure individual/family sizes exist; conditionally displays family size as an \"add-on\" if both are possible */}\r\n                                {(\"Individual\" in values.get(\"price\")) ? renderSize(\"Individual\", values.get(\"price\").Individual, false) : null}\r\n                                {(\"Family\" in values.get(\"price\")) ? renderSize(\"Family\", values.get(\"price\").Family, (\"Individual\" in values.get(\"price\"))) : null}\r\n                            </div>\r\n\r\n                            {/** accommodations options */}\r\n                            {renderAccommodations()}\r\n\r\n                            {/** custom instructions text area */}\r\n                            <div className=\"section instructions-section\">\r\n                                <div className=\"section-title\">\r\n                                    <h3>Special Instructions</h3>\r\n                                    <i>optional</i>\r\n                                </div>\r\n                                <p className=\"instructions-note\">Special accommodations can be made for orders placed in advanced but are not guaranteed, please <a href=\"/contact\">contact us</a> directly for more info.</p>\r\n                                <textarea name=\"instructions\" maxLength=\"75\" className=\"instructions-textarea\" />\r\n                            </div>\r\n\r\n                            {/** quantity selection */}\r\n                            <div className=\"section quantity-section\">\r\n                                <div className=\"section-title\"><h3>Quantity</h3></div>\r\n                                <div className=\"quantity-buttons\">\r\n                                    <button type=\"button\" className=\"button decrease-button\" onClick={() => {changeQuantity(\"-\");}\r\n                                    }><img src={minus} alt=\"Decrease Quantity\" /></button>\r\n                                    <span className=\"quantity-number\">{quantity}</span>\r\n                                    <button type=\"button\" className=\"button increase-button\" \r\n                                    onClick={() => {changeQuantity(\"+\");}}><img src={plus} alt=\"Increase Quantity\" /></button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/** hidden fields to pass along to the total price and  quantity */}\r\n                            <input name=\"name\" type=\"hidden\" value={values.get(\"title\")} />\r\n                            <input name=\"price\" type=\"hidden\" value={parseFloat(totalPrice).toFixed(2)} />\r\n                            <input name=\"quantity\" type=\"hidden\" value={quantity} />\r\n                            <input className=\"submit-order-button\" type=\"submit\" value={\"Add \" + quantity + \" to cart: $\" + totalPrice} />\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n  \r\n    export default MenuItemPopup;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItems.js",["167","168"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItem.js",["169","170"],"import React from 'react';\nimport \"../css/MenuItem.css\";\nconst config = require('../config');\n\nconst MenuItem = ( {description, image, price, title, togglePopup, dietaryInfo, priceOptions, accommodations} ) => {\n    return (\n      <div className=\"menu-item\" onClick={() => togglePopup(title, description, priceOptions, image, dietaryInfo, accommodations)}>\n        <div className=\"menu-image\">\n          <img src={image}></img>\n        </div>\n        <div className=\"menu-text\">\n          <h3 className=\"menu-name\">{title}</h3>\n          <p className=\"menu-description\">{description}</p>\n        </div>\n        <div className=\"menu-absolutes\">\n          <p className=\"menu-price\">${price}</p>\n        </div>\n      </div>\n    );\n}\n  \nexport default MenuItem;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/SearchSection.js",["171","172","173"],"import React, { Component } from 'react';\nimport SearchBar from \"./SearchBar\";\nimport \"../css/SearchSection.css\";\nconst config = require('../config');\n\nconst BACKEND_URL = config.backend.uri;\n\nconst SearchSection = () => {\n    return (\n      <div className=\"search-section\"></div>\n    );\n}\n  \nexport default SearchSection;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuFilter.js",["174","175"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Orders.js",["176"],"import React from 'react';\nimport NavBar from '../components/NavBar';\nimport OrdersTable from '../components/OrdersTable';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport '../css/Orders.css';\n\nconst config = require('../config');\n\nconst BACKEND_URL = config.backend.uri;\n\nexport default class Orders extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            getOrders: [],\n            Loading: true,\n        }\n\n        this.formatTime = this.formatTime.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n        this.formatArray = this.formatArray.bind(this);\n    }\n\n    /**\n     * Formats the data from the fetch() call into the array\n     * @param {Object} list \n     * @param {String} date \n     * @param {String} formatCurrTime \n     * @param {String} dateSubmission \n     * @param {String} formatCurrTimeSubmission \n     */\n    formatArray(list, date, formatCurrTime, dateSubmission, formatCurrTimeSubmission) {\n        let val = formatCurrTime;\n        let val2 = formatCurrTimeSubmission;\n\n        const dateOne = date + `\\n${val}`;\n        const dateTwo = dateSubmission + `\\n${val2}`;\n        return [dateOne, list.Customer.Name, list.Customer.Email, list.Customer.Phone, \n            list.PayPal.Amount, list.Order, dateTwo, list.isCompleted ? \"Completed Orders\" : \"Pending Orders\", \n            list._id];\n    }\n\n    /**\n     * Formats the time in the HH:MM (P.M. OR A.M.)\n     * @param {String} time \n     */\n    formatTime(time) {\n        time = time.split(':'); // convert to array\n        \n        let hours = Number(time[0]);\n        let minutes = Number(time[1]);\n        let timeValue;\n\n        if (hours > 0 && hours <= 12) timeValue = \"\" + hours; \n        else if (hours > 12) timeValue = \"\" + (hours - 12);\n        else if (hours === 0) timeValue = \"12\";\n        \n        timeValue += (minutes < 10) ? \":0\" + minutes : \":\" + minutes;  // get minutes\n        timeValue += (hours >= 12) ? \" P.M.\" : \" A.M.\";  // get AM/PM\n\n        return timeValue;\n    }\n\n    /**\n     * Formats the date to be in the MM/DD/YYYY format\n     * @param {String} getDate \n     */\n    formatDate(getDate) {\n        const monthSubmission = getDate.getMonth()+1 >= 10 ? getDate.getMonth()+1 : (\"0\" + (getDate.getMonth() + 1)).slice(-2);\n        const dateSubmission = monthSubmission + \"/\" + getDate.getDate() + \"/\" + getDate.getFullYear();   \n        return dateSubmission \n    }\n\n    /**\n     * Get all the orders from the database\n     */\n    componentDidMount() {\n        fetch(`${BACKEND_URL}order`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n        .then(data => {\n            const getOrdersList = data.orders;\n            const length = getOrdersList.length\n            let createArr = [];\n\n            for(let i = 0; i < length; i++) {\n                //Get the date from the database\n                let getDate = new Date(getOrdersList[i].Pickup);\n                const formatCurrtime = this.formatTime(getDate.getHours() + \":\" + getDate.getMinutes() + \":\" + getDate.getSeconds());\n                const date = this.formatDate(getDate);\n\n                //Format for the submission date\n                let getDateSubmission = new Date(getOrdersList[i].createdAt);\n                const formatCurrtimeSubmission = this.formatTime(getDateSubmission.getHours() + \":\" + getDateSubmission.getMinutes() + \":\" + getDateSubmission.getSeconds());\n                const dateSubmission = this.formatDate(getDateSubmission);\n\n                const formatedArray = this.formatArray(getOrdersList[i], date, formatCurrtime, dateSubmission, formatCurrtimeSubmission)\n                createArr.push(formatedArray);\n            }\n            this.setState({ getOrders: createArr, Loading: false})\n        })\n        .catch(err => console.log(err));\n    }\n    \n    render() {\n        return (\n            <div className=\"orders-page-container\">\n                {/* Render a progress spinner to show it is loading */}\n                {this.state.Loading ? \n                <div className=\"spinner-orders-page\">\n                    <CircularProgress />\n                </div> : \n                <div className=\"orders-table\">\n                    <div className=\"justify-table-center\">\n                        <OrdersTable orders={this.state.getOrders} />\n                    </div>\n                </div>\n                }\n            </div>\n        )\n    }\n}","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/OrdersTable.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/SearchBar.js",["177","178"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuFilterButton.js",["179","180"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItemCategory.js",["181","182","183"],"import React, { useState, useEffect} from 'react';\r\nimport '../css/MenuItemCategory.css';\r\nimport MenuItem from './MenuItem';\r\nimport MenuItemPopup from './MenuItemPopup';\r\nconst config = require('../config');\r\n\r\nconst BACKEND_URL = config.backend.uri;\r\n\r\nconst MenuItemCategory = ({ categoryName, processForm, popupVisible, popupValues, togglePopup }) => {\r\n  // array that stores menu items for the current category\r\n  const [menuItems, setMenuItems] = useState(new Array());\r\n  const menuItemValues = [];\r\n\r\n  // useEffect() is called to get information from database\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/item/\")\r\n    .then(async result => {\r\n      if (result.ok) {\r\n        const json = await result.json();\r\n\r\n        for(var i = 0; i < json.items.length; i++) {\r\n          // since \"featured\" isn't a category, we need to handle it differently\r\n          let isCategoryEqual = json.items[i].Category === categoryName;\r\n          let isFeatured = (categoryName === \"Featured\") && (json.items[i].isFeatured);\r\n\r\n          // is stored only if the category name is the same as json's category\r\n          if((json.items !== undefined) && (isCategoryEqual || isFeatured)) {\r\n            menuItemValues.push(json.items[i]);\r\n          }\r\n        }\r\n        setMenuItems(menuItemValues);\r\n      }\r\n      else {\r\n        console.log(\"error\");\r\n      }\r\n    })\r\n\r\n  /**\r\n   * sets dependency on categoryName, meaning that whenever categoryName \r\n   * changes, useEffect is called again. This is necessary so that when filters * are clicked data is actually reloaded\r\n   */\r\n  }, [categoryName]);\r\n  \r\n  return (\r\n      <>\r\n        {/** popup is created here, if it is visible it is rendered */}\r\n        {popupVisible ? <MenuItemPopup values={popupValues} togglePopup={togglePopup} processForm={processForm} /> : null}\r\n        <div className=\"menu-item-category\">\r\n          <h2> {categoryName} </h2>\r\n          <div className=\"menu-item-category-grid\">\r\n            {/** generate menu items based off of array */}\r\n            {menuItems.map((menuItem, key) => {\r\n              let title = menuItem.Name;\r\n              let image = menuItem.pictureURL;\r\n              let description = menuItem.Description;\r\n              // since some items will only have a family pricing option, we use individual as the default; if individual doesnt exist, use family instead\r\n              let price = (\"Individual\" in menuItem.Prices) ? menuItem.Prices.Individual : menuItem.Prices.Family\r\n              let accommodations = menuItem.Accomodations;\r\n              let priceOptions = menuItem.Prices;\r\n              let dietaryInfo = menuItem.dietaryInfo;\r\n\r\n              return <MenuItem title={title} image={image} price={price} description={description} togglePopup={togglePopup} key={key} dietaryInfo={dietaryInfo} priceOptions={priceOptions} accommodations={accommodations} />\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default MenuItemCategory;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/AdminMenuItems.js",["184"],"import React, {useState, useEffect} from 'react';\nimport {Modal, Button} from 'react-bootstrap';\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SearchBar from \"material-ui-search-bar\";\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport '../css/AdminMenuItems.css';\n\nconst config = require('../config');\nconst BACKEND_URL = config.backend.uri;\n\nfunction createData(itemName, imgSource, categoryName, options, baseprice, description, id, featured) {\n  return {\n        \"itemName\": itemName, \n        \"imgSource\": imgSource,\n        \"categoryName\": categoryName, \n        \"options\": options, \n        \"basePrice\": baseprice, \n        \"description\": description,\n        \"id\": id,\n        \"isFeatured\": featured,\n    };\n}\n\n// Renders modal that asks the user if they want to remove the item from the menu\nconst deleteConfirmationModal = (deleteConfirmation, setDeleteConfirmation, itemList, setItemList, displayContent, setDisplayContent) => {\n    return (\n        <Modal \n            show={deleteConfirmation !== []} \n            onHide={() => setDeleteConfirmation([\"\", \"\"])} \n            backdrop='static'\n            style={{\"marginTop\": \"30vh\"}}\n        >\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Menu Item</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div>\n                        <p>Are you sure you want to remove {deleteConfirmation[0]} from the menu?</p>\n                    </div>\n                </Modal.Body>\n                \n                <Modal.Footer>\n                    <Button variant=\"primary\" className=\"menuAddButton\" onClick={() => {\n                        // REMOVE ITEM FROM MENU\n                        console.log(\"removing item from menu\")\n                        \n                        // Call database, remove item from menu\n                        handleRemoveByID(deleteConfirmation[1], itemList, setItemList, displayContent, setDisplayContent);\n                        setDeleteConfirmation([\"\", \"\"]);\n                    }}>\n                        Remove Item\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => {\n                        setDeleteConfirmation([\"\", \"\"]);\n                    }}>\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        );\n}\n\n// Renders table of items based on what is passed in through displayContent\nfunction menuTable(itemList, setItemList, displayContent, setDisplayContent, setDeleteConfirmation, handleFeatureChange) {\n    return (\n        <TableContainer component={Paper} className=\"menuTableContainer\">\n            <Table aria-label=\"simple table\" stickyHeader className=\"menuTable\">\n                <TableHead>\n                    <TableRow style={{\"overflow\": \"hidden\"}}>\n                        <TableCell className=\"menuTableHeaders\" width=\"5%\">Feature</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"15%\" align=\"center\">Item Image</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"15%\" align=\"left\">Item Name</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"12%\" align=\"left\">Category Name</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"12%\" align=\"left\">Size</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"12%\" align=\"left\">Base Price</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"12%\" align=\"left\">Add-ons</TableCell>\n                        <TableCell className=\"menuTableHeaders\" width=\"12%\" align=\"left\">Edit</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {displayContent.map((row, index) => {\n                        const bgColor = index % 2 === 0 ? \"evenrowbg\" : \"oddrowbg\";\n                        console.log(row);\n                        return (\n                            <TableRow key={row._id} className={bgColor}>\n                                <TableCell component=\"th\" scope=\"row\" className=\"menuRowText\" width=\"5%\">\n                                    <Checkbox\n                                        id={row._id + \"checkbox\"}\n                                        checked={row.isFeatured}\n                                        onChange={(e) => {\n                                            handleFeatureChange(row);\n                                        }}\n                                        name={row.itemName}\n                                        style ={{\n                                            color: \"#747474\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell align=\"center\" className=\"menuRowText\" width=\"15%\">\n                                    <img src={row.imgSource} alt={row.itemName} className=\"menuItemImage\"/>\n                                </TableCell>\n                                <TableCell className=\"menuRowText\" width=\"15%\">{row.itemName}</TableCell>\n                                <TableCell align=\"left\" className=\"menuRowText\" width=\"12%\">{row.categoryName}</TableCell>\n                                <TableCell align=\"left\" className=\"menuRowText\" width=\"12%\">\n                                {\n                                    row.basePrice.map((v) => {return (<>{v[0]}<br /></>)})\n                                }\n                                </TableCell>\n                                <TableCell align=\"left\" className=\"menuRowText\" width=\"12%\">\n                                {\n                                    row.basePrice.map((v) => <>${v[1]}<br /></>)\n                                }\n                                </TableCell>\n                                <TableCell align=\"left\" className=\"menuRowText\" width=\"12%\">\n                                {\n                                    row.options.map((v) => <p>{v[1].Description}</p>)\n                                }\n                                </TableCell>\n                                <TableCell align=\"left\" className=\"menuRowText\" width=\"12%\">\n                                    <IconButton>\n                                        <EditIcon style={{\"marginRight\": \"5px\"}}/>\n                                    </IconButton>\n                                    <IconButton aria-label=\"delete item\" onClick={() => setDeleteConfirmation([row.itemName, row.id])}>\n                                        <DeleteIcon style={{\"marginLeft\": \"5px\"}}/>\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                    )})}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n// handle remove based on id passed in through params\nasync function handleRemoveByID(id, itemList, setItemList, displayContent, setDisplayContent){\n    // remove from database\n    console.log(\"Removing \" + id);\n    await fetch(`${BACKEND_URL}item/remove`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                \"_id\": id\n            })\n        }).then(res => {\n            if(res.ok){\n                console.log(\"Remove successful!\")\n                // remove from rows\n                setItemList(itemList.filter(x => x.id !== id));\n                // remove from filtered rows\n                setDisplayContent(displayContent.filter(x => x.id !== id));\n            }\n        })\n    \n}\nexport default function AdminMenuItems (props) {\n    const [deleteConfirmation, setDeleteConfirmation] = useState([\"\", \"\"]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [filter, setFilter] = useState(\"All\");\n    const [displayContent, setDisplayContent] = useState([]);\n    const [itemList, setItemList] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const [checkboxUpdate, setCheckboxUpdate] = useState(\"\");\n    // Fetch all menu items to display in table\n    useEffect(() => {\n        var data = null;\n        const fetchData = async () => {\n            const res = await fetch(`${BACKEND_URL}item/`, {\n                method: \"GET\",\n                headers: {\n                    \"content-type\": \"application/json\",\n                },\n            })\n            data = await res.json();\n            console.log(data.items);\n            const rows = [];\n            data.items.forEach(element => {\n                console.log(element);\n                rows.push(\n                    createData(\n                        element.Name,\n                        element.pictureURL, \n                        element.Category, \n                        Object.entries(element.Accomodations),\n                        Object.entries(element.Prices), \n                        element.Description,\n                        element._id,\n                        element.isFeatured,\n                ));\n            });\n            setItemList(rows);\n            setDisplayContent(rows);\n            setLoaded(true);\n        }\n        \n        fetchData();\n    }, [setLoaded,])\n    // update display contents based on search term\n    const handleSearch = (searchTerm) => {\n        // Empty search term, so we want to reset the displayed items to those of the current category\n        if(searchTerm === \"\"){\n            if(filter === \"All\"){        \n                setDisplayContent(itemList); \n            }\n            else {\n                setDisplayContent(itemList.filter(x => x.categoryName === filter));\n            }\n        }\n        else{\n            // Filters the current display content to show those that contain the\n            // search term in the name AND correspond to current filter\n            if(filter === \"All\"){\n                setDisplayContent(itemList.filter(x => x.itemName.toLowerCase().includes(searchTerm.toLowerCase()))); \n            }\n            else {\n                // Filter based on search term and filter term\n                setDisplayContent(itemList.filter(x => \n                    x.itemName.toLowerCase().includes(searchTerm.toLowerCase())\n                    && x.categoryName === filter\n                )); \n            }\n        }\n    }\n    // update display contents based on filter term\n    // possible terms are: Main Dish, Appetizer, Drink, Side\n    const handleFilterChange = (filter) => {\n        // clear search\n        setSearchTerm(\"\");\n        if(filter === \"All\"){        \n            setDisplayContent(itemList); \n        }\n        else{\n            const newRows = [];\n            for(var index in itemList) { \n                if (itemList[index][\"categoryName\"] === filter){\n                    newRows.push(itemList[index]); \n                }\n            }\n            console.log(newRows)\n            setDisplayContent(newRows); \n        }\n    }\n    // Called when a set featured checkbox is clicked\n    const handleFeatureChange = async (row) => {\n        const itemID = row.id;\n        const newValue = !row.isFeatured;\n        row.isFeatured = newValue;\n        // update item's feature property in local (displayContent and itemList)\n        var itemListIndex = -1;\n        itemList.forEach((x, index) => {\n            itemListIndex = x.id === itemID ? index : itemListIndex;\n        })\n        if(itemListIndex !== -1){\n            setItemList(prev => {\n                prev[itemListIndex].isFeatured = newValue;\n                return prev;\n            })\n        }\n        var displayContentIndex = displayContent.findIndex(x => x.id === itemID);\n        if(displayContentIndex !== -1){\n            displayContent[displayContentIndex].isFeatured = newValue;\n            setDisplayContent(displayContent);\n        }\n        setCheckboxUpdate(row.itemName + \"\" + newValue);\n\n        // update item's feature property in database\n        await fetch(`${BACKEND_URL}item/feature`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                \"_id\": itemID,\n                \"isFeatured\": newValue\n            })\n        })\n    }\n    if(loaded){\n        return (  \n            <div>\n                {deleteConfirmation[0] !== \"\" && deleteConfirmationModal(deleteConfirmation, setDeleteConfirmation, itemList, setItemList, displayContent, setDisplayContent)}\n                <div className=\"aboveTableContainer\">\n                    <Button className=\"menuAddButton\">\n                        <AddCircleIcon className=\"menuAddButtonIcon\" />\n                        Add Item\n                    </Button>\n                    <div className=\"searchFilterContainer\">\n                        <Select\n                            className=\"menuFilterSelect\"\n                            id=\"item-filter-select\"\n                            defaultValue=\"All\"\n                            displayEmpty=\"false\"\n                            variant=\"outlined\"\n                            value={filter}\n                            onChange={(v) => {\n                                setFilter(v.target.value);\n                                handleFilterChange(v.target.value);\n                            }}\n                        >\n                            <MenuItem value=\"All\">All</MenuItem>\n                            <MenuItem value=\"Appetizer\">Appetizer</MenuItem>\n                            <MenuItem value=\"Main Dish\">Main Dish</MenuItem>\n                            <MenuItem value=\"Side\">Side</MenuItem>\n                            <MenuItem value=\"Drink\">Drink</MenuItem>\n                        </Select>\n                        <SearchBar\n                            className=\"menuSearchBar\"\n                            value={searchTerm}\n                            onChange={(newValue) => setSearchTerm(newValue)}\n                            onRequestSearch={() => handleSearch(searchTerm)}\n                            onCancelSearch={() => {\n                                setSearchTerm(\"\"); \n                                handleSearch(\"\");\n                            }}\n                        />\n                    </div>\n                </div>\n                {menuTable(itemList, setItemList, displayContent, setDisplayContent, setDeleteConfirmation, handleFeatureChange)}\n            </div>\n        )\n    }\n    else{\n        return (\n            <div> </div>\n        )\n    }\n}\n","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/Banner.js",["185","186"],"import React from 'react';\nimport MenuFilterButton from './MenuFilterButton';\nimport \"../css/Banner.css\";\nconst config = require('../config');\n\nconst MenuFilter = ( {foodCategories, changeVisibleCategories} ) => {\n    return (\n      <div className=\"banner\">\n        <p>All orders require a $20 MINIMUM</p>\n      </div>\n    )\n  }\n  \n  export default MenuFilter;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/ChangeEmailScreen.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/OrdersTableColumns.js",["187","188"],"import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport '../css/Orders.css';\n\n// Import helper functions from utils\nimport {\n    renderStatus,\n    DisplayDateFilters,\n    DisplayStatusFilters,\n    updateDateFilters,\n    renderDateFilters    \n} from '../util/OrdersTableFunctions';\n\n//The column headers for the table\nconst columns = [\n    {\n      name: \"Pick up Details\",\n      options: {\n        filter: true,\n        filterType: 'custom',\n        customFilterListOptions: {\n          render: renderDateFilters,\n          update: updateDateFilters\n        },\n        filterOptions: {\n          names: [],\n          logic(date, filters) {\n            const getDate = date.split(\"\\n\")[0];\n            if (filters[0] && filters[1]) {\n              return getDate < filters[0] || getDate > filters[1];\n            } else if (filters[0]) {\n              return getDate < filters[0];\n            } else if (filters[1]) {\n              return getDate > filters[1];\n            }\n            return false;\n          },\n          display: DisplayDateFilters\n        }\n      }  \n    },\n    {\n      name: \"Name\",\n      options: {\n        filter: true,\n        filterType: 'textField'\n      }  \n    },\n    {\n      name: \"Email\",\n      options: {\n        filter: true,\n        filterType: 'textField'\n      }    \n    },\n    {\n      name: \"Phone Number\",\n      options: {\n        filter: true,\n        filterType: 'textField'\n      }  \n    },\n    {\n      name: \"Amount Paid\",\n      options: {\n        filter: false\n      }  \n    },\n    {\n      name: \"Order Description\",\n      options: {\n        display: false, \n        viewColumns: false, \n        filter: false\n      }\n    },\n    {\n      name: \"Submission Details\",\n      options: {\n        filter: true,\n        filterType: 'custom',\n        customFilterListOptions: {\n          render: renderDateFilters,\n          update: updateDateFilters\n        },\n        filterOptions: {\n          names: [],\n          logic(date, filters) {\n            const getDate = date.split(\"\\n\")[0];\n            if (filters[0] && filters[1]) {\n              return getDate < filters[0] || getDate > filters[1];\n            } else if (filters[0]) {\n              return getDate < filters[0];\n            } else if (filters[1]) {\n              return getDate > filters[1];\n            }\n            return false;\n          },\n          display: DisplayDateFilters\n        }\n      }  \n    },\n    {\n      name: \"Order Status\",\n      options: {\n        filter: true,\n        filterType: 'custom',\n        customBodyRender: renderStatus,\n        customFilterListOptions: {\n          render: (options) => {\n            if(options[0] === \"All Orders\") return [];\n            return options;\n          },\n        },\n        filterOptions: {\n          names: [\"Pending Orders\", \"Completed Orders\"],\n          logic(order, filters) {\n            if (filters[0] == \"Completed Orders\") {\n              return order === \"Pending Orders\";\n            } else if (filters[0] == \"Pending Orders\") {\n              return order === \"Completed Orders\";\n            }\n  \n            return false;\n          },\n          display: DisplayStatusFilters\n        }\n      }\n    },\n    {\n      name: \"Row ID\",\n      options: {\n        display: false, \n        viewColumns: false, \n        filter: false\n      }\n    }\n];\n\nexport { columns } ;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/util/OrdersTableFunctions.js",[],{"ruleId":"189","severity":1,"message":"190","line":6,"column":7,"nodeType":"191","messageId":"192","endLine":6,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":7,"column":7,"nodeType":"191","messageId":"192","endLine":7,"endColumn":18},{"ruleId":"193","severity":1,"message":"194","line":195,"column":8,"nodeType":"195","endLine":195,"endColumn":14,"suggestions":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"189","severity":1,"message":"190","line":6,"column":7,"nodeType":"191","messageId":"192","endLine":6,"endColumn":18},{"ruleId":"189","severity":1,"message":"201","line":16,"column":8,"nodeType":"191","messageId":"192","endLine":16,"endColumn":14},{"ruleId":"189","severity":1,"message":"202","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":22},{"ruleId":"189","severity":1,"message":"203","line":4,"column":24,"nodeType":"191","messageId":"192","endLine":4,"endColumn":33},{"ruleId":"204","severity":1,"message":"205","line":14,"column":5,"nodeType":"206","messageId":"207","endLine":14,"endColumn":47},{"ruleId":"204","severity":1,"message":"205","line":17,"column":5,"nodeType":"206","messageId":"207","endLine":17,"endColumn":66},{"ruleId":"204","severity":1,"message":"205","line":21,"column":5,"nodeType":"206","messageId":"207","endLine":21,"endColumn":59},{"ruleId":"204","severity":1,"message":"205","line":28,"column":5,"nodeType":"206","messageId":"207","endLine":28,"endColumn":109},{"ruleId":"204","severity":1,"message":"205","line":37,"column":5,"nodeType":"206","messageId":"207","endLine":37,"endColumn":74},{"ruleId":"208","severity":1,"message":"209","line":53,"column":31,"nodeType":"210","messageId":"211","endLine":53,"endColumn":33},{"ruleId":"189","severity":1,"message":"190","line":8,"column":7,"nodeType":"191","messageId":"192","endLine":8,"endColumn":18},{"ruleId":"189","severity":1,"message":"212","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":21},{"ruleId":"189","severity":1,"message":"213","line":6,"column":7,"nodeType":"191","messageId":"192","endLine":6,"endColumn":13},{"ruleId":"208","severity":1,"message":"209","line":30,"column":21,"nodeType":"210","messageId":"211","endLine":30,"endColumn":23},{"ruleId":"208","severity":1,"message":"209","line":39,"column":35,"nodeType":"210","messageId":"211","endLine":39,"endColumn":37},{"ruleId":"189","severity":1,"message":"214","line":70,"column":9,"nodeType":"191","messageId":"192","endLine":70,"endColumn":13},{"ruleId":"208","severity":1,"message":"209","line":16,"column":17,"nodeType":"210","messageId":"211","endLine":16,"endColumn":19},{"ruleId":"208","severity":1,"message":"209","line":21,"column":22,"nodeType":"210","messageId":"211","endLine":21,"endColumn":24},{"ruleId":"208","severity":1,"message":"209","line":48,"column":118,"nodeType":"210","messageId":"211","endLine":48,"endColumn":120},{"ruleId":"208","severity":1,"message":"209","line":63,"column":48,"nodeType":"210","messageId":"211","endLine":63,"endColumn":50},{"ruleId":"189","severity":1,"message":"215","line":89,"column":21,"nodeType":"191","messageId":"192","endLine":89,"endColumn":24},{"ruleId":"208","severity":1,"message":"209","line":96,"column":30,"nodeType":"210","messageId":"211","endLine":96,"endColumn":32},{"ruleId":"189","severity":1,"message":"190","line":6,"column":7,"nodeType":"191","messageId":"192","endLine":6,"endColumn":18},{"ruleId":"216","severity":1,"message":"217","line":14,"column":74,"nodeType":"218","endLine":14,"endColumn":83},{"ruleId":"189","severity":1,"message":"213","line":3,"column":7,"nodeType":"191","messageId":"192","endLine":3,"endColumn":13},{"ruleId":"219","severity":1,"message":"220","line":9,"column":11,"nodeType":"221","endLine":9,"endColumn":28},{"ruleId":"189","severity":1,"message":"222","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"223","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":6,"column":7,"nodeType":"191","messageId":"192","endLine":6,"endColumn":18},{"ruleId":"189","severity":1,"message":"222","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"190","line":6,"column":7,"nodeType":"191","messageId":"192","endLine":6,"endColumn":18},{"ruleId":"189","severity":1,"message":"224","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"222","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"190","line":4,"column":7,"nodeType":"191","messageId":"192","endLine":4,"endColumn":18},{"ruleId":"189","severity":1,"message":"222","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"190","line":5,"column":7,"nodeType":"191","messageId":"192","endLine":5,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":7,"column":7,"nodeType":"191","messageId":"192","endLine":7,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":11,"column":46,"nodeType":"227","messageId":"228","endLine":11,"endColumn":57},{"ruleId":"193","severity":1,"message":"229","line":42,"column":6,"nodeType":"195","endLine":42,"endColumn":20,"suggestions":"230"},{"ruleId":"189","severity":1,"message":"231","line":177,"column":12,"nodeType":"191","messageId":"192","endLine":177,"endColumn":26},{"ruleId":"189","severity":1,"message":"232","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":24},{"ruleId":"189","severity":1,"message":"213","line":4,"column":7,"nodeType":"191","messageId":"192","endLine":4,"endColumn":13},{"ruleId":"208","severity":1,"message":"209","line":118,"column":28,"nodeType":"210","messageId":"211","endLine":118,"endColumn":30},{"ruleId":"208","severity":1,"message":"209","line":120,"column":35,"nodeType":"210","messageId":"211","endLine":120,"endColumn":37},"no-unused-vars","'BACKEND_URL' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'history' and 'paypalOrderObject'. Either include them or remove the dependency array.","ArrayExpression",["233"],"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"'Orders' is defined but never used.","'isAuthorized' is defined but never used.","'removeJWT' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MenuItemPopup' is defined but never used.","'config' is assigned a value but never used.","'json' is assigned a value but never used.","'key' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'SearchBar' is defined but never used.","'NavBar' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","React Hook useEffect has a missing dependency: 'menuItemValues'. Either include it or remove the dependency array.",["236"],"'checkboxUpdate' is assigned a value but never used.","'MenuFilterButton' is defined but never used.",{"desc":"237","fix":"238"},"no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},"Update the dependencies array to be: [cart, history, paypalOrderObject]",{"range":"241","text":"242"},"Update the dependencies array to be: [categoryName, menuItemValues]",{"range":"243","text":"244"},[7377,7383],"[cart, history, paypalOrderObject]",[1594,1608],"[categoryName, menuItemValues]"]