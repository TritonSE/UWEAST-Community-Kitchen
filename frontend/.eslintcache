[{"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/index.js":"1","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/reportWebVitals.js":"2","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/App.js":"3","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Admin.js":"4","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/About.js":"5","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Login.js":"6","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Orders.js":"7","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/ResetPassword.js":"8","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Register.js":"9","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Menu.js":"10","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Contact.js":"11","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/ChangeEmailScreen.js":"12","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/PayPal.js":"13","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/config.js":"14","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/ForgotPasswordDialogue.js":"15","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/util/auth.js":"16","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/OrdersTable.js":"17","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/AdminMenuItems.js":"18","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/NavBar.js":"19","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/CartPreview.js":"20","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/SearchSection.js":"21","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/Banner.js":"22","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuSection.js":"23","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/ContactMap.js":"24","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/ContactForm.js":"25","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/OrdersTableColumns.js":"26","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItems.js":"27","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuFilterButton.js":"28","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuFilter.js":"29","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/util/OrdersTableFunctions.js":"30","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItemCategory.js":"31","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItemPopup.js":"32","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItem.js":"33","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/util/Auth.js":"34","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/AddMenuItemModal.js":"35","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/EditMenuItemModal.js":"36"},{"size":500,"mtime":1613809287280,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1613809287316,"results":"39","hashOfConfig":"38"},{"size":1355,"mtime":1613809287182,"results":"40","hashOfConfig":"38"},{"size":4495,"mtime":1613809309596,"results":"41","hashOfConfig":"38"},{"size":1483,"mtime":1613809309595,"results":"42","hashOfConfig":"38"},{"size":6139,"mtime":1613809309604,"results":"43","hashOfConfig":"38"},{"size":4934,"mtime":1613809601125,"results":"44","hashOfConfig":"38"},{"size":7584,"mtime":1613809309611,"results":"45","hashOfConfig":"38"},{"size":7842,"mtime":1613809309609,"results":"46","hashOfConfig":"38"},{"size":1485,"mtime":1613809601134,"results":"47","hashOfConfig":"38"},{"size":674,"mtime":1613809309598,"results":"48","hashOfConfig":"38"},{"size":2518,"mtime":1613809287212,"results":"49","hashOfConfig":"38"},{"size":7471,"mtime":1613809287268,"results":"50","hashOfConfig":"38"},{"size":297,"mtime":1613809287276,"results":"51","hashOfConfig":"38"},{"size":3704,"mtime":1613809287223,"results":"52","hashOfConfig":"38"},{"size":1378,"mtime":1613449633254,"results":"53","hashOfConfig":"38"},{"size":5002,"mtime":1613809601112,"results":"54","hashOfConfig":"38"},{"size":16122,"mtime":1613809601075,"results":"55","hashOfConfig":"38"},{"size":5137,"mtime":1613809309585,"results":"56","hashOfConfig":"38"},{"size":3122,"mtime":1613809287205,"results":"57","hashOfConfig":"38"},{"size":436,"mtime":1613809601118,"results":"58","hashOfConfig":"38"},{"size":406,"mtime":1613809601085,"results":"59","hashOfConfig":"38"},{"size":4318,"mtime":1613809601107,"results":"60","hashOfConfig":"38"},{"size":2694,"mtime":1613809601088,"results":"61","hashOfConfig":"38"},{"size":2994,"mtime":1613809601086,"results":"62","hashOfConfig":"38"},{"size":3687,"mtime":1613809601116,"results":"63","hashOfConfig":"38"},{"size":919,"mtime":1613809601105,"results":"64","hashOfConfig":"38"},{"size":1028,"mtime":1613809601093,"results":"65","hashOfConfig":"38"},{"size":901,"mtime":1613809601092,"results":"66","hashOfConfig":"38"},{"size":6093,"mtime":1613809601126,"results":"67","hashOfConfig":"38"},{"size":3261,"mtime":1613809601098,"results":"68","hashOfConfig":"38"},{"size":10180,"mtime":1613809601104,"results":"69","hashOfConfig":"38"},{"size":989,"mtime":1613809601097,"results":"70","hashOfConfig":"38"},{"size":1366,"mtime":1613809309617,"results":"71","hashOfConfig":"38"},{"size":25237,"mtime":1613809601068,"results":"72","hashOfConfig":"38"},{"size":25282,"mtime":1613809601089,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a4pre7",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"89"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"89"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"89"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"89"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"89"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"89"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"89"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/index.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/reportWebVitals.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/App.js",["161"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Admin.js",["162"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/About.js",["163"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Login.js",["164"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Orders.js",["165"],"/**\n * This file renders the Orders Table on the Admin page.\n * It imports the table from OrdersTable.js. This file\n * \n * @summary - The orders table\n * \n */\n\nimport React from 'react';\nimport OrdersTable from '../components/OrdersTable';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport '../css/Orders.css';\n\nconst config = require('../config');\n\nconst BACKEND_URL = config.backend.uri;\n\nexport default class Orders extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            getOrders: [],\n            Loading: true,\n        }\n\n        this.formatTime = this.formatTime.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n        this.formatArray = this.formatArray.bind(this);\n    }\n\n    /**\n     * Formats the data from the fetch() call into the array\n     * \n     * @param {Object} list - information about order\n     * @param {String} date - pick up date\n     * @param {String} formatCurrTime - pick up time\n     * @param {String} dateSubmission - submission date\n     * @param {String} formatCurrTimeSubmission - submission time\n     * @returns {array} - formated array\n     */\n    formatArray(list, date, formatCurrTime, dateSubmission, formatCurrTimeSubmission) {\n        let val = formatCurrTime;\n        let val2 = formatCurrTimeSubmission;\n\n        const dateOne = date + `\\n${val}`;\n        const dateTwo = dateSubmission + `\\n${val2}`;\n        return [dateOne, list.Customer.Name, list.Customer.Email, list.Customer.Phone, \n            list.PayPal.Amount, list.Order, dateTwo, list.isCompleted ? \"Completed Orders\" : \"Pending Orders\", \n            list._id];\n    }\n\n    /**\n     * Formats the time in the HH:MM (P.M. OR A.M.)\n     * \n     * @param {String} time \n     * @returns {String} - the formated time\n     */\n    formatTime(time) {\n        // convert to array\n        time = time.split(':');\n        \n        let hours = Number(time[0]);\n        let minutes = Number(time[1]);\n        let timeValue;\n\n        if (hours > 0 && hours <= 12) timeValue = \"\" + hours; \n        else if (hours > 12) timeValue = \"\" + (hours - 12);\n        else if (hours === 0) timeValue = \"12\";\n        \n        // get minutes\n        timeValue += (minutes < 10) ? \":0\" + minutes : \":\" + minutes;  \n        // get AM/PM\n        timeValue += (hours >= 12) ? \" P.M.\" : \" A.M.\"; \n\n        return timeValue;\n    }\n\n    /**\n     * Formats the date to be in the MM/DD/YYYY format\n     * \n     * @param {String} getDate \n     * @returns {String} - the formated date\n     */\n    formatDate(getDate) {\n        const monthSubmission = getDate.getMonth()+1 >= 10 ? getDate.getMonth()+1 : (\"0\" + (getDate.getMonth() + 1)).slice(-2);\n        const dateSubmission = monthSubmission + \"/\" + getDate.getDate() + \"/\" + getDate.getFullYear();   \n        return dateSubmission \n    }\n\n    /**\n     * Get all the orders from the database\n     */\n    componentDidMount() {\n        fetch(`${BACKEND_URL}order`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n        .then(data => {\n            const getOrdersList = data.orders;\n            const length = getOrdersList.length\n            let createArr = [];\n\n            for(let i = 0; i < length; i++) {\n                // get the date from the database\n                let getDate = new Date(getOrdersList[i].Pickup);\n                const formatCurrtime = this.formatTime(getDate.getHours() + \":\" + getDate.getMinutes() + \":\" + getDate.getSeconds());\n                const date = this.formatDate(getDate);\n\n                // format for the submission date\n                let getDateSubmission = new Date(getOrdersList[i].createdAt);\n                const formatCurrtimeSubmission = this.formatTime(getDateSubmission.getHours() + \":\" + getDateSubmission.getMinutes() + \":\" + getDateSubmission.getSeconds());\n                const dateSubmission = this.formatDate(getDateSubmission);\n\n                const formatedArray = this.formatArray(getOrdersList[i], date, formatCurrtime, dateSubmission, formatCurrtimeSubmission)\n                createArr.push(formatedArray);\n            }\n            this.setState({ getOrders: createArr, Loading: false})\n        })\n        .catch(err => console.log(err));\n    }\n    \n    render() {\n        return (\n            <div className=\"orders-page-container\">\n                {/* Render a progress spinner to show it is loading */}\n                {this.state.Loading ? \n                <div className=\"spinner-orders-page\">\n                    <CircularProgress />\n                </div> : \n                <div className=\"orders-table\">\n                    <div className=\"justify-table-center\">\n                        <OrdersTable orders={this.state.getOrders} />\n                    </div>\n                </div>\n                }\n            </div>\n        )\n    }\n}",["166","167"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/ResetPassword.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Register.js",["168"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Menu.js",["169"],"import React, { Component} from 'react';\nimport Navbar from '../components/NavBar';\nimport CartPreview from '../components/CartPreview';\nimport SearchSection from '../components/SearchSection';\nimport MenuSection from '../components/MenuSection';\nimport Banner from '../components/Banner';\nimport \"../css/Menu.css\";\n\nclass Menu extends Component {\n    constructor(props) {\n        super(props);\n\n        //stores items currently in the cart using local storage\n        this.state = {\n            items: JSON.parse(localStorage.getItem('cartItems')) || []\n        }\n    }\n\n    //adds item from popup to the cart and updates local storage\n    handleAdd = (item) => {\n        this.setState({items: [...this.state.items, item]}, () => {\n            localStorage.setItem('cartItems', JSON.stringify(this.state.items))\n        });\n        console.log(this.state.items);\n    }\n\n    render (){\n\n      return (\n          <div>\n              <div className=\"navbar-wrapper\">\n                <Navbar/>\n              </div>\n              <Banner/>\n              <div className=\"cart-preview\">\n              {/* cart preview is floated on the bottom right of the screen */}\n              <CartPreview key={this.state.items} items={this.state.items}/> \n              </div>\n              {/** search section is the top, non-menu half of the page */}\n              <SearchSection/>\n              <MenuSection onItemAdd={this.handleAdd}/> \n          </div>\n\n      )\n    }\n  }\n  \n  export default Menu;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/pages/Contact.js",["170","171"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/ChangeEmailScreen.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/PayPal.js",["172"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/config.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/ForgotPasswordDialogue.js",["173"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/util/auth.js",[],["174","175"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/OrdersTable.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/AdminMenuItems.js",["176"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/NavBar.js",["177","178","179","180","181","182"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/CartPreview.js",["183","184","185","186","187","188"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/SearchSection.js",["189","190","191"],"/**\n * Upper portion of menu page. Has formatting for \"jumbotron\" background image.\n * \n * @summary   Upper portion of menu page with main background image.\n * @author    Navid Boloorian\n */\n\nimport React, { Component } from 'react';\nimport \"../css/SearchSection.css\";\nconst config = require('../config');\n\nconst SearchSection = () => {\n    return (\n      <div className=\"search-section\"></div>\n    );\n}\n  \nexport default SearchSection;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/Banner.js",["192","193"],"/**\n * Banner with disclaimer below navbar.\n * \n * @summary   Banner with disclaimer below navbar.\n * @author    Navid Boloorian\n */\n\nimport React from 'react';\nimport \"../css/Banner.css\";\n\nconst MenuFilter = ( {foodCategories, changeVisibleCategories} ) => {\n    return (\n      <div className=\"banner\">\n        <p>All orders require a $20 MINIMUM</p>\n      </div>\n    )\n  }\n  \n  export default MenuFilter;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuSection.js",["194","195","196","197"],"/**\n * Hub of menu portion of page. Almost all  states are elevated to this level. \n * Defines most of the form processing and renders MenuFilter, MenuItems, and \n * MenuCart.\n * \n * @summary   Hub of menu items, most states are elevated to this level.\n * @author    Navid Boloorian\n */\n\nimport React, { useState } from 'react';\nimport MenuFilter from './MenuFilter';\nimport MenuItems from './MenuItems';\nimport '../css/MenuSection.css';\n\n/**\n * Handle the display of menu categories and sections. Stores states of what is \n * currently visible.\n * \n * @param {function} onItemAdd - Function returning boolean\n */\nconst MenuSection = ({onItemAdd}) => {\n  // filterCategories populates the filter buttons\n  const filterCategories = [\"Whole Menu\", \"Featured\", \"Appetizers\", \"Main Dishes\", \"Sides\", \"Drinks\"];\n\n  // populates the menu item categories\n  const defaultCategories = [\"Featured\", \"Appetizers\", \"Main Dishes\", \"Sides\", \"Drinks\"];\n\n  // stores all the categories currently visible\n  let displayedCategories = [];\n\n  // states that are managed and passed down to components\n  const [visibleCategories, setVisibleCategories] = useState(defaultCategories);\n\n  const [toggledFilter, setToggledFilter] = useState(\"none\");\n\n  // stores whether or not the popup is currently visible\n  const [popupVisible, setPopupVisible] = useState(false);\n\n  // map with all of the data that will be displayed in the popup\n  const [popupValues, setPopupValues] = useState(new Map());\n\n  // changes visible categories when filter button is clicked\n  const changeVisibleCategories = categoryName => {\n    if(categoryName == \"Whole Menu\") {\n      displayedCategories = defaultCategories;\n    }\n    else {\n      // if the option is not \"whole menu\", a new item is added to the \n      // displayedCategories array that is then passed to be rendered\n      displayedCategories.push(categoryName);\n    }\n\n    if(displayedCategories.length == 0) {\n      displayedCategories = defaultCategories;\n    }\n    \n    // responsible for actually rendering/setting what will be visible\n    setVisibleCategories(displayedCategories);\n  }\n\n  // processes the form submitted from the popup\n  const processForm = e => {\n    // prevents page reload\n    e.preventDefault();\n\n    // gets the form data\n    var data = new FormData(e.target);\n    var object = {};\n\n    // goes through and makes an object from the FormData\n    data.forEach((value, key) => {\n        if(!Reflect.has(object, key)){\n            object[key] = value;\n            return;\n        }\n\n        if(!Array.isArray(object[key])){\n            object[key] = [object[key]];    \n        }\n        object[key].push(value);\n    });\n\n    // converts the FormData to a JSON string, optional\n    var json = JSON.stringify(object);\n\n    // calls parent function to add item from popup to cart\n    onItemAdd(object);\n    \n    // when submit button is clicked, the popup is closed\n    togglePopup();\n  }\n  \n  // closes popup when open and opens popup when closed\n  const togglePopup = (title, description, price, image, dietaryInfo, accommodations) => {\n    setPopupVisible(!popupVisible);\n    \n    // sets the values of the map based on passed-in information\n    popupValues.set(\"title\", title);\n    popupValues.set(\"description\", description);\n    popupValues.set(\"price\", price);\n    popupValues.set(\"image\", image);\n    popupValues.set(\"dietary-info\", dietaryInfo);\n    popupValues.set(\"accommodations\", accommodations);\n\n    setPopupValues(popupValues);\n  }\n\n  /**\n   * MenuSection is split into three columns:\n   * 1. filter column\n   * 2. menu column\n   * 3. cart column\n   */\n  return (\n    <div className=\"menu-section-wrapper\">\n      <div className=\"menu-section\">\n        <div className=\"menu-filter-wrapper\">\n          <MenuFilter toggledFilter={toggledFilter} setToggledFilter={setToggledFilter} foodCategories={filterCategories} changeVisibleCategories={() => changeVisibleCategories} />\n        </div>\n        <div className=\"menu-items\">\n          {/** parameters are states being passed down */}\n          <MenuItems foodCategories={visibleCategories} processForm={processForm} popupVisible={popupVisible} popupValues={popupValues} togglePopup={togglePopup}/>\n        </div>\n        <div className=\"menu-cart\">\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MenuSection;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/ContactMap.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/ContactForm.js",["198","199"],"/**\n * Component creating the form on the contact page. Form takes user's \n * information and sends an email to UWEAST on their behalf. Error handling \n * makes sure that backend response is 200, otherwise notify user.\n * \n * @summary   Form to contact UWEAST found on contact page.\n * @author    Navid Boloorian, Amrit Kaur Singh\n */\nimport React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { Snackbar } from '@material-ui/core';\n\nconst config = require('../config');\nconst BACKEND_URL = config.backend.uri;\n\nconst ContactForm = () => {\n\n  const [state, setState] = React.useState({\n    snack: {\n      message: '',\n      open: false\n    },\n  });\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n  \n    const formData = new FormData(e.target);\n    let data = {};\n    \n    // make FormData into a js object to pass to route\n    for(var [key, value] of formData.entries()) {\n      data[key] = value;\n    }\n  \n    try{\n  \n      const response = await fetch(`${BACKEND_URL}autoEmails/contact`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n      });\n      \n      // successful response\n      if (response.status == 200){\n        alert(\"Message sent!\");\n        // reload window to clear input boxes \n        window.location.reload();\n        \n        // malformed email\n      } else if(response.status == 400) {\n        setState({...state, snack: {message: 'Invalid Email Address!', open: true}});\n\n        // system error\n      } else {\n        setState({...state, snack: {message: 'System Error: Cannot send email!', open: true}});\n      }\n      \n      // general error\n    } catch(error){\n      setState({...state, snack: {message: 'System Error: Cannot send email!', open: true}});\n    }\n  };\n  \n  // error message display: auto close itself by updating its states\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setState({...state, snack: {open: false}});\n  };\n\n  return (\n    <div className=\"contact-form\">\n      <div className=\"contact-form-text\">\n      <h1>CONTACT US</h1>\n      <p>Please email us using the form below</p>\n      <form onSubmit={sendMessage}>\n        <input type=\"text\" name=\"name\" className=\"first-input contact-form-input\" placeholder=\"Your Name\" required/>\n        <br />\n        <input type=\"text\" name=\"email\" className=\"contact-form-input\" placeholder=\"Your Email\" required />\n        <br />\n        {/** automatically-resizing textarea component */}\n        <TextareaAutosize className=\"contact-form-input\" name=\"message\" placeholder=\"Your message\" maxRows={3} required />\n        <br />\n        <input type=\"submit\" className=\"contact-form-submit\" value=\"Submit\"  />\n      </form>\n      </div>\n      <Snackbar open={state.snack.open} autoHideDuration={6000} onClose={handleSnackClose} message={state.snack.message}/>\n    </div>\n  )\n}\n\nexport default ContactForm;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/OrdersTableColumns.js",["200","201"],"/**\n * Contains the details about each column in the Orders Table.\n * \n * Each Column has specific props it requires. For example, \n * \n * The Pickup Details, Order Status, and Submission Details \n * Require their own custom filtering, so they take in props\n * That allow for custom filtering. \n * \n * Order Status contains props for a custom body inside the table\n * Cell. \n * \n * @summary - Column details for orders table\n */\n\n// import helper functions from utils\nimport {\n    renderStatus,\n    DisplayDateFilters,\n    DisplayStatusFilters,\n    updateDateFilters,\n    renderDateFilters    \n} from '../util/OrdersTableFunctions';\n\n// the column headers for the table\nconst columns = [\n    {\n      name: \"Pick up Details\",\n      options: {\n        filter: true,\n        filterType: 'custom',\n        customFilterListOptions: {\n          render: renderDateFilters,\n          update: updateDateFilters\n        },\n        filterOptions: {\n          names: [],\n          logic(date, filters) {\n            const getDate = date.split(\"\\n\")[0];\n            if (filters[0] && filters[1]) {\n              return getDate < filters[0] || getDate > filters[1];\n            } else if (filters[0]) {\n              return getDate < filters[0];\n            } else if (filters[1]) {\n              return getDate > filters[1];\n            }\n            return false;\n          },\n          display: DisplayDateFilters\n        }\n      }  \n    },\n    {\n      name: \"Name\",\n      options: {\n        filter: true,\n        filterType: 'textField'\n      }  \n    },\n    {\n      name: \"Email\",\n      options: {\n        filter: true,\n        filterType: 'textField'\n      }    \n    },\n    {\n      name: \"Phone Number\",\n      options: {\n        filter: true,\n        filterType: 'textField'\n      }  \n    },\n    {\n      name: \"Amount Paid\",\n      options: {\n        filter: false\n      }  \n    },\n    {\n      name: \"Order Description\",\n      options: {\n        display: false, \n        viewColumns: false, \n        filter: false\n      }\n    },\n    {\n      name: \"Submission Details\",\n      options: {\n        filter: true,\n        filterType: 'custom',\n        customFilterListOptions: {\n          render: renderDateFilters,\n          update: updateDateFilters\n        },\n        filterOptions: {\n          names: [],\n          logic(date, filters) {\n            const getDate = date.split(\"\\n\")[0];\n            if (filters[0] && filters[1]) {\n              return getDate < filters[0] || getDate > filters[1];\n            } else if (filters[0]) {\n              return getDate < filters[0];\n            } else if (filters[1]) {\n              return getDate > filters[1];\n            }\n            return false;\n          },\n          display: DisplayDateFilters\n        }\n      }  \n    },\n    {\n      name: \"Order Status\",\n      options: {\n        filter: true,\n        filterType: 'custom',\n        customBodyRender: renderStatus,\n        customFilterListOptions: {\n          render: (options) => {\n            if(options[0] === \"All Orders\") return [];\n            return options;\n          },\n        },\n        filterOptions: {\n          names: [\"Pending Orders\", \"Completed Orders\"],\n          logic(order, filters) {\n            if (filters[0] == \"Completed Orders\") {\n              return order === \"Pending Orders\";\n            } else if (filters[0] == \"Pending Orders\") {\n              return order === \"Completed Orders\";\n            }\n  \n            return false;\n          },\n          display: DisplayStatusFilters\n        }\n      }\n    },\n    {\n      name: \"Row ID\",\n      options: {\n        display: false, \n        viewColumns: false, \n        filter: false\n      }\n    }\n];\n\nexport { columns } ;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItems.js",["202","203"],"/**\n * Groups MenuItemCategory components for formatting purposes. Renders \n * categories based off of what is being displayed with filters/states. \n * Simplifies passing of props as it centralizes the components.\n * \n * @summary   Grouping of MenuItemCategory components.\n * @author    Navid Boloorian\n */\n\nimport React from 'react';\nimport MenuItemCategory from './MenuItemCategory';\nimport '../css/MenuItems.css';\n\nconst MenuItems = ({ foodCategories, processForm, popupVisible, popupValues, togglePopup }) => {\n\n  return (\n\n      <div className=\"menu-items\">\n        {/** generates categories in the menu */}\n        {foodCategories.map((categoryName, key) => {\n          return <MenuItemCategory key={key} categoryName={categoryName} key={key} processForm={processForm} popupVisible={popupVisible} popupValues={popupValues} togglePopup={togglePopup}/>\n        })}\n      </div>\n\n  )\n}\n  \n  export default MenuItems;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuFilterButton.js",["204"],"/**\n * Individual buttons that handle toggle the display of sections onclick. \n * Toggling is based on props so that they dynamically change.\n * \n * @summary   Individual buttons that toggle the display of sections.\n * @author    Navid Boloorian\n */\n\nimport React from 'react';\nimport '../css/MenuFilterButton.css';\n\nconst MenuFilterButton = ( {categoryName, changeVisibleCategories, toggledFilter, setToggledFilter} ) => {\n\n    /**\n     * Function that groups the filter toggling state calls.\n     */\n    function updateFilters() {\n      changeVisibleCategories(categoryName);\n      setToggledFilter(categoryName);\n    }\n\n    // logic to check whether or not the filter button should be highlighted\n    let filterMatch = (categoryName === toggledFilter) && (categoryName != \"Whole Menu\");\n\n    return (\n      <button \n        className={`menu-filter-button ${filterMatch ? \"toggled-filter\": \"\"}`}\n        onClick={() => (updateFilters())}>\n        {categoryName} \n      </button>\n    )\n  }\n  \n  export default MenuFilterButton;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuFilter.js",["205","206"],"/**\n * Component that groups all filter buttons together. Responsible for sending \n * the relevant props to individual buttons.\n * \n * @summary   Component that groups all filter buttons.\n * @author    Navid Boloorian\n */\n\nimport React, { Component} from 'react';\nimport MenuFilterButton from './MenuFilterButton';\nimport \"../css/MenuFilter.css\";\nconst config = require('../config');\n\nconst MenuFilter = ( {foodCategories, changeVisibleCategories, toggledFilter, setToggledFilter} ) => {\n    return (\n      <div className=\"menu-filter\">\n        {foodCategories.map((categoryName, key) => (\n          // generates filter buttons based on categories\n          <MenuFilterButton toggledFilter={toggledFilter} setToggledFilter={setToggledFilter} categoryName={categoryName} key={key} changeVisibleCategories={changeVisibleCategories()} />\n        ))}\n      </div>\n    )\n  }\n  \n  export default MenuFilter;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/util/OrdersTableFunctions.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItemCategory.js",["207","208","209"],"/**\r\n * Individual buttons that handle toggle the display of sections onclick. \r\n * Toggling is based on props so that they dynamically change.\r\n * \r\n * @summary   Individual buttons that toggle the display of sections.\r\n * @author    Navid Boloorian\r\n */\r\n\r\nimport React, { useState, useEffect} from 'react';\r\nimport '../css/MenuItemCategory.css';\r\nimport MenuItem from './MenuItem';\r\nimport MenuItemPopup from './MenuItemPopup';\r\n\r\nconst config = require('../config');\r\nconst BACKEND_URL = config.backend.uri;\r\n\r\nconst MenuItemCategory = ({ categoryName, processForm, popupVisible, popupValues, togglePopup }) => {\r\n  // array that stores menu items for the current category\r\n  const [menuItems, setMenuItems] = useState(new Array());\r\n  const menuItemValues = [];\r\n\r\n  /**\r\n   * useEffect() is called to get information from database\r\n   */\r\n  useEffect(() => {\r\n    fetch(`${BACKEND_URL}item/`)\r\n    .then(async result => {\r\n      if (result.ok) {\r\n        const json = await result.json();\r\n\r\n        for(var i = 0; i < json.items.length; i++) {\r\n          // since \"featured\" isn't a category, we need to handle it differently\r\n          let isCategoryEqual = json.items[i].Category === categoryName;\r\n          let isFeatured = (categoryName === \"Featured\") && (json.items[i].isFeatured);\r\n\r\n          // is stored only if the category name is the same as json's category\r\n          if((json.items !== undefined) && (isCategoryEqual || isFeatured)) {\r\n            menuItemValues.push(json.items[i]);\r\n          }\r\n        }\r\n        setMenuItems(menuItemValues);\r\n      }\r\n      else {\r\n        console.log(\"error\");\r\n      }\r\n    })\r\n\r\n  /**\r\n   * sets dependency on categoryName, meaning that whenever categoryName \r\n   * changes, useEffect is called again. This is necessary so that when filters * are clicked data is actually reloaded\r\n   */\r\n  }, [categoryName]);\r\n  \r\n  return (\r\n      <>\r\n        {/** popup is created here, if it is visible it is rendered */}\r\n        {popupVisible ? <MenuItemPopup values={popupValues} togglePopup={togglePopup} processForm={processForm} /> : null}\r\n        <div className=\"menu-item-category\">\r\n          <h2> {categoryName} </h2>\r\n          <div className=\"menu-item-category-grid\">\r\n            {/** generate menu items based off of array */}\r\n            {menuItems.map((menuItem, key) => {\r\n              let title = menuItem.Name;\r\n              let image = menuItem.pictureURL;\r\n              let description = menuItem.Description;\r\n              // since some items will only have a family pricing option, we use individual as the default; if individual doesnt exist, use family instead\r\n              let price = (\"Individual\" in menuItem.Prices) ? menuItem.Prices.Individual : menuItem.Prices.Family\r\n              let accommodations = menuItem.Accomodations;\r\n              let priceOptions = menuItem.Prices;\r\n              let dietaryInfo = menuItem.dietaryInfo;\r\n\r\n              return <MenuItem title={title} image={image} price={price} description={description} togglePopup={togglePopup} key={key} dietaryInfo={dietaryInfo} priceOptions={priceOptions} accommodations={accommodations} />\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default MenuItemCategory;\r\n","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItemPopup.js",["210","211","212","213","214","215"],"/**\r\n * Popup that displays specified item when MenuItem is clicked. Has form to \r\n * pass data to/add items to cart. Popup gives relevant information such as \r\n * pricing, description, additional accomodations etc.\r\n * \r\n * @summary     Displays item information and allows user to add item to cart.\r\n * @author      Aaron Kirk, Navid Boloorian\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport '../css/MenuItemPopup.css';\r\nimport plus from '../media/plus.svg';\r\nimport minus from '../media/minus.svg';\r\n\r\nconst MenuItemPopup = ({ values, togglePopup, processForm }) => {\r\n    const [quantity, setQuantity] = useState(1);\r\n    // if individual price exists, use that as default; otherwise, use family\r\n    const [currPrice, setCurrPrice] = useState((\"Individual\" in values.get(\"price\")) ? values.get(\"price\").Individual : values.get(\"price\").Family);\r\n    const [totalPrice, setTotalPrice] = useState(currPrice);\r\n    const [accommodationCost, setAccommodationCost] = useState(0);\r\n\r\n    // handles changing price and quantity states\r\n    const changeQuantity = sign => {\r\n        // everything is fixed to 2 decimal places\r\n        if(sign == \"+\") {\r\n            setQuantity(quantity + 1);\r\n            // calulates on quantity + 1 b/c state hasn't updated yet\r\n            setTotalPrice((parseFloat(accommodationCost) + currPrice * (quantity + 1)).toFixed(2));\r\n        }\r\n        else if(sign == \"-\") {\r\n            if(quantity > 1) {\r\n                setQuantity(quantity - 1);\r\n                // calulates on quantity - 1 b/c state hasn't updated yet\r\n                setTotalPrice((parseFloat(accommodationCost) + currPrice * (quantity - 1)).toFixed(2));\r\n            }\r\n        }\r\n    }\r\n\r\n    //handles toggling price additions from accommodations\r\n    const handleAccommodation = (event, price) => {\r\n        // everything is fixed to 2 decimal places\r\n        if(event.target.checked) {\r\n            // parseFloat() is necessary because otherwise they get treated like strings for addition\r\n            setAccommodationCost((parseFloat(accommodationCost) + parseFloat(price)).toFixed(2));\r\n            setTotalPrice((parseFloat(totalPrice) + parseFloat(price)).toFixed(2));\r\n        } else {\r\n            setAccommodationCost((accommodationCost - price).toFixed(2));\r\n            setTotalPrice((totalPrice - price).toFixed(2));\r\n        }\r\n    }\r\n\r\n    // helper function to render the \r\n    const renderSize = (name, price, hasBothPrices) => {\r\n        return(\r\n            /** conditionally displays family size as an \"add-on\" if both are possible */\r\n            <label className=\"choice-label\">\r\n                <input onClick={() => handleSize(price)} type=\"radio\" name=\"size\" value={name} defaultChecked={(name == \"Individual\" || !(\"Individual\" in values.get(\"price\")))} required />\r\n                <span onClick={() => handleSize(price)} className=\"label-title\">{(hasBothPrices) ? name + \" +($\" + parseFloat(price - values.get(\"price\").Individual).toFixed(2) + \")\": name}</span>\r\n            </label>\r\n        );\r\n    }\r\n    // will be used when family price is introduced to toggle between\r\n    const handleSize = (newPrice) => {\r\n        setCurrPrice(newPrice);\r\n        // currPrice has yet to update, so still using newPrice\r\n        // fix to 2 decimal places\r\n        setTotalPrice((parseFloat(accommodationCost) + newPrice * (quantity)).toFixed(2));\r\n    }\r\n\r\n    const renderAccommodations = () => {\r\n        // return nothing if there are no accommodations\r\n        if(values.get(\"accommodations\").length == 0) return;\r\n        else {\r\n            return (\r\n                /** Header */\r\n                <div className=\"section accommodations-section\">\r\n                <div className=\"section-title\">\r\n                    <h3>Accommodations</h3>\r\n                    <i>optional</i>\r\n                </div>\r\n                {/* map through and render all accommodations */}\r\n                {values.get(\"accommodations\").map((accommodation) => {\r\n                    return(\r\n                        <label className=\"choice-label\">\r\n                            <input type=\"checkbox\" name=\"accommodations\" value={accommodation.Description} id={accommodation.Description} onChange={(e) => handleAccommodation(e, accommodation.Price)} />\r\n                            <span className=\"label-title\">{accommodation.Description + \" +($\" + parseFloat(accommodation.Price).toFixed(2) + \")\"}</span>\r\n                        </label>\r\n                    );\r\n                })}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const numDietaryInfo = () => {\r\n        const dietaryInfo = Object.entries(values.get(\"dietary-info\"));\r\n        var count = 0;\r\n        for (const [key, value] of dietaryInfo) {\r\n            if(value) count++;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    const renderDietaryInfo = () => {\r\n        if (numDietaryInfo() == 0) return;\r\n        else {\r\n            return (\r\n                <>\r\n                <hr/>\r\n                <p className=\"dietary-info\">\r\n                    {(values.get(\"dietary-info\").vegan) ? \"*Vegan\" : null}\r\n                    {(values.get(\"dietary-info\").vegan) ? <br/> : null}\r\n                    {(values.get(\"dietary-info\").vegetarian) ? \"*Vegetarian\" : null}\r\n                    {(values.get(\"dietary-info\").vegetarian) ? <br/> : null}\r\n                    {(values.get(\"dietary-info\").glutenFree) ? \"*Gluten-free\" : null}\r\n                </p>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/** div that fades out the background */}\r\n            <div className=\"greyout\" onClick={togglePopup}></div>\r\n            <div className=\"menu-item-popup\">\r\n                <span className=\"close-button\" onClick={togglePopup}>+</span>\r\n                <div className=\"group-popup\">\r\n\r\n                    {/** Left side with dish details */}\r\n                    <div className=\"left-popup\">\r\n                        <div className=\"popup-image\" style={{backgroundImage: \"url(\" + values.get(\"image\") + \")\", backgroundSize:\"cover\"}}>\r\n                            <div className=\"popup-image-price\"><h3>{\"$\" + parseFloat(currPrice).toFixed(2)}</h3></div>\r\n                        </div>\r\n                        <div className=\"popup-item-info\">\r\n                            <h3 className=\"title-popup\">{values.get(\"title\")}</h3>\r\n                            <p className=\"desc-popup\">{values.get(\"description\")}</p>\r\n                            {renderDietaryInfo()}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/** right side with order options */}\r\n                    <div className=\"right-popup\">\r\n                        <form onSubmit={processForm} id=\"popup-form\">\r\n\r\n                            {/** sizing options */}\r\n                            <div className=\"section size-section\">\r\n                                <div className=\"section-title\">\r\n                                    <h3>Choose Size</h3>\r\n                                    <i>required</i>\r\n                                </div>\r\n                                {/** checks to ensure individual/family sizes exist; conditionally displays family size as an \"add-on\" if both are possible */}\r\n                                {(\"Individual\" in values.get(\"price\")) ? renderSize(\"Individual\", values.get(\"price\").Individual, false) : null}\r\n                                {(\"Family\" in values.get(\"price\")) ? renderSize(\"Family\", values.get(\"price\").Family, (\"Individual\" in values.get(\"price\"))) : null}\r\n                            </div>\r\n\r\n                            {/** accommodations options */}\r\n                            {renderAccommodations()}\r\n\r\n                            {/** custom instructions text area */}\r\n                            <div className=\"section instructions-section\">\r\n                                <div className=\"section-title\">\r\n                                    <h3>Special Instructions</h3>\r\n                                    <i>optional</i>\r\n                                </div>\r\n                                <p className=\"instructions-note\">Special accommodations can be made for orders placed in advanced but are not guaranteed, please <a href=\"/contact\">contact us</a> directly for more info.</p>\r\n                                <textarea name=\"instructions\" maxLength=\"75\" className=\"instructions-textarea\" />\r\n                            </div>\r\n\r\n                            {/** quantity selection */}\r\n                            <div className=\"section quantity-section\">\r\n                                <div className=\"section-title\"><h3>Quantity</h3></div>\r\n                                <div className=\"quantity-buttons\">\r\n                                    <button type=\"button\" className=\"button decrease-button\" onClick={() => {changeQuantity(\"-\");}\r\n                                    }><img src={minus} alt=\"Decrease Quantity\" /></button>\r\n                                    <span className=\"quantity-number\">{quantity}</span>\r\n                                    <button type=\"button\" className=\"button increase-button\" \r\n                                    onClick={() => {changeQuantity(\"+\");}}><img src={plus} alt=\"Increase Quantity\" /></button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/** hidden fields to pass along to the total price and  quantity */}\r\n                            <input name=\"name\" type=\"hidden\" value={values.get(\"title\")} />\r\n                            <input name=\"price\" type=\"hidden\" value={parseFloat(totalPrice).toFixed(2)} />\r\n                            <input name=\"quantity\" type=\"hidden\" value={quantity} />\r\n                            <input name=\"description\" type=\"hidden\" value={values.get(\"description\")} />\r\n                            <input className=\"submit-order-button\" type=\"submit\" value={\"Add \" + quantity + \" to cart: $\" + totalPrice} />\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n  \r\n    export default MenuItemPopup;\r\n","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/MenuItem.js",["216","217"],"/**\n * Component responsible for displaying and formatting items on menu. Bases \n * information on props and displays them accordingly. \n * \n * @summary   Component representing items in the menu.\n * @author    Navid Boloorian\n */\n\nimport React from 'react';\nimport \"../css/MenuItem.css\";\nconst config = require('../config');\n\nconst MenuItem = ( {description, image, price, title, togglePopup, dietaryInfo, priceOptions, accommodations} ) => {\n    return (\n      <div className=\"menu-item\" onClick={() => togglePopup(title, description, priceOptions, image, dietaryInfo, accommodations)}>\n        <div className=\"menu-image\">\n          <img src={image}></img>\n        </div>\n        <div className=\"menu-text\">\n          <h3 className=\"menu-name\">{title}</h3>\n          <p className=\"menu-description\">{description}</p>\n        </div>\n        <div className=\"menu-absolutes\">\n          <p className=\"menu-price\">${price}</p>\n        </div>\n      </div>\n    );\n}\n  \nexport default MenuItem;","/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/util/Auth.js",[],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/AddMenuItemModal.js",["218","219"],"/Users/luckilyclueless/Desktop/Projects/TSE/20-21/UWEAST-Community-Kitchen/frontend/src/components/EditMenuItemModal.js",["220","221"],{"ruleId":"222","severity":1,"message":"223","line":16,"column":8,"nodeType":"224","messageId":"225","endLine":16,"endColumn":14},{"ruleId":"226","severity":1,"message":"227","line":32,"column":10,"nodeType":"228","endLine":32,"endColumn":12,"suggestions":"229"},{"ruleId":"222","severity":1,"message":"230","line":7,"column":7,"nodeType":"224","messageId":"225","endLine":7,"endColumn":18},{"ruleId":"226","severity":1,"message":"227","line":77,"column":6,"nodeType":"228","endLine":77,"endColumn":8,"suggestions":"231"},{"ruleId":"222","severity":1,"message":"232","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":14},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"226","severity":1,"message":"227","line":79,"column":6,"nodeType":"228","endLine":79,"endColumn":8,"suggestions":"237"},{"ruleId":"222","severity":1,"message":"230","line":10,"column":7,"nodeType":"224","messageId":"225","endLine":10,"endColumn":18},{"ruleId":"222","severity":1,"message":"238","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"239","line":6,"column":7,"nodeType":"224","messageId":"225","endLine":6,"endColumn":13},{"ruleId":"226","severity":1,"message":"240","line":195,"column":8,"nodeType":"228","endLine":195,"endColumn":14,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":53,"column":31,"nodeType":"244","messageId":"245","endLine":53,"endColumn":33},{"ruleId":"233","replacedBy":"246"},{"ruleId":"235","replacedBy":"247"},{"ruleId":"222","severity":1,"message":"248","line":179,"column":12,"nodeType":"224","messageId":"225","endLine":179,"endColumn":26},{"ruleId":"249","severity":1,"message":"250","line":19,"column":5,"nodeType":"251","messageId":"252","endLine":19,"endColumn":47},{"ruleId":"249","severity":1,"message":"250","line":26,"column":5,"nodeType":"251","messageId":"252","endLine":26,"endColumn":66},{"ruleId":"249","severity":1,"message":"250","line":30,"column":5,"nodeType":"251","messageId":"252","endLine":30,"endColumn":59},{"ruleId":"226","severity":1,"message":"227","line":41,"column":10,"nodeType":"228","endLine":41,"endColumn":12,"suggestions":"253"},{"ruleId":"249","severity":1,"message":"250","line":43,"column":5,"nodeType":"251","messageId":"252","endLine":43,"endColumn":109},{"ruleId":"249","severity":1,"message":"250","line":52,"column":5,"nodeType":"251","messageId":"252","endLine":52,"endColumn":74},{"ruleId":"222","severity":1,"message":"254","line":1,"column":28,"nodeType":"224","messageId":"225","endLine":1,"endColumn":37},{"ruleId":"255","severity":1,"message":"256","line":24,"column":21,"nodeType":"257","endLine":24,"endColumn":31},{"ruleId":"255","severity":1,"message":"256","line":25,"column":21,"nodeType":"257","endLine":25,"endColumn":31},{"ruleId":"255","severity":1,"message":"256","line":26,"column":21,"nodeType":"257","endLine":26,"endColumn":31},{"ruleId":"255","severity":1,"message":"256","line":27,"column":21,"nodeType":"257","endLine":27,"endColumn":31},{"ruleId":"255","severity":1,"message":"256","line":28,"column":21,"nodeType":"257","endLine":28,"endColumn":31},{"ruleId":"222","severity":1,"message":"258","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":26},{"ruleId":"222","severity":1,"message":"259","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":17},{"ruleId":"222","severity":1,"message":"230","line":6,"column":7,"nodeType":"224","messageId":"225","endLine":6,"endColumn":18},{"ruleId":"222","severity":1,"message":"260","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":24},{"ruleId":"222","severity":1,"message":"239","line":4,"column":7,"nodeType":"224","messageId":"225","endLine":4,"endColumn":13},{"ruleId":"222","severity":1,"message":"239","line":5,"column":7,"nodeType":"224","messageId":"225","endLine":5,"endColumn":13},{"ruleId":"242","severity":1,"message":"243","line":31,"column":21,"nodeType":"244","messageId":"245","endLine":31,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":40,"column":35,"nodeType":"244","messageId":"245","endLine":40,"endColumn":37},{"ruleId":"222","severity":1,"message":"261","line":71,"column":9,"nodeType":"224","messageId":"225","endLine":71,"endColumn":13},{"ruleId":"242","severity":1,"message":"243","line":36,"column":27,"nodeType":"244","messageId":"245","endLine":36,"endColumn":29},{"ruleId":"242","severity":1,"message":"243","line":42,"column":33,"nodeType":"244","messageId":"245","endLine":42,"endColumn":35},{"ruleId":"242","severity":1,"message":"243","line":118,"column":28,"nodeType":"244","messageId":"245","endLine":118,"endColumn":30},{"ruleId":"242","severity":1,"message":"243","line":120,"column":35,"nodeType":"244","messageId":"245","endLine":120,"endColumn":37},{"ruleId":"222","severity":1,"message":"230","line":6,"column":7,"nodeType":"224","messageId":"225","endLine":6,"endColumn":18},{"ruleId":"262","severity":1,"message":"263","line":15,"column":74,"nodeType":"264","endLine":15,"endColumn":83},{"ruleId":"242","severity":1,"message":"265","line":12,"column":73,"nodeType":"244","messageId":"245","endLine":12,"endColumn":75},{"ruleId":"222","severity":1,"message":"258","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":26},{"ruleId":"222","severity":1,"message":"239","line":4,"column":7,"nodeType":"224","messageId":"225","endLine":4,"endColumn":13},{"ruleId":"222","severity":1,"message":"230","line":7,"column":7,"nodeType":"224","messageId":"225","endLine":7,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":11,"column":46,"nodeType":"268","messageId":"269","endLine":11,"endColumn":57},{"ruleId":"226","severity":1,"message":"270","line":42,"column":6,"nodeType":"228","endLine":42,"endColumn":20,"suggestions":"271"},{"ruleId":"242","severity":1,"message":"243","line":16,"column":17,"nodeType":"244","messageId":"245","endLine":16,"endColumn":19},{"ruleId":"242","severity":1,"message":"243","line":21,"column":22,"nodeType":"244","messageId":"245","endLine":21,"endColumn":24},{"ruleId":"242","severity":1,"message":"243","line":48,"column":118,"nodeType":"244","messageId":"245","endLine":48,"endColumn":120},{"ruleId":"242","severity":1,"message":"243","line":63,"column":48,"nodeType":"244","messageId":"245","endLine":63,"endColumn":50},{"ruleId":"222","severity":1,"message":"272","line":89,"column":21,"nodeType":"224","messageId":"225","endLine":89,"endColumn":24},{"ruleId":"242","severity":1,"message":"243","line":96,"column":30,"nodeType":"244","messageId":"245","endLine":96,"endColumn":32},{"ruleId":"222","severity":1,"message":"239","line":3,"column":7,"nodeType":"224","messageId":"225","endLine":3,"endColumn":13},{"ruleId":"273","severity":1,"message":"274","line":9,"column":11,"nodeType":"275","endLine":9,"endColumn":28},{"ruleId":"276","severity":1,"message":"277","line":320,"column":63,"nodeType":"278","messageId":"279","endLine":320,"endColumn":65},{"ruleId":"276","severity":1,"message":"277","line":322,"column":94,"nodeType":"278","messageId":"279","endLine":322,"endColumn":96},{"ruleId":"276","severity":1,"message":"277","line":326,"column":63,"nodeType":"278","messageId":"279","endLine":326,"endColumn":65},{"ruleId":"276","severity":1,"message":"277","line":328,"column":94,"nodeType":"278","messageId":"279","endLine":328,"endColumn":96},"no-unused-vars","'Orders' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["280"],"'BACKEND_URL' is assigned a value but never used.",["281"],"'NavBar' is defined but never used.","no-native-reassign",["282"],"no-negated-in-lhs",["283"],["284"],"'useState' is defined but never used.","'config' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'history' and 'paypalOrderObject'. Either include them or remove the dependency array.",["285"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["282"],["283"],"'checkboxUpdate' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["286"],"'useEffect' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Component' is defined but never used.","'SearchBar' is defined but never used.","'MenuFilterButton' is defined but never used.","'json' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '!==' and instead saw '!='.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","React Hook useEffect has a missing dependency: 'menuItemValues'. Either include it or remove the dependency array.",["287"],"'key' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",{"desc":"288","fix":"289"},{"desc":"288","fix":"290"},"no-global-assign","no-unsafe-negation",{"desc":"288","fix":"291"},{"desc":"292","fix":"293"},{"desc":"288","fix":"294"},{"desc":"295","fix":"296"},"Update the dependencies array to be: [state]",{"range":"297","text":"298"},{"range":"299","text":"298"},{"range":"300","text":"298"},"Update the dependencies array to be: [cart, history, paypalOrderObject]",{"range":"301","text":"302"},{"range":"303","text":"298"},"Update the dependencies array to be: [categoryName, menuItemValues]",{"range":"304","text":"305"},[973,975],"[state]",[1795,1797],[1888,1890],[7377,7383],"[cart, history, paypalOrderObject]",[1305,1307],[1594,1608],"[categoryName, menuItemValues]"]